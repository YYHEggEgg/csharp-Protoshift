// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: VintageMarketStartStorePlayRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from VintageMarketStartStorePlayRsp.proto</summary>
public static partial class VintageMarketStartStorePlayRspReflection {

  #region Descriptor
  /// <summary>File descriptor for VintageMarketStartStorePlayRsp.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static VintageMarketStartStorePlayRspReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiRWaW50YWdlTWFya2V0U3RhcnRTdG9yZVBsYXlSc3AucHJvdG8ifAoeVmlu",
          "dGFnZU1hcmtldFN0YXJ0U3RvcmVQbGF5UnNwEhkKEXByZXZfcm91bmRfY29p",
          "bl9iGAcgASgNEhMKC3N0b3JlX3JvdW5kGAIgASgNEhkKEXByZXZfcm91bmRf",
          "Y29pbl9jGAUgASgNEg8KB3JldGNvZGUYCCABKAVCHgocZW11LmdyYXNzY3V0",
          "dGVyLm5ldC5vbGRwcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::VintageMarketStartStorePlayRsp), global::VintageMarketStartStorePlayRsp.Parser, new[]{ "PrevRoundCoinB", "StoreRound", "PrevRoundCoinC", "Retcode" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// CmdId: 22130
/// EnetChannelId: 0
/// EnetIsReliable: true
/// </summary>
public sealed partial class VintageMarketStartStorePlayRsp : pb::IMessage<VintageMarketStartStorePlayRsp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<VintageMarketStartStorePlayRsp> _parser = new pb::MessageParser<VintageMarketStartStorePlayRsp>(() => new VintageMarketStartStorePlayRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<VintageMarketStartStorePlayRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::VintageMarketStartStorePlayRspReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public VintageMarketStartStorePlayRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public VintageMarketStartStorePlayRsp(VintageMarketStartStorePlayRsp other) : this() {
    prevRoundCoinB_ = other.prevRoundCoinB_;
    storeRound_ = other.storeRound_;
    prevRoundCoinC_ = other.prevRoundCoinC_;
    retcode_ = other.retcode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public VintageMarketStartStorePlayRsp Clone() {
    return new VintageMarketStartStorePlayRsp(this);
  }

  /// <summary>Field number for the "prev_round_coin_b" field.</summary>
  public const int PrevRoundCoinBFieldNumber = 7;
  private uint prevRoundCoinB_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PrevRoundCoinB {
    get { return prevRoundCoinB_; }
    set {
      prevRoundCoinB_ = value;
    }
  }

  /// <summary>Field number for the "store_round" field.</summary>
  public const int StoreRoundFieldNumber = 2;
  private uint storeRound_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StoreRound {
    get { return storeRound_; }
    set {
      storeRound_ = value;
    }
  }

  /// <summary>Field number for the "prev_round_coin_c" field.</summary>
  public const int PrevRoundCoinCFieldNumber = 5;
  private uint prevRoundCoinC_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PrevRoundCoinC {
    get { return prevRoundCoinC_; }
    set {
      prevRoundCoinC_ = value;
    }
  }

  /// <summary>Field number for the "retcode" field.</summary>
  public const int RetcodeFieldNumber = 8;
  private int retcode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Retcode {
    get { return retcode_; }
    set {
      retcode_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as VintageMarketStartStorePlayRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(VintageMarketStartStorePlayRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PrevRoundCoinB != other.PrevRoundCoinB) return false;
    if (StoreRound != other.StoreRound) return false;
    if (PrevRoundCoinC != other.PrevRoundCoinC) return false;
    if (Retcode != other.Retcode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (PrevRoundCoinB != 0) hash ^= PrevRoundCoinB.GetHashCode();
    if (StoreRound != 0) hash ^= StoreRound.GetHashCode();
    if (PrevRoundCoinC != 0) hash ^= PrevRoundCoinC.GetHashCode();
    if (Retcode != 0) hash ^= Retcode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (StoreRound != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StoreRound);
    }
    if (PrevRoundCoinC != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(PrevRoundCoinC);
    }
    if (PrevRoundCoinB != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(PrevRoundCoinB);
    }
    if (Retcode != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Retcode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (StoreRound != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(StoreRound);
    }
    if (PrevRoundCoinC != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(PrevRoundCoinC);
    }
    if (PrevRoundCoinB != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(PrevRoundCoinB);
    }
    if (Retcode != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(Retcode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (PrevRoundCoinB != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrevRoundCoinB);
    }
    if (StoreRound != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StoreRound);
    }
    if (PrevRoundCoinC != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrevRoundCoinC);
    }
    if (Retcode != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(VintageMarketStartStorePlayRsp other) {
    if (other == null) {
      return;
    }
    if (other.PrevRoundCoinB != 0) {
      PrevRoundCoinB = other.PrevRoundCoinB;
    }
    if (other.StoreRound != 0) {
      StoreRound = other.StoreRound;
    }
    if (other.PrevRoundCoinC != 0) {
      PrevRoundCoinC = other.PrevRoundCoinC;
    }
    if (other.Retcode != 0) {
      Retcode = other.Retcode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          StoreRound = input.ReadUInt32();
          break;
        }
        case 40: {
          PrevRoundCoinC = input.ReadUInt32();
          break;
        }
        case 56: {
          PrevRoundCoinB = input.ReadUInt32();
          break;
        }
        case 64: {
          Retcode = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          StoreRound = input.ReadUInt32();
          break;
        }
        case 40: {
          PrevRoundCoinC = input.ReadUInt32();
          break;
        }
        case 56: {
          PrevRoundCoinB = input.ReadUInt32();
          break;
        }
        case 64: {
          Retcode = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
