// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RoguelikeDungeonSettleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OldProtos {

  /// <summary>Holder for reflection information generated from RoguelikeDungeonSettleInfo.proto</summary>
  public static partial class RoguelikeDungeonSettleInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for RoguelikeDungeonSettleInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoguelikeDungeonSettleInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBSb2d1ZWxpa2VEdW5nZW9uU2V0dGxlSW5mby5wcm90bxodUm9ndWVsaWtl",
            "U2V0dGxlQ29pbkluZm8ucHJvdG8i8QIKGlJvZ3VlbGlrZUR1bmdlb25TZXR0",
            "bGVJbmZvEhAKCHN0YWdlX2lkGAUgASgNEhYKDmlzX2ZpbmFsX2xldmVsGA8g",
            "ASgIEmUKH2ZpbmlzaGVkX2NoYWxsZW5nZV9jZWxsX251bV9tYXAYAyADKAsy",
            "PC5Sb2d1ZWxpa2VEdW5nZW9uU2V0dGxlSW5mby5GaW5pc2hlZENoYWxsZW5n",
            "ZUNlbGxOdW1NYXBFbnRyeRIdChVpc19jb2luX2NfcmVhY2hfbGltaXQYDSAB",
            "KAgSEQoJY3VyX2xldmVsGAkgASgNEhgKEHRvdGFsX2NvaW5fYl9udW0YBiAB",
            "KA0SGAoQdG90YWxfY29pbl9jX251bRgKIAEoDRpcCiBGaW5pc2hlZENoYWxs",
            "ZW5nZUNlbGxOdW1NYXBFbnRyeRILCgNrZXkYASABKA0SJwoFdmFsdWUYAiAB",
            "KAsyGC5Sb2d1ZWxpa2VTZXR0bGVDb2luSW5mbzoCOAFCDKoCCU9sZFByb3Rv",
            "c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OldProtos.RoguelikeSettleCoinInfoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OldProtos.RoguelikeDungeonSettleInfo), global::OldProtos.RoguelikeDungeonSettleInfo.Parser, new[]{ "StageId", "IsFinalLevel", "FinishedChallengeCellNumMap", "IsCoinCReachLimit", "CurLevel", "TotalCoinBNum", "TotalCoinCNum" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RoguelikeDungeonSettleInfo : pb::IMessage<RoguelikeDungeonSettleInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoguelikeDungeonSettleInfo> _parser = new pb::MessageParser<RoguelikeDungeonSettleInfo>(() => new RoguelikeDungeonSettleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoguelikeDungeonSettleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OldProtos.RoguelikeDungeonSettleInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoguelikeDungeonSettleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoguelikeDungeonSettleInfo(RoguelikeDungeonSettleInfo other) : this() {
      stageId_ = other.stageId_;
      isFinalLevel_ = other.isFinalLevel_;
      finishedChallengeCellNumMap_ = other.finishedChallengeCellNumMap_.Clone();
      isCoinCReachLimit_ = other.isCoinCReachLimit_;
      curLevel_ = other.curLevel_;
      totalCoinBNum_ = other.totalCoinBNum_;
      totalCoinCNum_ = other.totalCoinCNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoguelikeDungeonSettleInfo Clone() {
      return new RoguelikeDungeonSettleInfo(this);
    }

    /// <summary>Field number for the "stage_id" field.</summary>
    public const int StageIdFieldNumber = 5;
    private uint stageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StageId {
      get { return stageId_; }
      set {
        stageId_ = value;
      }
    }

    /// <summary>Field number for the "is_final_level" field.</summary>
    public const int IsFinalLevelFieldNumber = 15;
    private bool isFinalLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinalLevel {
      get { return isFinalLevel_; }
      set {
        isFinalLevel_ = value;
      }
    }

    /// <summary>Field number for the "finished_challenge_cell_num_map" field.</summary>
    public const int FinishedChallengeCellNumMapFieldNumber = 3;
    private static readonly pbc::MapField<uint, global::OldProtos.RoguelikeSettleCoinInfo>.Codec _map_finishedChallengeCellNumMap_codec
        = new pbc::MapField<uint, global::OldProtos.RoguelikeSettleCoinInfo>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForMessage(18, global::OldProtos.RoguelikeSettleCoinInfo.Parser), 26);
    private readonly pbc::MapField<uint, global::OldProtos.RoguelikeSettleCoinInfo> finishedChallengeCellNumMap_ = new pbc::MapField<uint, global::OldProtos.RoguelikeSettleCoinInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<uint, global::OldProtos.RoguelikeSettleCoinInfo> FinishedChallengeCellNumMap {
      get { return finishedChallengeCellNumMap_; }
    }

    /// <summary>Field number for the "is_coin_c_reach_limit" field.</summary>
    public const int IsCoinCReachLimitFieldNumber = 13;
    private bool isCoinCReachLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCoinCReachLimit {
      get { return isCoinCReachLimit_; }
      set {
        isCoinCReachLimit_ = value;
      }
    }

    /// <summary>Field number for the "cur_level" field.</summary>
    public const int CurLevelFieldNumber = 9;
    private uint curLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurLevel {
      get { return curLevel_; }
      set {
        curLevel_ = value;
      }
    }

    /// <summary>Field number for the "total_coin_b_num" field.</summary>
    public const int TotalCoinBNumFieldNumber = 6;
    private uint totalCoinBNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalCoinBNum {
      get { return totalCoinBNum_; }
      set {
        totalCoinBNum_ = value;
      }
    }

    /// <summary>Field number for the "total_coin_c_num" field.</summary>
    public const int TotalCoinCNumFieldNumber = 10;
    private uint totalCoinCNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalCoinCNum {
      get { return totalCoinCNum_; }
      set {
        totalCoinCNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoguelikeDungeonSettleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoguelikeDungeonSettleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StageId != other.StageId) return false;
      if (IsFinalLevel != other.IsFinalLevel) return false;
      if (!FinishedChallengeCellNumMap.Equals(other.FinishedChallengeCellNumMap)) return false;
      if (IsCoinCReachLimit != other.IsCoinCReachLimit) return false;
      if (CurLevel != other.CurLevel) return false;
      if (TotalCoinBNum != other.TotalCoinBNum) return false;
      if (TotalCoinCNum != other.TotalCoinCNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StageId != 0) hash ^= StageId.GetHashCode();
      if (IsFinalLevel != false) hash ^= IsFinalLevel.GetHashCode();
      hash ^= FinishedChallengeCellNumMap.GetHashCode();
      if (IsCoinCReachLimit != false) hash ^= IsCoinCReachLimit.GetHashCode();
      if (CurLevel != 0) hash ^= CurLevel.GetHashCode();
      if (TotalCoinBNum != 0) hash ^= TotalCoinBNum.GetHashCode();
      if (TotalCoinCNum != 0) hash ^= TotalCoinCNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      finishedChallengeCellNumMap_.WriteTo(output, _map_finishedChallengeCellNumMap_codec);
      if (StageId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(StageId);
      }
      if (TotalCoinBNum != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TotalCoinBNum);
      }
      if (CurLevel != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(CurLevel);
      }
      if (TotalCoinCNum != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TotalCoinCNum);
      }
      if (IsCoinCReachLimit != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsCoinCReachLimit);
      }
      if (IsFinalLevel != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsFinalLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      finishedChallengeCellNumMap_.WriteTo(ref output, _map_finishedChallengeCellNumMap_codec);
      if (StageId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(StageId);
      }
      if (TotalCoinBNum != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TotalCoinBNum);
      }
      if (CurLevel != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(CurLevel);
      }
      if (TotalCoinCNum != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(TotalCoinCNum);
      }
      if (IsCoinCReachLimit != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsCoinCReachLimit);
      }
      if (IsFinalLevel != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsFinalLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
      }
      if (IsFinalLevel != false) {
        size += 1 + 1;
      }
      size += finishedChallengeCellNumMap_.CalculateSize(_map_finishedChallengeCellNumMap_codec);
      if (IsCoinCReachLimit != false) {
        size += 1 + 1;
      }
      if (CurLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurLevel);
      }
      if (TotalCoinBNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalCoinBNum);
      }
      if (TotalCoinCNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalCoinCNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoguelikeDungeonSettleInfo other) {
      if (other == null) {
        return;
      }
      if (other.StageId != 0) {
        StageId = other.StageId;
      }
      if (other.IsFinalLevel != false) {
        IsFinalLevel = other.IsFinalLevel;
      }
      finishedChallengeCellNumMap_.MergeFrom(other.finishedChallengeCellNumMap_);
      if (other.IsCoinCReachLimit != false) {
        IsCoinCReachLimit = other.IsCoinCReachLimit;
      }
      if (other.CurLevel != 0) {
        CurLevel = other.CurLevel;
      }
      if (other.TotalCoinBNum != 0) {
        TotalCoinBNum = other.TotalCoinBNum;
      }
      if (other.TotalCoinCNum != 0) {
        TotalCoinCNum = other.TotalCoinCNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            finishedChallengeCellNumMap_.AddEntriesFrom(input, _map_finishedChallengeCellNumMap_codec);
            break;
          }
          case 40: {
            StageId = input.ReadUInt32();
            break;
          }
          case 48: {
            TotalCoinBNum = input.ReadUInt32();
            break;
          }
          case 72: {
            CurLevel = input.ReadUInt32();
            break;
          }
          case 80: {
            TotalCoinCNum = input.ReadUInt32();
            break;
          }
          case 104: {
            IsCoinCReachLimit = input.ReadBool();
            break;
          }
          case 120: {
            IsFinalLevel = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            finishedChallengeCellNumMap_.AddEntriesFrom(ref input, _map_finishedChallengeCellNumMap_codec);
            break;
          }
          case 40: {
            StageId = input.ReadUInt32();
            break;
          }
          case 48: {
            TotalCoinBNum = input.ReadUInt32();
            break;
          }
          case 72: {
            CurLevel = input.ReadUInt32();
            break;
          }
          case 80: {
            TotalCoinCNum = input.ReadUInt32();
            break;
          }
          case 104: {
            IsCoinCReachLimit = input.ReadBool();
            break;
          }
          case 120: {
            IsFinalLevel = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
