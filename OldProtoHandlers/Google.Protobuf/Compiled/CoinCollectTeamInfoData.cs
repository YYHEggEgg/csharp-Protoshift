// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CoinCollectTeamInfoData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from CoinCollectTeamInfoData.proto</summary>
public static partial class CoinCollectTeamInfoDataReflection {

  #region Descriptor
  /// <summary>File descriptor for CoinCollectTeamInfoData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CoinCollectTeamInfoDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch1Db2luQ29sbGVjdFRlYW1JbmZvRGF0YS5wcm90byKnAQoXQ29pbkNvbGxl",
          "Y3RUZWFtSW5mb0RhdGESHgoWYXZhdGFyX2Nvc3R1bWVfaWRfbGlzdBgMIAMo",
          "DRISCgpwbGF5ZXJfdWlkGAIgASgNEg8KB2lzX2hvc3QYDiABKAgSFwoPY2hv",
          "b3NlX3NraWxsX25vGAQgASgNEhYKDmF2YXRhcl9sdl9saXN0GAogAygNEhYK",
          "DmF2YXRhcl9pZF9saXN0GAkgAygNQh4KHGVtdS5ncmFzc2N1dHRlci5uZXQu",
          "b2xkcHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CoinCollectTeamInfoData), global::CoinCollectTeamInfoData.Parser, new[]{ "AvatarCostumeIdList", "PlayerUid", "IsHost", "ChooseSkillNo", "AvatarLvList", "AvatarIdList" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CoinCollectTeamInfoData : pb::IMessage<CoinCollectTeamInfoData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CoinCollectTeamInfoData> _parser = new pb::MessageParser<CoinCollectTeamInfoData>(() => new CoinCollectTeamInfoData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CoinCollectTeamInfoData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CoinCollectTeamInfoDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CoinCollectTeamInfoData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CoinCollectTeamInfoData(CoinCollectTeamInfoData other) : this() {
    avatarCostumeIdList_ = other.avatarCostumeIdList_.Clone();
    playerUid_ = other.playerUid_;
    isHost_ = other.isHost_;
    chooseSkillNo_ = other.chooseSkillNo_;
    avatarLvList_ = other.avatarLvList_.Clone();
    avatarIdList_ = other.avatarIdList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CoinCollectTeamInfoData Clone() {
    return new CoinCollectTeamInfoData(this);
  }

  /// <summary>Field number for the "avatar_costume_id_list" field.</summary>
  public const int AvatarCostumeIdListFieldNumber = 12;
  private static readonly pb::FieldCodec<uint> _repeated_avatarCostumeIdList_codec
      = pb::FieldCodec.ForUInt32(98);
  private readonly pbc::RepeatedField<uint> avatarCostumeIdList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AvatarCostumeIdList {
    get { return avatarCostumeIdList_; }
  }

  /// <summary>Field number for the "player_uid" field.</summary>
  public const int PlayerUidFieldNumber = 2;
  private uint playerUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerUid {
    get { return playerUid_; }
    set {
      playerUid_ = value;
    }
  }

  /// <summary>Field number for the "is_host" field.</summary>
  public const int IsHostFieldNumber = 14;
  private bool isHost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsHost {
    get { return isHost_; }
    set {
      isHost_ = value;
    }
  }

  /// <summary>Field number for the "choose_skill_no" field.</summary>
  public const int ChooseSkillNoFieldNumber = 4;
  private uint chooseSkillNo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ChooseSkillNo {
    get { return chooseSkillNo_; }
    set {
      chooseSkillNo_ = value;
    }
  }

  /// <summary>Field number for the "avatar_lv_list" field.</summary>
  public const int AvatarLvListFieldNumber = 10;
  private static readonly pb::FieldCodec<uint> _repeated_avatarLvList_codec
      = pb::FieldCodec.ForUInt32(82);
  private readonly pbc::RepeatedField<uint> avatarLvList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AvatarLvList {
    get { return avatarLvList_; }
  }

  /// <summary>Field number for the "avatar_id_list" field.</summary>
  public const int AvatarIdListFieldNumber = 9;
  private static readonly pb::FieldCodec<uint> _repeated_avatarIdList_codec
      = pb::FieldCodec.ForUInt32(74);
  private readonly pbc::RepeatedField<uint> avatarIdList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AvatarIdList {
    get { return avatarIdList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CoinCollectTeamInfoData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CoinCollectTeamInfoData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!avatarCostumeIdList_.Equals(other.avatarCostumeIdList_)) return false;
    if (PlayerUid != other.PlayerUid) return false;
    if (IsHost != other.IsHost) return false;
    if (ChooseSkillNo != other.ChooseSkillNo) return false;
    if(!avatarLvList_.Equals(other.avatarLvList_)) return false;
    if(!avatarIdList_.Equals(other.avatarIdList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= avatarCostumeIdList_.GetHashCode();
    if (PlayerUid != 0) hash ^= PlayerUid.GetHashCode();
    if (IsHost != false) hash ^= IsHost.GetHashCode();
    if (ChooseSkillNo != 0) hash ^= ChooseSkillNo.GetHashCode();
    hash ^= avatarLvList_.GetHashCode();
    hash ^= avatarIdList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (PlayerUid != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PlayerUid);
    }
    if (ChooseSkillNo != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(ChooseSkillNo);
    }
    avatarIdList_.WriteTo(output, _repeated_avatarIdList_codec);
    avatarLvList_.WriteTo(output, _repeated_avatarLvList_codec);
    avatarCostumeIdList_.WriteTo(output, _repeated_avatarCostumeIdList_codec);
    if (IsHost != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsHost);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (PlayerUid != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(PlayerUid);
    }
    if (ChooseSkillNo != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(ChooseSkillNo);
    }
    avatarIdList_.WriteTo(ref output, _repeated_avatarIdList_codec);
    avatarLvList_.WriteTo(ref output, _repeated_avatarLvList_codec);
    avatarCostumeIdList_.WriteTo(ref output, _repeated_avatarCostumeIdList_codec);
    if (IsHost != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsHost);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += avatarCostumeIdList_.CalculateSize(_repeated_avatarCostumeIdList_codec);
    if (PlayerUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerUid);
    }
    if (IsHost != false) {
      size += 1 + 1;
    }
    if (ChooseSkillNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChooseSkillNo);
    }
    size += avatarLvList_.CalculateSize(_repeated_avatarLvList_codec);
    size += avatarIdList_.CalculateSize(_repeated_avatarIdList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CoinCollectTeamInfoData other) {
    if (other == null) {
      return;
    }
    avatarCostumeIdList_.Add(other.avatarCostumeIdList_);
    if (other.PlayerUid != 0) {
      PlayerUid = other.PlayerUid;
    }
    if (other.IsHost != false) {
      IsHost = other.IsHost;
    }
    if (other.ChooseSkillNo != 0) {
      ChooseSkillNo = other.ChooseSkillNo;
    }
    avatarLvList_.Add(other.avatarLvList_);
    avatarIdList_.Add(other.avatarIdList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          PlayerUid = input.ReadUInt32();
          break;
        }
        case 32: {
          ChooseSkillNo = input.ReadUInt32();
          break;
        }
        case 74:
        case 72: {
          avatarIdList_.AddEntriesFrom(input, _repeated_avatarIdList_codec);
          break;
        }
        case 82:
        case 80: {
          avatarLvList_.AddEntriesFrom(input, _repeated_avatarLvList_codec);
          break;
        }
        case 98:
        case 96: {
          avatarCostumeIdList_.AddEntriesFrom(input, _repeated_avatarCostumeIdList_codec);
          break;
        }
        case 112: {
          IsHost = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          PlayerUid = input.ReadUInt32();
          break;
        }
        case 32: {
          ChooseSkillNo = input.ReadUInt32();
          break;
        }
        case 74:
        case 72: {
          avatarIdList_.AddEntriesFrom(ref input, _repeated_avatarIdList_codec);
          break;
        }
        case 82:
        case 80: {
          avatarLvList_.AddEntriesFrom(ref input, _repeated_avatarLvList_codec);
          break;
        }
        case 98:
        case 96: {
          avatarCostumeIdList_.AddEntriesFrom(ref input, _repeated_avatarCostumeIdList_codec);
          break;
        }
        case 112: {
          IsHost = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
