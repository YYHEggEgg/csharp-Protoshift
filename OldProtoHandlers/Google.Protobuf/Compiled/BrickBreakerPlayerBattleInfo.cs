// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BrickBreakerPlayerBattleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from BrickBreakerPlayerBattleInfo.proto</summary>
public static partial class BrickBreakerPlayerBattleInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for BrickBreakerPlayerBattleInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BrickBreakerPlayerBattleInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiJCcmlja0JyZWFrZXJQbGF5ZXJCYXR0bGVJbmZvLnByb3RvIp8BChxCcmlj",
          "a0JyZWFrZXJQbGF5ZXJCYXR0bGVJbmZvEhAKCGlzX3JlYWR5GAcgASgIEhIK",
          "CmNvc3R1bWVfaWQYBSADKA0SEAoIbmlja25hbWUYAiABKAkSCwoDdWlkGA0g",
          "ASgNEhEKCWF2YXRhcl9pZBgJIAMoDRITCgtpc19jaGFuZ2luZxgPIAEoCBIS",
          "Cgpza2lsbF9saXN0GAMgAygNQh4KHGVtdS5ncmFzc2N1dHRlci5uZXQub2xk",
          "cHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::BrickBreakerPlayerBattleInfo), global::BrickBreakerPlayerBattleInfo.Parser, new[]{ "IsReady", "CostumeId", "Nickname", "Uid", "AvatarId", "IsChanging", "SkillList" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class BrickBreakerPlayerBattleInfo : pb::IMessage<BrickBreakerPlayerBattleInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BrickBreakerPlayerBattleInfo> _parser = new pb::MessageParser<BrickBreakerPlayerBattleInfo>(() => new BrickBreakerPlayerBattleInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<BrickBreakerPlayerBattleInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BrickBreakerPlayerBattleInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BrickBreakerPlayerBattleInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BrickBreakerPlayerBattleInfo(BrickBreakerPlayerBattleInfo other) : this() {
    isReady_ = other.isReady_;
    costumeId_ = other.costumeId_.Clone();
    nickname_ = other.nickname_;
    uid_ = other.uid_;
    avatarId_ = other.avatarId_.Clone();
    isChanging_ = other.isChanging_;
    skillList_ = other.skillList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BrickBreakerPlayerBattleInfo Clone() {
    return new BrickBreakerPlayerBattleInfo(this);
  }

  /// <summary>Field number for the "is_ready" field.</summary>
  public const int IsReadyFieldNumber = 7;
  private bool isReady_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsReady {
    get { return isReady_; }
    set {
      isReady_ = value;
    }
  }

  /// <summary>Field number for the "costume_id" field.</summary>
  public const int CostumeIdFieldNumber = 5;
  private static readonly pb::FieldCodec<uint> _repeated_costumeId_codec
      = pb::FieldCodec.ForUInt32(42);
  private readonly pbc::RepeatedField<uint> costumeId_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> CostumeId {
    get { return costumeId_; }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 2;
  private string nickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int UidFieldNumber = 13;
  private uint uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "avatar_id" field.</summary>
  public const int AvatarIdFieldNumber = 9;
  private static readonly pb::FieldCodec<uint> _repeated_avatarId_codec
      = pb::FieldCodec.ForUInt32(74);
  private readonly pbc::RepeatedField<uint> avatarId_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> AvatarId {
    get { return avatarId_; }
  }

  /// <summary>Field number for the "is_changing" field.</summary>
  public const int IsChangingFieldNumber = 15;
  private bool isChanging_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsChanging {
    get { return isChanging_; }
    set {
      isChanging_ = value;
    }
  }

  /// <summary>Field number for the "skill_list" field.</summary>
  public const int SkillListFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_skillList_codec
      = pb::FieldCodec.ForUInt32(26);
  private readonly pbc::RepeatedField<uint> skillList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> SkillList {
    get { return skillList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as BrickBreakerPlayerBattleInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(BrickBreakerPlayerBattleInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsReady != other.IsReady) return false;
    if(!costumeId_.Equals(other.costumeId_)) return false;
    if (Nickname != other.Nickname) return false;
    if (Uid != other.Uid) return false;
    if(!avatarId_.Equals(other.avatarId_)) return false;
    if (IsChanging != other.IsChanging) return false;
    if(!skillList_.Equals(other.skillList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (IsReady != false) hash ^= IsReady.GetHashCode();
    hash ^= costumeId_.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Uid != 0) hash ^= Uid.GetHashCode();
    hash ^= avatarId_.GetHashCode();
    if (IsChanging != false) hash ^= IsChanging.GetHashCode();
    hash ^= skillList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    skillList_.WriteTo(output, _repeated_skillList_codec);
    costumeId_.WriteTo(output, _repeated_costumeId_codec);
    if (IsReady != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsReady);
    }
    avatarId_.WriteTo(output, _repeated_avatarId_codec);
    if (Uid != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(Uid);
    }
    if (IsChanging != false) {
      output.WriteRawTag(120);
      output.WriteBool(IsChanging);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Nickname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Nickname);
    }
    skillList_.WriteTo(ref output, _repeated_skillList_codec);
    costumeId_.WriteTo(ref output, _repeated_costumeId_codec);
    if (IsReady != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsReady);
    }
    avatarId_.WriteTo(ref output, _repeated_avatarId_codec);
    if (Uid != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(Uid);
    }
    if (IsChanging != false) {
      output.WriteRawTag(120);
      output.WriteBool(IsChanging);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (IsReady != false) {
      size += 1 + 1;
    }
    size += costumeId_.CalculateSize(_repeated_costumeId_codec);
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uid);
    }
    size += avatarId_.CalculateSize(_repeated_avatarId_codec);
    if (IsChanging != false) {
      size += 1 + 1;
    }
    size += skillList_.CalculateSize(_repeated_skillList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(BrickBreakerPlayerBattleInfo other) {
    if (other == null) {
      return;
    }
    if (other.IsReady != false) {
      IsReady = other.IsReady;
    }
    costumeId_.Add(other.costumeId_);
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    avatarId_.Add(other.avatarId_);
    if (other.IsChanging != false) {
      IsChanging = other.IsChanging;
    }
    skillList_.Add(other.skillList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          Nickname = input.ReadString();
          break;
        }
        case 26:
        case 24: {
          skillList_.AddEntriesFrom(input, _repeated_skillList_codec);
          break;
        }
        case 42:
        case 40: {
          costumeId_.AddEntriesFrom(input, _repeated_costumeId_codec);
          break;
        }
        case 56: {
          IsReady = input.ReadBool();
          break;
        }
        case 74:
        case 72: {
          avatarId_.AddEntriesFrom(input, _repeated_avatarId_codec);
          break;
        }
        case 104: {
          Uid = input.ReadUInt32();
          break;
        }
        case 120: {
          IsChanging = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 18: {
          Nickname = input.ReadString();
          break;
        }
        case 26:
        case 24: {
          skillList_.AddEntriesFrom(ref input, _repeated_skillList_codec);
          break;
        }
        case 42:
        case 40: {
          costumeId_.AddEntriesFrom(ref input, _repeated_costumeId_codec);
          break;
        }
        case 56: {
          IsReady = input.ReadBool();
          break;
        }
        case 74:
        case 72: {
          avatarId_.AddEntriesFrom(ref input, _repeated_avatarId_codec);
          break;
        }
        case 104: {
          Uid = input.ReadUInt32();
          break;
        }
        case 120: {
          IsChanging = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
