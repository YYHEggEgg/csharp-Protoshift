// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LuminanceStoneChallengeGallerySettleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from LuminanceStoneChallengeGallerySettleInfo.proto</summary>
public static partial class LuminanceStoneChallengeGallerySettleInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for LuminanceStoneChallengeGallerySettleInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LuminanceStoneChallengeGallerySettleInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ci5MdW1pbmFuY2VTdG9uZUNoYWxsZW5nZUdhbGxlcnlTZXR0bGVJbmZvLnBy",
          "b3RvGhdHYWxsZXJ5U3RvcFJlYXNvbi5wcm90byLQAQooTHVtaW5hbmNlU3Rv",
          "bmVDaGFsbGVuZ2VHYWxsZXJ5U2V0dGxlSW5mbxIaChJraWxsX21vbnN0ZXJf",
          "Y291bnQYDCABKA0SIgoaa2lsbF9zcGVjaWFsX21vbnN0ZXJfY291bnQYCCAB",
          "KA0SFwoPY2xlYW5fbXVkX2NvdW50GAogASgNEhIKCmdhbGxlcnlfaWQYAiAB",
          "KA0SIgoGcmVhc29uGAsgASgOMhIuR2FsbGVyeVN0b3BSZWFzb24SEwoLZmlu",
          "YWxfc2NvcmUYDSABKA1CHgocZW11LmdyYXNzY3V0dGVyLm5ldC5vbGRwcm90",
          "b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::GalleryStopReasonReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LuminanceStoneChallengeGallerySettleInfo), global::LuminanceStoneChallengeGallerySettleInfo.Parser, new[]{ "KillMonsterCount", "KillSpecialMonsterCount", "CleanMudCount", "GalleryId", "Reason", "FinalScore" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class LuminanceStoneChallengeGallerySettleInfo : pb::IMessage<LuminanceStoneChallengeGallerySettleInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LuminanceStoneChallengeGallerySettleInfo> _parser = new pb::MessageParser<LuminanceStoneChallengeGallerySettleInfo>(() => new LuminanceStoneChallengeGallerySettleInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<LuminanceStoneChallengeGallerySettleInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LuminanceStoneChallengeGallerySettleInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LuminanceStoneChallengeGallerySettleInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LuminanceStoneChallengeGallerySettleInfo(LuminanceStoneChallengeGallerySettleInfo other) : this() {
    killMonsterCount_ = other.killMonsterCount_;
    killSpecialMonsterCount_ = other.killSpecialMonsterCount_;
    cleanMudCount_ = other.cleanMudCount_;
    galleryId_ = other.galleryId_;
    reason_ = other.reason_;
    finalScore_ = other.finalScore_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LuminanceStoneChallengeGallerySettleInfo Clone() {
    return new LuminanceStoneChallengeGallerySettleInfo(this);
  }

  /// <summary>Field number for the "kill_monster_count" field.</summary>
  public const int KillMonsterCountFieldNumber = 12;
  private uint killMonsterCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint KillMonsterCount {
    get { return killMonsterCount_; }
    set {
      killMonsterCount_ = value;
    }
  }

  /// <summary>Field number for the "kill_special_monster_count" field.</summary>
  public const int KillSpecialMonsterCountFieldNumber = 8;
  private uint killSpecialMonsterCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint KillSpecialMonsterCount {
    get { return killSpecialMonsterCount_; }
    set {
      killSpecialMonsterCount_ = value;
    }
  }

  /// <summary>Field number for the "clean_mud_count" field.</summary>
  public const int CleanMudCountFieldNumber = 10;
  private uint cleanMudCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CleanMudCount {
    get { return cleanMudCount_; }
    set {
      cleanMudCount_ = value;
    }
  }

  /// <summary>Field number for the "gallery_id" field.</summary>
  public const int GalleryIdFieldNumber = 2;
  private uint galleryId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GalleryId {
    get { return galleryId_; }
    set {
      galleryId_ = value;
    }
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 11;
  private global::GalleryStopReason reason_ = global::GalleryStopReason.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GalleryStopReason Reason {
    get { return reason_; }
    set {
      reason_ = value;
    }
  }

  /// <summary>Field number for the "final_score" field.</summary>
  public const int FinalScoreFieldNumber = 13;
  private uint finalScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FinalScore {
    get { return finalScore_; }
    set {
      finalScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as LuminanceStoneChallengeGallerySettleInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(LuminanceStoneChallengeGallerySettleInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (KillMonsterCount != other.KillMonsterCount) return false;
    if (KillSpecialMonsterCount != other.KillSpecialMonsterCount) return false;
    if (CleanMudCount != other.CleanMudCount) return false;
    if (GalleryId != other.GalleryId) return false;
    if (Reason != other.Reason) return false;
    if (FinalScore != other.FinalScore) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (KillMonsterCount != 0) hash ^= KillMonsterCount.GetHashCode();
    if (KillSpecialMonsterCount != 0) hash ^= KillSpecialMonsterCount.GetHashCode();
    if (CleanMudCount != 0) hash ^= CleanMudCount.GetHashCode();
    if (GalleryId != 0) hash ^= GalleryId.GetHashCode();
    if (Reason != global::GalleryStopReason.None) hash ^= Reason.GetHashCode();
    if (FinalScore != 0) hash ^= FinalScore.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (GalleryId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GalleryId);
    }
    if (KillSpecialMonsterCount != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(KillSpecialMonsterCount);
    }
    if (CleanMudCount != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(CleanMudCount);
    }
    if (Reason != global::GalleryStopReason.None) {
      output.WriteRawTag(88);
      output.WriteEnum((int) Reason);
    }
    if (KillMonsterCount != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(KillMonsterCount);
    }
    if (FinalScore != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(FinalScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (GalleryId != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(GalleryId);
    }
    if (KillSpecialMonsterCount != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(KillSpecialMonsterCount);
    }
    if (CleanMudCount != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(CleanMudCount);
    }
    if (Reason != global::GalleryStopReason.None) {
      output.WriteRawTag(88);
      output.WriteEnum((int) Reason);
    }
    if (KillMonsterCount != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(KillMonsterCount);
    }
    if (FinalScore != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(FinalScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (KillMonsterCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KillMonsterCount);
    }
    if (KillSpecialMonsterCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KillSpecialMonsterCount);
    }
    if (CleanMudCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CleanMudCount);
    }
    if (GalleryId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GalleryId);
    }
    if (Reason != global::GalleryStopReason.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
    }
    if (FinalScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FinalScore);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(LuminanceStoneChallengeGallerySettleInfo other) {
    if (other == null) {
      return;
    }
    if (other.KillMonsterCount != 0) {
      KillMonsterCount = other.KillMonsterCount;
    }
    if (other.KillSpecialMonsterCount != 0) {
      KillSpecialMonsterCount = other.KillSpecialMonsterCount;
    }
    if (other.CleanMudCount != 0) {
      CleanMudCount = other.CleanMudCount;
    }
    if (other.GalleryId != 0) {
      GalleryId = other.GalleryId;
    }
    if (other.Reason != global::GalleryStopReason.None) {
      Reason = other.Reason;
    }
    if (other.FinalScore != 0) {
      FinalScore = other.FinalScore;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          GalleryId = input.ReadUInt32();
          break;
        }
        case 64: {
          KillSpecialMonsterCount = input.ReadUInt32();
          break;
        }
        case 80: {
          CleanMudCount = input.ReadUInt32();
          break;
        }
        case 88: {
          Reason = (global::GalleryStopReason) input.ReadEnum();
          break;
        }
        case 96: {
          KillMonsterCount = input.ReadUInt32();
          break;
        }
        case 104: {
          FinalScore = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          GalleryId = input.ReadUInt32();
          break;
        }
        case 64: {
          KillSpecialMonsterCount = input.ReadUInt32();
          break;
        }
        case 80: {
          CleanMudCount = input.ReadUInt32();
          break;
        }
        case 88: {
          Reason = (global::GalleryStopReason) input.ReadEnum();
          break;
        }
        case 96: {
          KillMonsterCount = input.ReadUInt32();
          break;
        }
        case 104: {
          FinalScore = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
