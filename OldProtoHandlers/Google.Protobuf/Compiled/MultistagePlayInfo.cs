// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MultistagePlayInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from MultistagePlayInfo.proto</summary>
public static partial class MultistagePlayInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for MultistagePlayInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MultistagePlayInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhNdWx0aXN0YWdlUGxheUluZm8ucHJvdG8aG0JyaWNrQnJlYWtlclN0YWdl",
          "SW5mby5wcm90bxoXQ2hhckFtdXNlbWVudEluZm8ucHJvdG8aGkNvaW5Db2xs",
          "ZWN0U3RhZ2VJbmZvLnByb3RvGhpIaWRlQW5kU2Vla1N0YWdlSW5mby5wcm90",
          "bxoXSW5CYXR0bGVDaGVzc0luZm8ucHJvdG8aG0luQmF0dGxlRmxldXJGYWly",
          "SW5mby5wcm90bxoeSW5CYXR0bGVJcm9kb3JpQ2hlc3NJbmZvLnByb3RvGhxJ",
          "bkJhdHRsZU1lY2hhbmljdXNJbmZvLnByb3RvIskEChJNdWx0aXN0YWdlUGxh",
          "eUluZm8SEgoKcGxheV9pbmRleBgNIAEoDRIRCglwbGF5X3R5cGUYCyABKA0S",
          "EgoKc3RhZ2VfdHlwZRgKIAEoDRIQCghkdXJhdGlvbhgIIAEoDRIQCghncm91",
          "cF9pZBgMIAEoDRISCgpiZWdpbl90aW1lGAkgASgNEhMKC3N0YWdlX2luZGV4",
          "GAEgASgNEjMKD21lY2hhbmljdXNfaW5mbxi2CiABKAsyFy5JbkJhdHRsZU1l",
          "Y2hhbmljdXNJbmZvSAASMgoPZmxldXJfZmFpcl9pbmZvGKgIIAEoCzIWLklu",
          "QmF0dGxlRmxldXJGYWlySW5mb0gAEjMKEmhpZGVfYW5kX3NlZWtfaW5mbxhs",
          "IAEoCzIVLkhpZGVBbmRTZWVrU3RhZ2VJbmZvSAASKQoKY2hlc3NfaW5mbxje",
          "DSABKAsyEi5JbkJhdHRsZUNoZXNzSW5mb0gAEjgKEmlyb2RvcmlfY2hlc3Nf",
          "aW5mbxiTBCABKAsyGS5JbkJhdHRsZUlyb2RvcmlDaGVzc0luZm9IABIyChNj",
          "aGFyX2FtdXNlbWVudF9pbmZvGMQCIAEoCzISLkNoYXJBbXVzZW1lbnRJbmZv",
          "SAASNQoSYnJpY2tfYnJlYWtlcl9pbmZvGKwPIAEoCzIWLkJyaWNrQnJlYWtl",
          "clN0YWdlSW5mb0gAEjMKEWNvaW5fY29sbGVjdF9pbmZvGKsIIAEoCzIVLkNv",
          "aW5Db2xsZWN0U3RhZ2VJbmZvSABCCAoGZGV0YWlsQh4KHGVtdS5ncmFzc2N1",
          "dHRlci5uZXQub2xkcHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::BrickBreakerStageInfoReflection.Descriptor, global::CharAmusementInfoReflection.Descriptor, global::CoinCollectStageInfoReflection.Descriptor, global::HideAndSeekStageInfoReflection.Descriptor, global::InBattleChessInfoReflection.Descriptor, global::InBattleFleurFairInfoReflection.Descriptor, global::InBattleIrodoriChessInfoReflection.Descriptor, global::InBattleMechanicusInfoReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::MultistagePlayInfo), global::MultistagePlayInfo.Parser, new[]{ "PlayIndex", "PlayType", "StageType", "Duration", "GroupId", "BeginTime", "StageIndex", "MechanicusInfo", "FleurFairInfo", "HideAndSeekInfo", "ChessInfo", "IrodoriChessInfo", "CharAmusementInfo", "BrickBreakerInfo", "CoinCollectInfo" }, new[]{ "Detail" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class MultistagePlayInfo : pb::IMessage<MultistagePlayInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MultistagePlayInfo> _parser = new pb::MessageParser<MultistagePlayInfo>(() => new MultistagePlayInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<MultistagePlayInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MultistagePlayInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MultistagePlayInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MultistagePlayInfo(MultistagePlayInfo other) : this() {
    playIndex_ = other.playIndex_;
    playType_ = other.playType_;
    stageType_ = other.stageType_;
    duration_ = other.duration_;
    groupId_ = other.groupId_;
    beginTime_ = other.beginTime_;
    stageIndex_ = other.stageIndex_;
    switch (other.DetailCase) {
      case DetailOneofCase.MechanicusInfo:
        MechanicusInfo = other.MechanicusInfo.Clone();
        break;
      case DetailOneofCase.FleurFairInfo:
        FleurFairInfo = other.FleurFairInfo.Clone();
        break;
      case DetailOneofCase.HideAndSeekInfo:
        HideAndSeekInfo = other.HideAndSeekInfo.Clone();
        break;
      case DetailOneofCase.ChessInfo:
        ChessInfo = other.ChessInfo.Clone();
        break;
      case DetailOneofCase.IrodoriChessInfo:
        IrodoriChessInfo = other.IrodoriChessInfo.Clone();
        break;
      case DetailOneofCase.CharAmusementInfo:
        CharAmusementInfo = other.CharAmusementInfo.Clone();
        break;
      case DetailOneofCase.BrickBreakerInfo:
        BrickBreakerInfo = other.BrickBreakerInfo.Clone();
        break;
      case DetailOneofCase.CoinCollectInfo:
        CoinCollectInfo = other.CoinCollectInfo.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MultistagePlayInfo Clone() {
    return new MultistagePlayInfo(this);
  }

  /// <summary>Field number for the "play_index" field.</summary>
  public const int PlayIndexFieldNumber = 13;
  private uint playIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayIndex {
    get { return playIndex_; }
    set {
      playIndex_ = value;
    }
  }

  /// <summary>Field number for the "play_type" field.</summary>
  public const int PlayTypeFieldNumber = 11;
  private uint playType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayType {
    get { return playType_; }
    set {
      playType_ = value;
    }
  }

  /// <summary>Field number for the "stage_type" field.</summary>
  public const int StageTypeFieldNumber = 10;
  private uint stageType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StageType {
    get { return stageType_; }
    set {
      stageType_ = value;
    }
  }

  /// <summary>Field number for the "duration" field.</summary>
  public const int DurationFieldNumber = 8;
  private uint duration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Duration {
    get { return duration_; }
    set {
      duration_ = value;
    }
  }

  /// <summary>Field number for the "group_id" field.</summary>
  public const int GroupIdFieldNumber = 12;
  private uint groupId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GroupId {
    get { return groupId_; }
    set {
      groupId_ = value;
    }
  }

  /// <summary>Field number for the "begin_time" field.</summary>
  public const int BeginTimeFieldNumber = 9;
  private uint beginTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BeginTime {
    get { return beginTime_; }
    set {
      beginTime_ = value;
    }
  }

  /// <summary>Field number for the "stage_index" field.</summary>
  public const int StageIndexFieldNumber = 1;
  private uint stageIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StageIndex {
    get { return stageIndex_; }
    set {
      stageIndex_ = value;
    }
  }

  /// <summary>Field number for the "mechanicus_info" field.</summary>
  public const int MechanicusInfoFieldNumber = 1334;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::InBattleMechanicusInfo MechanicusInfo {
    get { return detailCase_ == DetailOneofCase.MechanicusInfo ? (global::InBattleMechanicusInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.MechanicusInfo;
    }
  }

  /// <summary>Field number for the "fleur_fair_info" field.</summary>
  public const int FleurFairInfoFieldNumber = 1064;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::InBattleFleurFairInfo FleurFairInfo {
    get { return detailCase_ == DetailOneofCase.FleurFairInfo ? (global::InBattleFleurFairInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.FleurFairInfo;
    }
  }

  /// <summary>Field number for the "hide_and_seek_info" field.</summary>
  public const int HideAndSeekInfoFieldNumber = 108;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::HideAndSeekStageInfo HideAndSeekInfo {
    get { return detailCase_ == DetailOneofCase.HideAndSeekInfo ? (global::HideAndSeekStageInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.HideAndSeekInfo;
    }
  }

  /// <summary>Field number for the "chess_info" field.</summary>
  public const int ChessInfoFieldNumber = 1758;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::InBattleChessInfo ChessInfo {
    get { return detailCase_ == DetailOneofCase.ChessInfo ? (global::InBattleChessInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.ChessInfo;
    }
  }

  /// <summary>Field number for the "irodori_chess_info" field.</summary>
  public const int IrodoriChessInfoFieldNumber = 531;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::InBattleIrodoriChessInfo IrodoriChessInfo {
    get { return detailCase_ == DetailOneofCase.IrodoriChessInfo ? (global::InBattleIrodoriChessInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.IrodoriChessInfo;
    }
  }

  /// <summary>Field number for the "char_amusement_info" field.</summary>
  public const int CharAmusementInfoFieldNumber = 324;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CharAmusementInfo CharAmusementInfo {
    get { return detailCase_ == DetailOneofCase.CharAmusementInfo ? (global::CharAmusementInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CharAmusementInfo;
    }
  }

  /// <summary>Field number for the "brick_breaker_info" field.</summary>
  public const int BrickBreakerInfoFieldNumber = 1964;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::BrickBreakerStageInfo BrickBreakerInfo {
    get { return detailCase_ == DetailOneofCase.BrickBreakerInfo ? (global::BrickBreakerStageInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.BrickBreakerInfo;
    }
  }

  /// <summary>Field number for the "coin_collect_info" field.</summary>
  public const int CoinCollectInfoFieldNumber = 1067;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CoinCollectStageInfo CoinCollectInfo {
    get { return detailCase_ == DetailOneofCase.CoinCollectInfo ? (global::CoinCollectStageInfo) detail_ : null; }
    set {
      detail_ = value;
      detailCase_ = value == null ? DetailOneofCase.None : DetailOneofCase.CoinCollectInfo;
    }
  }

  private object detail_;
  /// <summary>Enum of possible cases for the "detail" oneof.</summary>
  public enum DetailOneofCase {
    None = 0,
    MechanicusInfo = 1334,
    FleurFairInfo = 1064,
    HideAndSeekInfo = 108,
    ChessInfo = 1758,
    IrodoriChessInfo = 531,
    CharAmusementInfo = 324,
    BrickBreakerInfo = 1964,
    CoinCollectInfo = 1067,
  }
  private DetailOneofCase detailCase_ = DetailOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DetailOneofCase DetailCase {
    get { return detailCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDetail() {
    detailCase_ = DetailOneofCase.None;
    detail_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as MultistagePlayInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(MultistagePlayInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayIndex != other.PlayIndex) return false;
    if (PlayType != other.PlayType) return false;
    if (StageType != other.StageType) return false;
    if (Duration != other.Duration) return false;
    if (GroupId != other.GroupId) return false;
    if (BeginTime != other.BeginTime) return false;
    if (StageIndex != other.StageIndex) return false;
    if (!object.Equals(MechanicusInfo, other.MechanicusInfo)) return false;
    if (!object.Equals(FleurFairInfo, other.FleurFairInfo)) return false;
    if (!object.Equals(HideAndSeekInfo, other.HideAndSeekInfo)) return false;
    if (!object.Equals(ChessInfo, other.ChessInfo)) return false;
    if (!object.Equals(IrodoriChessInfo, other.IrodoriChessInfo)) return false;
    if (!object.Equals(CharAmusementInfo, other.CharAmusementInfo)) return false;
    if (!object.Equals(BrickBreakerInfo, other.BrickBreakerInfo)) return false;
    if (!object.Equals(CoinCollectInfo, other.CoinCollectInfo)) return false;
    if (DetailCase != other.DetailCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayIndex != 0) hash ^= PlayIndex.GetHashCode();
    if (PlayType != 0) hash ^= PlayType.GetHashCode();
    if (StageType != 0) hash ^= StageType.GetHashCode();
    if (Duration != 0) hash ^= Duration.GetHashCode();
    if (GroupId != 0) hash ^= GroupId.GetHashCode();
    if (BeginTime != 0) hash ^= BeginTime.GetHashCode();
    if (StageIndex != 0) hash ^= StageIndex.GetHashCode();
    if (detailCase_ == DetailOneofCase.MechanicusInfo) hash ^= MechanicusInfo.GetHashCode();
    if (detailCase_ == DetailOneofCase.FleurFairInfo) hash ^= FleurFairInfo.GetHashCode();
    if (detailCase_ == DetailOneofCase.HideAndSeekInfo) hash ^= HideAndSeekInfo.GetHashCode();
    if (detailCase_ == DetailOneofCase.ChessInfo) hash ^= ChessInfo.GetHashCode();
    if (detailCase_ == DetailOneofCase.IrodoriChessInfo) hash ^= IrodoriChessInfo.GetHashCode();
    if (detailCase_ == DetailOneofCase.CharAmusementInfo) hash ^= CharAmusementInfo.GetHashCode();
    if (detailCase_ == DetailOneofCase.BrickBreakerInfo) hash ^= BrickBreakerInfo.GetHashCode();
    if (detailCase_ == DetailOneofCase.CoinCollectInfo) hash ^= CoinCollectInfo.GetHashCode();
    hash ^= (int) detailCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (StageIndex != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(StageIndex);
    }
    if (Duration != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(Duration);
    }
    if (BeginTime != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(BeginTime);
    }
    if (StageType != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(StageType);
    }
    if (PlayType != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(PlayType);
    }
    if (GroupId != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(GroupId);
    }
    if (PlayIndex != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(PlayIndex);
    }
    if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
      output.WriteRawTag(226, 6);
      output.WriteMessage(HideAndSeekInfo);
    }
    if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
      output.WriteRawTag(162, 20);
      output.WriteMessage(CharAmusementInfo);
    }
    if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
      output.WriteRawTag(154, 33);
      output.WriteMessage(IrodoriChessInfo);
    }
    if (detailCase_ == DetailOneofCase.FleurFairInfo) {
      output.WriteRawTag(194, 66);
      output.WriteMessage(FleurFairInfo);
    }
    if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
      output.WriteRawTag(218, 66);
      output.WriteMessage(CoinCollectInfo);
    }
    if (detailCase_ == DetailOneofCase.MechanicusInfo) {
      output.WriteRawTag(178, 83);
      output.WriteMessage(MechanicusInfo);
    }
    if (detailCase_ == DetailOneofCase.ChessInfo) {
      output.WriteRawTag(242, 109);
      output.WriteMessage(ChessInfo);
    }
    if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
      output.WriteRawTag(226, 122);
      output.WriteMessage(BrickBreakerInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (StageIndex != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(StageIndex);
    }
    if (Duration != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(Duration);
    }
    if (BeginTime != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(BeginTime);
    }
    if (StageType != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(StageType);
    }
    if (PlayType != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(PlayType);
    }
    if (GroupId != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(GroupId);
    }
    if (PlayIndex != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(PlayIndex);
    }
    if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
      output.WriteRawTag(226, 6);
      output.WriteMessage(HideAndSeekInfo);
    }
    if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
      output.WriteRawTag(162, 20);
      output.WriteMessage(CharAmusementInfo);
    }
    if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
      output.WriteRawTag(154, 33);
      output.WriteMessage(IrodoriChessInfo);
    }
    if (detailCase_ == DetailOneofCase.FleurFairInfo) {
      output.WriteRawTag(194, 66);
      output.WriteMessage(FleurFairInfo);
    }
    if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
      output.WriteRawTag(218, 66);
      output.WriteMessage(CoinCollectInfo);
    }
    if (detailCase_ == DetailOneofCase.MechanicusInfo) {
      output.WriteRawTag(178, 83);
      output.WriteMessage(MechanicusInfo);
    }
    if (detailCase_ == DetailOneofCase.ChessInfo) {
      output.WriteRawTag(242, 109);
      output.WriteMessage(ChessInfo);
    }
    if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
      output.WriteRawTag(226, 122);
      output.WriteMessage(BrickBreakerInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (PlayIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayIndex);
    }
    if (PlayType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayType);
    }
    if (StageType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageType);
    }
    if (Duration != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Duration);
    }
    if (GroupId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
    }
    if (BeginTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BeginTime);
    }
    if (StageIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageIndex);
    }
    if (detailCase_ == DetailOneofCase.MechanicusInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(MechanicusInfo);
    }
    if (detailCase_ == DetailOneofCase.FleurFairInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(FleurFairInfo);
    }
    if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(HideAndSeekInfo);
    }
    if (detailCase_ == DetailOneofCase.ChessInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChessInfo);
    }
    if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(IrodoriChessInfo);
    }
    if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(CharAmusementInfo);
    }
    if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(BrickBreakerInfo);
    }
    if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(CoinCollectInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(MultistagePlayInfo other) {
    if (other == null) {
      return;
    }
    if (other.PlayIndex != 0) {
      PlayIndex = other.PlayIndex;
    }
    if (other.PlayType != 0) {
      PlayType = other.PlayType;
    }
    if (other.StageType != 0) {
      StageType = other.StageType;
    }
    if (other.Duration != 0) {
      Duration = other.Duration;
    }
    if (other.GroupId != 0) {
      GroupId = other.GroupId;
    }
    if (other.BeginTime != 0) {
      BeginTime = other.BeginTime;
    }
    if (other.StageIndex != 0) {
      StageIndex = other.StageIndex;
    }
    switch (other.DetailCase) {
      case DetailOneofCase.MechanicusInfo:
        if (MechanicusInfo == null) {
          MechanicusInfo = new global::InBattleMechanicusInfo();
        }
        MechanicusInfo.MergeFrom(other.MechanicusInfo);
        break;
      case DetailOneofCase.FleurFairInfo:
        if (FleurFairInfo == null) {
          FleurFairInfo = new global::InBattleFleurFairInfo();
        }
        FleurFairInfo.MergeFrom(other.FleurFairInfo);
        break;
      case DetailOneofCase.HideAndSeekInfo:
        if (HideAndSeekInfo == null) {
          HideAndSeekInfo = new global::HideAndSeekStageInfo();
        }
        HideAndSeekInfo.MergeFrom(other.HideAndSeekInfo);
        break;
      case DetailOneofCase.ChessInfo:
        if (ChessInfo == null) {
          ChessInfo = new global::InBattleChessInfo();
        }
        ChessInfo.MergeFrom(other.ChessInfo);
        break;
      case DetailOneofCase.IrodoriChessInfo:
        if (IrodoriChessInfo == null) {
          IrodoriChessInfo = new global::InBattleIrodoriChessInfo();
        }
        IrodoriChessInfo.MergeFrom(other.IrodoriChessInfo);
        break;
      case DetailOneofCase.CharAmusementInfo:
        if (CharAmusementInfo == null) {
          CharAmusementInfo = new global::CharAmusementInfo();
        }
        CharAmusementInfo.MergeFrom(other.CharAmusementInfo);
        break;
      case DetailOneofCase.BrickBreakerInfo:
        if (BrickBreakerInfo == null) {
          BrickBreakerInfo = new global::BrickBreakerStageInfo();
        }
        BrickBreakerInfo.MergeFrom(other.BrickBreakerInfo);
        break;
      case DetailOneofCase.CoinCollectInfo:
        if (CoinCollectInfo == null) {
          CoinCollectInfo = new global::CoinCollectStageInfo();
        }
        CoinCollectInfo.MergeFrom(other.CoinCollectInfo);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          StageIndex = input.ReadUInt32();
          break;
        }
        case 64: {
          Duration = input.ReadUInt32();
          break;
        }
        case 72: {
          BeginTime = input.ReadUInt32();
          break;
        }
        case 80: {
          StageType = input.ReadUInt32();
          break;
        }
        case 88: {
          PlayType = input.ReadUInt32();
          break;
        }
        case 96: {
          GroupId = input.ReadUInt32();
          break;
        }
        case 104: {
          PlayIndex = input.ReadUInt32();
          break;
        }
        case 866: {
          global::HideAndSeekStageInfo subBuilder = new global::HideAndSeekStageInfo();
          if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
            subBuilder.MergeFrom(HideAndSeekInfo);
          }
          input.ReadMessage(subBuilder);
          HideAndSeekInfo = subBuilder;
          break;
        }
        case 2594: {
          global::CharAmusementInfo subBuilder = new global::CharAmusementInfo();
          if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
            subBuilder.MergeFrom(CharAmusementInfo);
          }
          input.ReadMessage(subBuilder);
          CharAmusementInfo = subBuilder;
          break;
        }
        case 4250: {
          global::InBattleIrodoriChessInfo subBuilder = new global::InBattleIrodoriChessInfo();
          if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
            subBuilder.MergeFrom(IrodoriChessInfo);
          }
          input.ReadMessage(subBuilder);
          IrodoriChessInfo = subBuilder;
          break;
        }
        case 8514: {
          global::InBattleFleurFairInfo subBuilder = new global::InBattleFleurFairInfo();
          if (detailCase_ == DetailOneofCase.FleurFairInfo) {
            subBuilder.MergeFrom(FleurFairInfo);
          }
          input.ReadMessage(subBuilder);
          FleurFairInfo = subBuilder;
          break;
        }
        case 8538: {
          global::CoinCollectStageInfo subBuilder = new global::CoinCollectStageInfo();
          if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
            subBuilder.MergeFrom(CoinCollectInfo);
          }
          input.ReadMessage(subBuilder);
          CoinCollectInfo = subBuilder;
          break;
        }
        case 10674: {
          global::InBattleMechanicusInfo subBuilder = new global::InBattleMechanicusInfo();
          if (detailCase_ == DetailOneofCase.MechanicusInfo) {
            subBuilder.MergeFrom(MechanicusInfo);
          }
          input.ReadMessage(subBuilder);
          MechanicusInfo = subBuilder;
          break;
        }
        case 14066: {
          global::InBattleChessInfo subBuilder = new global::InBattleChessInfo();
          if (detailCase_ == DetailOneofCase.ChessInfo) {
            subBuilder.MergeFrom(ChessInfo);
          }
          input.ReadMessage(subBuilder);
          ChessInfo = subBuilder;
          break;
        }
        case 15714: {
          global::BrickBreakerStageInfo subBuilder = new global::BrickBreakerStageInfo();
          if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
            subBuilder.MergeFrom(BrickBreakerInfo);
          }
          input.ReadMessage(subBuilder);
          BrickBreakerInfo = subBuilder;
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          StageIndex = input.ReadUInt32();
          break;
        }
        case 64: {
          Duration = input.ReadUInt32();
          break;
        }
        case 72: {
          BeginTime = input.ReadUInt32();
          break;
        }
        case 80: {
          StageType = input.ReadUInt32();
          break;
        }
        case 88: {
          PlayType = input.ReadUInt32();
          break;
        }
        case 96: {
          GroupId = input.ReadUInt32();
          break;
        }
        case 104: {
          PlayIndex = input.ReadUInt32();
          break;
        }
        case 866: {
          global::HideAndSeekStageInfo subBuilder = new global::HideAndSeekStageInfo();
          if (detailCase_ == DetailOneofCase.HideAndSeekInfo) {
            subBuilder.MergeFrom(HideAndSeekInfo);
          }
          input.ReadMessage(subBuilder);
          HideAndSeekInfo = subBuilder;
          break;
        }
        case 2594: {
          global::CharAmusementInfo subBuilder = new global::CharAmusementInfo();
          if (detailCase_ == DetailOneofCase.CharAmusementInfo) {
            subBuilder.MergeFrom(CharAmusementInfo);
          }
          input.ReadMessage(subBuilder);
          CharAmusementInfo = subBuilder;
          break;
        }
        case 4250: {
          global::InBattleIrodoriChessInfo subBuilder = new global::InBattleIrodoriChessInfo();
          if (detailCase_ == DetailOneofCase.IrodoriChessInfo) {
            subBuilder.MergeFrom(IrodoriChessInfo);
          }
          input.ReadMessage(subBuilder);
          IrodoriChessInfo = subBuilder;
          break;
        }
        case 8514: {
          global::InBattleFleurFairInfo subBuilder = new global::InBattleFleurFairInfo();
          if (detailCase_ == DetailOneofCase.FleurFairInfo) {
            subBuilder.MergeFrom(FleurFairInfo);
          }
          input.ReadMessage(subBuilder);
          FleurFairInfo = subBuilder;
          break;
        }
        case 8538: {
          global::CoinCollectStageInfo subBuilder = new global::CoinCollectStageInfo();
          if (detailCase_ == DetailOneofCase.CoinCollectInfo) {
            subBuilder.MergeFrom(CoinCollectInfo);
          }
          input.ReadMessage(subBuilder);
          CoinCollectInfo = subBuilder;
          break;
        }
        case 10674: {
          global::InBattleMechanicusInfo subBuilder = new global::InBattleMechanicusInfo();
          if (detailCase_ == DetailOneofCase.MechanicusInfo) {
            subBuilder.MergeFrom(MechanicusInfo);
          }
          input.ReadMessage(subBuilder);
          MechanicusInfo = subBuilder;
          break;
        }
        case 14066: {
          global::InBattleChessInfo subBuilder = new global::InBattleChessInfo();
          if (detailCase_ == DetailOneofCase.ChessInfo) {
            subBuilder.MergeFrom(ChessInfo);
          }
          input.ReadMessage(subBuilder);
          ChessInfo = subBuilder;
          break;
        }
        case 15714: {
          global::BrickBreakerStageInfo subBuilder = new global::BrickBreakerStageInfo();
          if (detailCase_ == DetailOneofCase.BrickBreakerInfo) {
            subBuilder.MergeFrom(BrickBreakerInfo);
          }
          input.ReadMessage(subBuilder);
          BrickBreakerInfo = subBuilder;
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
