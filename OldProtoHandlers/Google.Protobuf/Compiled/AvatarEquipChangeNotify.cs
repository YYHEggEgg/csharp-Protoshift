// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AvatarEquipChangeNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from AvatarEquipChangeNotify.proto</summary>
public static partial class AvatarEquipChangeNotifyReflection {

  #region Descriptor
  /// <summary>File descriptor for AvatarEquipChangeNotify.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AvatarEquipChangeNotifyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch1BdmF0YXJFcXVpcENoYW5nZU5vdGlmeS5wcm90bxoYU2NlbmVSZWxpcXVh",
          "cnlJbmZvLnByb3RvGhVTY2VuZVdlYXBvbkluZm8ucHJvdG8isQEKF0F2YXRh",
          "ckVxdWlwQ2hhbmdlTm90aWZ5EhMKC2F2YXRhcl9ndWlkGAogASgEEhIKCmVx",
          "dWlwX2d1aWQYDSABKAQSJgoJcmVsaXF1YXJ5GAEgASgLMhMuU2NlbmVSZWxp",
          "cXVhcnlJbmZvEiAKBndlYXBvbhgPIAEoCzIQLlNjZW5lV2VhcG9uSW5mbxIP",
          "CgdpdGVtX2lkGA4gASgNEhIKCmVxdWlwX3R5cGUYCCABKA1CHgocZW11Lmdy",
          "YXNzY3V0dGVyLm5ldC5vbGRwcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SceneReliquaryInfoReflection.Descriptor, global::SceneWeaponInfoReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::AvatarEquipChangeNotify), global::AvatarEquipChangeNotify.Parser, new[]{ "AvatarGuid", "EquipGuid", "Reliquary", "Weapon", "ItemId", "EquipType" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// CmdId: 647
/// EnetChannelId: 0
/// EnetIsReliable: true
/// IsAllowClient: true
/// </summary>
public sealed partial class AvatarEquipChangeNotify : pb::IMessage<AvatarEquipChangeNotify>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<AvatarEquipChangeNotify> _parser = new pb::MessageParser<AvatarEquipChangeNotify>(() => new AvatarEquipChangeNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<AvatarEquipChangeNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AvatarEquipChangeNotifyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AvatarEquipChangeNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AvatarEquipChangeNotify(AvatarEquipChangeNotify other) : this() {
    avatarGuid_ = other.avatarGuid_;
    equipGuid_ = other.equipGuid_;
    reliquary_ = other.reliquary_ != null ? other.reliquary_.Clone() : null;
    weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
    itemId_ = other.itemId_;
    equipType_ = other.equipType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AvatarEquipChangeNotify Clone() {
    return new AvatarEquipChangeNotify(this);
  }

  /// <summary>Field number for the "avatar_guid" field.</summary>
  public const int AvatarGuidFieldNumber = 10;
  private ulong avatarGuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AvatarGuid {
    get { return avatarGuid_; }
    set {
      avatarGuid_ = value;
    }
  }

  /// <summary>Field number for the "equip_guid" field.</summary>
  public const int EquipGuidFieldNumber = 13;
  private ulong equipGuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong EquipGuid {
    get { return equipGuid_; }
    set {
      equipGuid_ = value;
    }
  }

  /// <summary>Field number for the "reliquary" field.</summary>
  public const int ReliquaryFieldNumber = 1;
  private global::SceneReliquaryInfo reliquary_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::SceneReliquaryInfo Reliquary {
    get { return reliquary_; }
    set {
      reliquary_ = value;
    }
  }

  /// <summary>Field number for the "weapon" field.</summary>
  public const int WeaponFieldNumber = 15;
  private global::SceneWeaponInfo weapon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::SceneWeaponInfo Weapon {
    get { return weapon_; }
    set {
      weapon_ = value;
    }
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 14;
  private uint itemId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ItemId {
    get { return itemId_; }
    set {
      itemId_ = value;
    }
  }

  /// <summary>Field number for the "equip_type" field.</summary>
  public const int EquipTypeFieldNumber = 8;
  private uint equipType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EquipType {
    get { return equipType_; }
    set {
      equipType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as AvatarEquipChangeNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(AvatarEquipChangeNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AvatarGuid != other.AvatarGuid) return false;
    if (EquipGuid != other.EquipGuid) return false;
    if (!object.Equals(Reliquary, other.Reliquary)) return false;
    if (!object.Equals(Weapon, other.Weapon)) return false;
    if (ItemId != other.ItemId) return false;
    if (EquipType != other.EquipType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (AvatarGuid != 0UL) hash ^= AvatarGuid.GetHashCode();
    if (EquipGuid != 0UL) hash ^= EquipGuid.GetHashCode();
    if (reliquary_ != null) hash ^= Reliquary.GetHashCode();
    if (weapon_ != null) hash ^= Weapon.GetHashCode();
    if (ItemId != 0) hash ^= ItemId.GetHashCode();
    if (EquipType != 0) hash ^= EquipType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (reliquary_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Reliquary);
    }
    if (EquipType != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(EquipType);
    }
    if (AvatarGuid != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(AvatarGuid);
    }
    if (EquipGuid != 0UL) {
      output.WriteRawTag(104);
      output.WriteUInt64(EquipGuid);
    }
    if (ItemId != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(ItemId);
    }
    if (weapon_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(Weapon);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (reliquary_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Reliquary);
    }
    if (EquipType != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(EquipType);
    }
    if (AvatarGuid != 0UL) {
      output.WriteRawTag(80);
      output.WriteUInt64(AvatarGuid);
    }
    if (EquipGuid != 0UL) {
      output.WriteRawTag(104);
      output.WriteUInt64(EquipGuid);
    }
    if (ItemId != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(ItemId);
    }
    if (weapon_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(Weapon);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (AvatarGuid != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AvatarGuid);
    }
    if (EquipGuid != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EquipGuid);
    }
    if (reliquary_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reliquary);
    }
    if (weapon_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
    }
    if (ItemId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
    }
    if (EquipType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EquipType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(AvatarEquipChangeNotify other) {
    if (other == null) {
      return;
    }
    if (other.AvatarGuid != 0UL) {
      AvatarGuid = other.AvatarGuid;
    }
    if (other.EquipGuid != 0UL) {
      EquipGuid = other.EquipGuid;
    }
    if (other.reliquary_ != null) {
      if (reliquary_ == null) {
        Reliquary = new global::SceneReliquaryInfo();
      }
      Reliquary.MergeFrom(other.Reliquary);
    }
    if (other.weapon_ != null) {
      if (weapon_ == null) {
        Weapon = new global::SceneWeaponInfo();
      }
      Weapon.MergeFrom(other.Weapon);
    }
    if (other.ItemId != 0) {
      ItemId = other.ItemId;
    }
    if (other.EquipType != 0) {
      EquipType = other.EquipType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (reliquary_ == null) {
            Reliquary = new global::SceneReliquaryInfo();
          }
          input.ReadMessage(Reliquary);
          break;
        }
        case 64: {
          EquipType = input.ReadUInt32();
          break;
        }
        case 80: {
          AvatarGuid = input.ReadUInt64();
          break;
        }
        case 104: {
          EquipGuid = input.ReadUInt64();
          break;
        }
        case 112: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 122: {
          if (weapon_ == null) {
            Weapon = new global::SceneWeaponInfo();
          }
          input.ReadMessage(Weapon);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (reliquary_ == null) {
            Reliquary = new global::SceneReliquaryInfo();
          }
          input.ReadMessage(Reliquary);
          break;
        }
        case 64: {
          EquipType = input.ReadUInt32();
          break;
        }
        case 80: {
          AvatarGuid = input.ReadUInt64();
          break;
        }
        case 104: {
          EquipGuid = input.ReadUInt64();
          break;
        }
        case 112: {
          ItemId = input.ReadUInt32();
          break;
        }
        case 122: {
          if (weapon_ == null) {
            Weapon = new global::SceneWeaponInfo();
          }
          input.ReadMessage(Weapon);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
