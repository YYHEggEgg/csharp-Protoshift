// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FungusTrainingProgressDetail.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OldProtos {

  /// <summary>Holder for reflection information generated from FungusTrainingProgressDetail.proto</summary>
  public static partial class FungusTrainingProgressDetailReflection {

    #region Descriptor
    /// <summary>File descriptor for FungusTrainingProgressDetail.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FungusTrainingProgressDetailReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJGdW5ndXNUcmFpbmluZ1Byb2dyZXNzRGV0YWlsLnByb3RvGiBGdW5ndXNG",
            "aWdodGVyTW9uc3RlckRldGFpbC5wcm90bxolRnVuZ3VzVHJhaW5pbmdQb29s",
            "UHJldmlld0RldGFpbC5wcm90byKYAgocRnVuZ3VzVHJhaW5pbmdQcm9ncmVz",
            "c0RldGFpbBIRCgljdXJfcm91bmQYCSABKA0SEgoKZHVuZ2Vvbl9pZBgKIAEo",
            "DRJDChltb25zdGVyX3Bvb2xfcHJldmlld19saXN0GAUgAygLMiAuRnVuZ3Vz",
            "VHJhaW5pbmdQb29sUHJldmlld0RldGFpbBI4ChNtb25zdGVyX2RldGFpbF9s",
            "aXN0GAYgAygLMhsuRnVuZ3VzRmlnaHRlck1vbnN0ZXJEZXRhaWwSFwoPdG90",
            "YWxfdXNlZF90aW1lGAcgASgNEhsKE2JhY2t1cF9tb25zdGVyX2xpc3QYBCAD",
            "KA0SHAoUY2hvb3Nlbl9tb25zdGVyX2xpc3QYCCADKA1CDKoCCU9sZFByb3Rv",
            "c2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OldProtos.FungusFighterMonsterDetailReflection.Descriptor, global::OldProtos.FungusTrainingPoolPreviewDetailReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OldProtos.FungusTrainingProgressDetail), global::OldProtos.FungusTrainingProgressDetail.Parser, new[]{ "CurRound", "DungeonId", "MonsterPoolPreviewList", "MonsterDetailList", "TotalUsedTime", "BackupMonsterList", "ChoosenMonsterList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FungusTrainingProgressDetail : pb::IMessage<FungusTrainingProgressDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FungusTrainingProgressDetail> _parser = new pb::MessageParser<FungusTrainingProgressDetail>(() => new FungusTrainingProgressDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FungusTrainingProgressDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OldProtos.FungusTrainingProgressDetailReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FungusTrainingProgressDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FungusTrainingProgressDetail(FungusTrainingProgressDetail other) : this() {
      curRound_ = other.curRound_;
      dungeonId_ = other.dungeonId_;
      monsterPoolPreviewList_ = other.monsterPoolPreviewList_.Clone();
      monsterDetailList_ = other.monsterDetailList_.Clone();
      totalUsedTime_ = other.totalUsedTime_;
      backupMonsterList_ = other.backupMonsterList_.Clone();
      choosenMonsterList_ = other.choosenMonsterList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FungusTrainingProgressDetail Clone() {
      return new FungusTrainingProgressDetail(this);
    }

    /// <summary>Field number for the "cur_round" field.</summary>
    public const int CurRoundFieldNumber = 9;
    private uint curRound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurRound {
      get { return curRound_; }
      set {
        curRound_ = value;
      }
    }

    /// <summary>Field number for the "dungeon_id" field.</summary>
    public const int DungeonIdFieldNumber = 10;
    private uint dungeonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DungeonId {
      get { return dungeonId_; }
      set {
        dungeonId_ = value;
      }
    }

    /// <summary>Field number for the "monster_pool_preview_list" field.</summary>
    public const int MonsterPoolPreviewListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OldProtos.FungusTrainingPoolPreviewDetail> _repeated_monsterPoolPreviewList_codec
        = pb::FieldCodec.ForMessage(42, global::OldProtos.FungusTrainingPoolPreviewDetail.Parser);
    private readonly pbc::RepeatedField<global::OldProtos.FungusTrainingPoolPreviewDetail> monsterPoolPreviewList_ = new pbc::RepeatedField<global::OldProtos.FungusTrainingPoolPreviewDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OldProtos.FungusTrainingPoolPreviewDetail> MonsterPoolPreviewList {
      get { return monsterPoolPreviewList_; }
    }

    /// <summary>Field number for the "monster_detail_list" field.</summary>
    public const int MonsterDetailListFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OldProtos.FungusFighterMonsterDetail> _repeated_monsterDetailList_codec
        = pb::FieldCodec.ForMessage(50, global::OldProtos.FungusFighterMonsterDetail.Parser);
    private readonly pbc::RepeatedField<global::OldProtos.FungusFighterMonsterDetail> monsterDetailList_ = new pbc::RepeatedField<global::OldProtos.FungusFighterMonsterDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OldProtos.FungusFighterMonsterDetail> MonsterDetailList {
      get { return monsterDetailList_; }
    }

    /// <summary>Field number for the "total_used_time" field.</summary>
    public const int TotalUsedTimeFieldNumber = 7;
    private uint totalUsedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalUsedTime {
      get { return totalUsedTime_; }
      set {
        totalUsedTime_ = value;
      }
    }

    /// <summary>Field number for the "backup_monster_list" field.</summary>
    public const int BackupMonsterListFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_backupMonsterList_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> backupMonsterList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> BackupMonsterList {
      get { return backupMonsterList_; }
    }

    /// <summary>Field number for the "choosen_monster_list" field.</summary>
    public const int ChoosenMonsterListFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_choosenMonsterList_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> choosenMonsterList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ChoosenMonsterList {
      get { return choosenMonsterList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FungusTrainingProgressDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FungusTrainingProgressDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurRound != other.CurRound) return false;
      if (DungeonId != other.DungeonId) return false;
      if(!monsterPoolPreviewList_.Equals(other.monsterPoolPreviewList_)) return false;
      if(!monsterDetailList_.Equals(other.monsterDetailList_)) return false;
      if (TotalUsedTime != other.TotalUsedTime) return false;
      if(!backupMonsterList_.Equals(other.backupMonsterList_)) return false;
      if(!choosenMonsterList_.Equals(other.choosenMonsterList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CurRound != 0) hash ^= CurRound.GetHashCode();
      if (DungeonId != 0) hash ^= DungeonId.GetHashCode();
      hash ^= monsterPoolPreviewList_.GetHashCode();
      hash ^= monsterDetailList_.GetHashCode();
      if (TotalUsedTime != 0) hash ^= TotalUsedTime.GetHashCode();
      hash ^= backupMonsterList_.GetHashCode();
      hash ^= choosenMonsterList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      backupMonsterList_.WriteTo(output, _repeated_backupMonsterList_codec);
      monsterPoolPreviewList_.WriteTo(output, _repeated_monsterPoolPreviewList_codec);
      monsterDetailList_.WriteTo(output, _repeated_monsterDetailList_codec);
      if (TotalUsedTime != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(TotalUsedTime);
      }
      choosenMonsterList_.WriteTo(output, _repeated_choosenMonsterList_codec);
      if (CurRound != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(CurRound);
      }
      if (DungeonId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(DungeonId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      backupMonsterList_.WriteTo(ref output, _repeated_backupMonsterList_codec);
      monsterPoolPreviewList_.WriteTo(ref output, _repeated_monsterPoolPreviewList_codec);
      monsterDetailList_.WriteTo(ref output, _repeated_monsterDetailList_codec);
      if (TotalUsedTime != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(TotalUsedTime);
      }
      choosenMonsterList_.WriteTo(ref output, _repeated_choosenMonsterList_codec);
      if (CurRound != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(CurRound);
      }
      if (DungeonId != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(DungeonId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CurRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurRound);
      }
      if (DungeonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DungeonId);
      }
      size += monsterPoolPreviewList_.CalculateSize(_repeated_monsterPoolPreviewList_codec);
      size += monsterDetailList_.CalculateSize(_repeated_monsterDetailList_codec);
      if (TotalUsedTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalUsedTime);
      }
      size += backupMonsterList_.CalculateSize(_repeated_backupMonsterList_codec);
      size += choosenMonsterList_.CalculateSize(_repeated_choosenMonsterList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FungusTrainingProgressDetail other) {
      if (other == null) {
        return;
      }
      if (other.CurRound != 0) {
        CurRound = other.CurRound;
      }
      if (other.DungeonId != 0) {
        DungeonId = other.DungeonId;
      }
      monsterPoolPreviewList_.Add(other.monsterPoolPreviewList_);
      monsterDetailList_.Add(other.monsterDetailList_);
      if (other.TotalUsedTime != 0) {
        TotalUsedTime = other.TotalUsedTime;
      }
      backupMonsterList_.Add(other.backupMonsterList_);
      choosenMonsterList_.Add(other.choosenMonsterList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34:
          case 32: {
            backupMonsterList_.AddEntriesFrom(input, _repeated_backupMonsterList_codec);
            break;
          }
          case 42: {
            monsterPoolPreviewList_.AddEntriesFrom(input, _repeated_monsterPoolPreviewList_codec);
            break;
          }
          case 50: {
            monsterDetailList_.AddEntriesFrom(input, _repeated_monsterDetailList_codec);
            break;
          }
          case 56: {
            TotalUsedTime = input.ReadUInt32();
            break;
          }
          case 66:
          case 64: {
            choosenMonsterList_.AddEntriesFrom(input, _repeated_choosenMonsterList_codec);
            break;
          }
          case 72: {
            CurRound = input.ReadUInt32();
            break;
          }
          case 80: {
            DungeonId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 34:
          case 32: {
            backupMonsterList_.AddEntriesFrom(ref input, _repeated_backupMonsterList_codec);
            break;
          }
          case 42: {
            monsterPoolPreviewList_.AddEntriesFrom(ref input, _repeated_monsterPoolPreviewList_codec);
            break;
          }
          case 50: {
            monsterDetailList_.AddEntriesFrom(ref input, _repeated_monsterDetailList_codec);
            break;
          }
          case 56: {
            TotalUsedTime = input.ReadUInt32();
            break;
          }
          case 66:
          case 64: {
            choosenMonsterList_.AddEntriesFrom(ref input, _repeated_choosenMonsterList_codec);
            break;
          }
          case 72: {
            CurRound = input.ReadUInt32();
            break;
          }
          case 80: {
            DungeonId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
