// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SceneTeamAvatar.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from SceneTeamAvatar.proto</summary>
public static partial class SceneTeamAvatarReflection {

  #region Descriptor
  /// <summary>File descriptor for SceneTeamAvatar.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SceneTeamAvatarReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChVTY2VuZVRlYW1BdmF0YXIucHJvdG8aGUFiaWxpdHlDb250cm9sQmxvY2su",
          "cHJvdG8aGkFiaWxpdHlTeW5jU3RhdGVJbmZvLnByb3RvGhBBdmF0YXJJbmZv",
          "LnByb3RvGhVTY2VuZUF2YXRhckluZm8ucHJvdG8aFVNjZW5lRW50aXR5SW5m",
          "by5wcm90bxoQU2VydmVyQnVmZi5wcm90byKYBAoPU2NlbmVUZWFtQXZhdGFy",
          "EjIKE2F2YXRhcl9hYmlsaXR5X2luZm8YBSABKAsyFS5BYmlsaXR5U3luY1N0",
          "YXRlSW5mbxIgCgthdmF0YXJfaW5mbxgIIAEoCzILLkF2YXRhckluZm8SFAoL",
          "aXNfb25fc2NlbmUYmAEgASgIEhEKCWVudGl0eV9pZBgJIAEoDRITCgthdmF0",
          "YXJfZ3VpZBgPIAEoBBIQCghzY2VuZV9pZBgBIAEoDRIYChB3ZWFwb25fZW50",
          "aXR5X2lkGAcgASgNEisKEXNjZW5lX2F2YXRhcl9pbmZvGAMgASgLMhAuU2Nl",
          "bmVBdmF0YXJJbmZvEhMKC3dlYXBvbl9ndWlkGAQgASgEEjIKE3dlYXBvbl9h",
          "YmlsaXR5X2luZm8YCyABKAsyFS5BYmlsaXR5U3luY1N0YXRlSW5mbxIrChFz",
          "Y2VuZV9lbnRpdHlfaW5mbxgMIAEoCzIQLlNjZW5lRW50aXR5SW5mbxISCgpw",
          "bGF5ZXJfdWlkGA4gASgNEhQKDGlzX3JlY29ubmVjdBgGIAEoCBIzChVhYmls",
          "aXR5X2NvbnRyb2xfYmxvY2sYAiABKAsyFC5BYmlsaXR5Q29udHJvbEJsb2Nr",
          "EhwKFGlzX3BsYXllcl9jdXJfYXZhdGFyGA0gASgIEiUKEHNlcnZlcl9idWZm",
          "X2xpc3QYCiADKAsyCy5TZXJ2ZXJCdWZmQh4KHGVtdS5ncmFzc2N1dHRlci5u",
          "ZXQub2xkcHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::AbilityControlBlockReflection.Descriptor, global::AbilitySyncStateInfoReflection.Descriptor, global::AvatarInfoReflection.Descriptor, global::SceneAvatarInfoReflection.Descriptor, global::SceneEntityInfoReflection.Descriptor, global::ServerBuffReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::SceneTeamAvatar), global::SceneTeamAvatar.Parser, new[]{ "AvatarAbilityInfo", "AvatarInfo", "IsOnScene", "EntityId", "AvatarGuid", "SceneId", "WeaponEntityId", "SceneAvatarInfo", "WeaponGuid", "WeaponAbilityInfo", "SceneEntityInfo", "PlayerUid", "IsReconnect", "AbilityControlBlock", "IsPlayerCurAvatar", "ServerBuffList" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class SceneTeamAvatar : pb::IMessage<SceneTeamAvatar>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<SceneTeamAvatar> _parser = new pb::MessageParser<SceneTeamAvatar>(() => new SceneTeamAvatar());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<SceneTeamAvatar> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SceneTeamAvatarReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SceneTeamAvatar() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SceneTeamAvatar(SceneTeamAvatar other) : this() {
    avatarAbilityInfo_ = other.avatarAbilityInfo_ != null ? other.avatarAbilityInfo_.Clone() : null;
    avatarInfo_ = other.avatarInfo_ != null ? other.avatarInfo_.Clone() : null;
    isOnScene_ = other.isOnScene_;
    entityId_ = other.entityId_;
    avatarGuid_ = other.avatarGuid_;
    sceneId_ = other.sceneId_;
    weaponEntityId_ = other.weaponEntityId_;
    sceneAvatarInfo_ = other.sceneAvatarInfo_ != null ? other.sceneAvatarInfo_.Clone() : null;
    weaponGuid_ = other.weaponGuid_;
    weaponAbilityInfo_ = other.weaponAbilityInfo_ != null ? other.weaponAbilityInfo_.Clone() : null;
    sceneEntityInfo_ = other.sceneEntityInfo_ != null ? other.sceneEntityInfo_.Clone() : null;
    playerUid_ = other.playerUid_;
    isReconnect_ = other.isReconnect_;
    abilityControlBlock_ = other.abilityControlBlock_ != null ? other.abilityControlBlock_.Clone() : null;
    isPlayerCurAvatar_ = other.isPlayerCurAvatar_;
    serverBuffList_ = other.serverBuffList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public SceneTeamAvatar Clone() {
    return new SceneTeamAvatar(this);
  }

  /// <summary>Field number for the "avatar_ability_info" field.</summary>
  public const int AvatarAbilityInfoFieldNumber = 5;
  private global::AbilitySyncStateInfo avatarAbilityInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AbilitySyncStateInfo AvatarAbilityInfo {
    get { return avatarAbilityInfo_; }
    set {
      avatarAbilityInfo_ = value;
    }
  }

  /// <summary>Field number for the "avatar_info" field.</summary>
  public const int AvatarInfoFieldNumber = 8;
  private global::AvatarInfo avatarInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AvatarInfo AvatarInfo {
    get { return avatarInfo_; }
    set {
      avatarInfo_ = value;
    }
  }

  /// <summary>Field number for the "is_on_scene" field.</summary>
  public const int IsOnSceneFieldNumber = 152;
  private bool isOnScene_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsOnScene {
    get { return isOnScene_; }
    set {
      isOnScene_ = value;
    }
  }

  /// <summary>Field number for the "entity_id" field.</summary>
  public const int EntityIdFieldNumber = 9;
  private uint entityId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EntityId {
    get { return entityId_; }
    set {
      entityId_ = value;
    }
  }

  /// <summary>Field number for the "avatar_guid" field.</summary>
  public const int AvatarGuidFieldNumber = 15;
  private ulong avatarGuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong AvatarGuid {
    get { return avatarGuid_; }
    set {
      avatarGuid_ = value;
    }
  }

  /// <summary>Field number for the "scene_id" field.</summary>
  public const int SceneIdFieldNumber = 1;
  private uint sceneId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SceneId {
    get { return sceneId_; }
    set {
      sceneId_ = value;
    }
  }

  /// <summary>Field number for the "weapon_entity_id" field.</summary>
  public const int WeaponEntityIdFieldNumber = 7;
  private uint weaponEntityId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint WeaponEntityId {
    get { return weaponEntityId_; }
    set {
      weaponEntityId_ = value;
    }
  }

  /// <summary>Field number for the "scene_avatar_info" field.</summary>
  public const int SceneAvatarInfoFieldNumber = 3;
  private global::SceneAvatarInfo sceneAvatarInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::SceneAvatarInfo SceneAvatarInfo {
    get { return sceneAvatarInfo_; }
    set {
      sceneAvatarInfo_ = value;
    }
  }

  /// <summary>Field number for the "weapon_guid" field.</summary>
  public const int WeaponGuidFieldNumber = 4;
  private ulong weaponGuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong WeaponGuid {
    get { return weaponGuid_; }
    set {
      weaponGuid_ = value;
    }
  }

  /// <summary>Field number for the "weapon_ability_info" field.</summary>
  public const int WeaponAbilityInfoFieldNumber = 11;
  private global::AbilitySyncStateInfo weaponAbilityInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AbilitySyncStateInfo WeaponAbilityInfo {
    get { return weaponAbilityInfo_; }
    set {
      weaponAbilityInfo_ = value;
    }
  }

  /// <summary>Field number for the "scene_entity_info" field.</summary>
  public const int SceneEntityInfoFieldNumber = 12;
  private global::SceneEntityInfo sceneEntityInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::SceneEntityInfo SceneEntityInfo {
    get { return sceneEntityInfo_; }
    set {
      sceneEntityInfo_ = value;
    }
  }

  /// <summary>Field number for the "player_uid" field.</summary>
  public const int PlayerUidFieldNumber = 14;
  private uint playerUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerUid {
    get { return playerUid_; }
    set {
      playerUid_ = value;
    }
  }

  /// <summary>Field number for the "is_reconnect" field.</summary>
  public const int IsReconnectFieldNumber = 6;
  private bool isReconnect_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsReconnect {
    get { return isReconnect_; }
    set {
      isReconnect_ = value;
    }
  }

  /// <summary>Field number for the "ability_control_block" field.</summary>
  public const int AbilityControlBlockFieldNumber = 2;
  private global::AbilityControlBlock abilityControlBlock_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AbilityControlBlock AbilityControlBlock {
    get { return abilityControlBlock_; }
    set {
      abilityControlBlock_ = value;
    }
  }

  /// <summary>Field number for the "is_player_cur_avatar" field.</summary>
  public const int IsPlayerCurAvatarFieldNumber = 13;
  private bool isPlayerCurAvatar_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPlayerCurAvatar {
    get { return isPlayerCurAvatar_; }
    set {
      isPlayerCurAvatar_ = value;
    }
  }

  /// <summary>Field number for the "server_buff_list" field.</summary>
  public const int ServerBuffListFieldNumber = 10;
  private static readonly pb::FieldCodec<global::ServerBuff> _repeated_serverBuffList_codec
      = pb::FieldCodec.ForMessage(82, global::ServerBuff.Parser);
  private readonly pbc::RepeatedField<global::ServerBuff> serverBuffList_ = new pbc::RepeatedField<global::ServerBuff>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ServerBuff> ServerBuffList {
    get { return serverBuffList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as SceneTeamAvatar);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(SceneTeamAvatar other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(AvatarAbilityInfo, other.AvatarAbilityInfo)) return false;
    if (!object.Equals(AvatarInfo, other.AvatarInfo)) return false;
    if (IsOnScene != other.IsOnScene) return false;
    if (EntityId != other.EntityId) return false;
    if (AvatarGuid != other.AvatarGuid) return false;
    if (SceneId != other.SceneId) return false;
    if (WeaponEntityId != other.WeaponEntityId) return false;
    if (!object.Equals(SceneAvatarInfo, other.SceneAvatarInfo)) return false;
    if (WeaponGuid != other.WeaponGuid) return false;
    if (!object.Equals(WeaponAbilityInfo, other.WeaponAbilityInfo)) return false;
    if (!object.Equals(SceneEntityInfo, other.SceneEntityInfo)) return false;
    if (PlayerUid != other.PlayerUid) return false;
    if (IsReconnect != other.IsReconnect) return false;
    if (!object.Equals(AbilityControlBlock, other.AbilityControlBlock)) return false;
    if (IsPlayerCurAvatar != other.IsPlayerCurAvatar) return false;
    if(!serverBuffList_.Equals(other.serverBuffList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (avatarAbilityInfo_ != null) hash ^= AvatarAbilityInfo.GetHashCode();
    if (avatarInfo_ != null) hash ^= AvatarInfo.GetHashCode();
    if (IsOnScene != false) hash ^= IsOnScene.GetHashCode();
    if (EntityId != 0) hash ^= EntityId.GetHashCode();
    if (AvatarGuid != 0UL) hash ^= AvatarGuid.GetHashCode();
    if (SceneId != 0) hash ^= SceneId.GetHashCode();
    if (WeaponEntityId != 0) hash ^= WeaponEntityId.GetHashCode();
    if (sceneAvatarInfo_ != null) hash ^= SceneAvatarInfo.GetHashCode();
    if (WeaponGuid != 0UL) hash ^= WeaponGuid.GetHashCode();
    if (weaponAbilityInfo_ != null) hash ^= WeaponAbilityInfo.GetHashCode();
    if (sceneEntityInfo_ != null) hash ^= SceneEntityInfo.GetHashCode();
    if (PlayerUid != 0) hash ^= PlayerUid.GetHashCode();
    if (IsReconnect != false) hash ^= IsReconnect.GetHashCode();
    if (abilityControlBlock_ != null) hash ^= AbilityControlBlock.GetHashCode();
    if (IsPlayerCurAvatar != false) hash ^= IsPlayerCurAvatar.GetHashCode();
    hash ^= serverBuffList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (SceneId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SceneId);
    }
    if (abilityControlBlock_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(AbilityControlBlock);
    }
    if (sceneAvatarInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SceneAvatarInfo);
    }
    if (WeaponGuid != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(WeaponGuid);
    }
    if (avatarAbilityInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(AvatarAbilityInfo);
    }
    if (IsReconnect != false) {
      output.WriteRawTag(48);
      output.WriteBool(IsReconnect);
    }
    if (WeaponEntityId != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(WeaponEntityId);
    }
    if (avatarInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(AvatarInfo);
    }
    if (EntityId != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(EntityId);
    }
    serverBuffList_.WriteTo(output, _repeated_serverBuffList_codec);
    if (weaponAbilityInfo_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(WeaponAbilityInfo);
    }
    if (sceneEntityInfo_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(SceneEntityInfo);
    }
    if (IsPlayerCurAvatar != false) {
      output.WriteRawTag(104);
      output.WriteBool(IsPlayerCurAvatar);
    }
    if (PlayerUid != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(PlayerUid);
    }
    if (AvatarGuid != 0UL) {
      output.WriteRawTag(120);
      output.WriteUInt64(AvatarGuid);
    }
    if (IsOnScene != false) {
      output.WriteRawTag(192, 9);
      output.WriteBool(IsOnScene);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (SceneId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(SceneId);
    }
    if (abilityControlBlock_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(AbilityControlBlock);
    }
    if (sceneAvatarInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SceneAvatarInfo);
    }
    if (WeaponGuid != 0UL) {
      output.WriteRawTag(32);
      output.WriteUInt64(WeaponGuid);
    }
    if (avatarAbilityInfo_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(AvatarAbilityInfo);
    }
    if (IsReconnect != false) {
      output.WriteRawTag(48);
      output.WriteBool(IsReconnect);
    }
    if (WeaponEntityId != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(WeaponEntityId);
    }
    if (avatarInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(AvatarInfo);
    }
    if (EntityId != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(EntityId);
    }
    serverBuffList_.WriteTo(ref output, _repeated_serverBuffList_codec);
    if (weaponAbilityInfo_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(WeaponAbilityInfo);
    }
    if (sceneEntityInfo_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(SceneEntityInfo);
    }
    if (IsPlayerCurAvatar != false) {
      output.WriteRawTag(104);
      output.WriteBool(IsPlayerCurAvatar);
    }
    if (PlayerUid != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(PlayerUid);
    }
    if (AvatarGuid != 0UL) {
      output.WriteRawTag(120);
      output.WriteUInt64(AvatarGuid);
    }
    if (IsOnScene != false) {
      output.WriteRawTag(192, 9);
      output.WriteBool(IsOnScene);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (avatarAbilityInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarAbilityInfo);
    }
    if (avatarInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AvatarInfo);
    }
    if (IsOnScene != false) {
      size += 2 + 1;
    }
    if (EntityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityId);
    }
    if (AvatarGuid != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AvatarGuid);
    }
    if (SceneId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SceneId);
    }
    if (WeaponEntityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeaponEntityId);
    }
    if (sceneAvatarInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneAvatarInfo);
    }
    if (WeaponGuid != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WeaponGuid);
    }
    if (weaponAbilityInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeaponAbilityInfo);
    }
    if (sceneEntityInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneEntityInfo);
    }
    if (PlayerUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerUid);
    }
    if (IsReconnect != false) {
      size += 1 + 1;
    }
    if (abilityControlBlock_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbilityControlBlock);
    }
    if (IsPlayerCurAvatar != false) {
      size += 1 + 1;
    }
    size += serverBuffList_.CalculateSize(_repeated_serverBuffList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(SceneTeamAvatar other) {
    if (other == null) {
      return;
    }
    if (other.avatarAbilityInfo_ != null) {
      if (avatarAbilityInfo_ == null) {
        AvatarAbilityInfo = new global::AbilitySyncStateInfo();
      }
      AvatarAbilityInfo.MergeFrom(other.AvatarAbilityInfo);
    }
    if (other.avatarInfo_ != null) {
      if (avatarInfo_ == null) {
        AvatarInfo = new global::AvatarInfo();
      }
      AvatarInfo.MergeFrom(other.AvatarInfo);
    }
    if (other.IsOnScene != false) {
      IsOnScene = other.IsOnScene;
    }
    if (other.EntityId != 0) {
      EntityId = other.EntityId;
    }
    if (other.AvatarGuid != 0UL) {
      AvatarGuid = other.AvatarGuid;
    }
    if (other.SceneId != 0) {
      SceneId = other.SceneId;
    }
    if (other.WeaponEntityId != 0) {
      WeaponEntityId = other.WeaponEntityId;
    }
    if (other.sceneAvatarInfo_ != null) {
      if (sceneAvatarInfo_ == null) {
        SceneAvatarInfo = new global::SceneAvatarInfo();
      }
      SceneAvatarInfo.MergeFrom(other.SceneAvatarInfo);
    }
    if (other.WeaponGuid != 0UL) {
      WeaponGuid = other.WeaponGuid;
    }
    if (other.weaponAbilityInfo_ != null) {
      if (weaponAbilityInfo_ == null) {
        WeaponAbilityInfo = new global::AbilitySyncStateInfo();
      }
      WeaponAbilityInfo.MergeFrom(other.WeaponAbilityInfo);
    }
    if (other.sceneEntityInfo_ != null) {
      if (sceneEntityInfo_ == null) {
        SceneEntityInfo = new global::SceneEntityInfo();
      }
      SceneEntityInfo.MergeFrom(other.SceneEntityInfo);
    }
    if (other.PlayerUid != 0) {
      PlayerUid = other.PlayerUid;
    }
    if (other.IsReconnect != false) {
      IsReconnect = other.IsReconnect;
    }
    if (other.abilityControlBlock_ != null) {
      if (abilityControlBlock_ == null) {
        AbilityControlBlock = new global::AbilityControlBlock();
      }
      AbilityControlBlock.MergeFrom(other.AbilityControlBlock);
    }
    if (other.IsPlayerCurAvatar != false) {
      IsPlayerCurAvatar = other.IsPlayerCurAvatar;
    }
    serverBuffList_.Add(other.serverBuffList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SceneId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (abilityControlBlock_ == null) {
            AbilityControlBlock = new global::AbilityControlBlock();
          }
          input.ReadMessage(AbilityControlBlock);
          break;
        }
        case 26: {
          if (sceneAvatarInfo_ == null) {
            SceneAvatarInfo = new global::SceneAvatarInfo();
          }
          input.ReadMessage(SceneAvatarInfo);
          break;
        }
        case 32: {
          WeaponGuid = input.ReadUInt64();
          break;
        }
        case 42: {
          if (avatarAbilityInfo_ == null) {
            AvatarAbilityInfo = new global::AbilitySyncStateInfo();
          }
          input.ReadMessage(AvatarAbilityInfo);
          break;
        }
        case 48: {
          IsReconnect = input.ReadBool();
          break;
        }
        case 56: {
          WeaponEntityId = input.ReadUInt32();
          break;
        }
        case 66: {
          if (avatarInfo_ == null) {
            AvatarInfo = new global::AvatarInfo();
          }
          input.ReadMessage(AvatarInfo);
          break;
        }
        case 72: {
          EntityId = input.ReadUInt32();
          break;
        }
        case 82: {
          serverBuffList_.AddEntriesFrom(input, _repeated_serverBuffList_codec);
          break;
        }
        case 90: {
          if (weaponAbilityInfo_ == null) {
            WeaponAbilityInfo = new global::AbilitySyncStateInfo();
          }
          input.ReadMessage(WeaponAbilityInfo);
          break;
        }
        case 98: {
          if (sceneEntityInfo_ == null) {
            SceneEntityInfo = new global::SceneEntityInfo();
          }
          input.ReadMessage(SceneEntityInfo);
          break;
        }
        case 104: {
          IsPlayerCurAvatar = input.ReadBool();
          break;
        }
        case 112: {
          PlayerUid = input.ReadUInt32();
          break;
        }
        case 120: {
          AvatarGuid = input.ReadUInt64();
          break;
        }
        case 1216: {
          IsOnScene = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SceneId = input.ReadUInt32();
          break;
        }
        case 18: {
          if (abilityControlBlock_ == null) {
            AbilityControlBlock = new global::AbilityControlBlock();
          }
          input.ReadMessage(AbilityControlBlock);
          break;
        }
        case 26: {
          if (sceneAvatarInfo_ == null) {
            SceneAvatarInfo = new global::SceneAvatarInfo();
          }
          input.ReadMessage(SceneAvatarInfo);
          break;
        }
        case 32: {
          WeaponGuid = input.ReadUInt64();
          break;
        }
        case 42: {
          if (avatarAbilityInfo_ == null) {
            AvatarAbilityInfo = new global::AbilitySyncStateInfo();
          }
          input.ReadMessage(AvatarAbilityInfo);
          break;
        }
        case 48: {
          IsReconnect = input.ReadBool();
          break;
        }
        case 56: {
          WeaponEntityId = input.ReadUInt32();
          break;
        }
        case 66: {
          if (avatarInfo_ == null) {
            AvatarInfo = new global::AvatarInfo();
          }
          input.ReadMessage(AvatarInfo);
          break;
        }
        case 72: {
          EntityId = input.ReadUInt32();
          break;
        }
        case 82: {
          serverBuffList_.AddEntriesFrom(ref input, _repeated_serverBuffList_codec);
          break;
        }
        case 90: {
          if (weaponAbilityInfo_ == null) {
            WeaponAbilityInfo = new global::AbilitySyncStateInfo();
          }
          input.ReadMessage(WeaponAbilityInfo);
          break;
        }
        case 98: {
          if (sceneEntityInfo_ == null) {
            SceneEntityInfo = new global::SceneEntityInfo();
          }
          input.ReadMessage(SceneEntityInfo);
          break;
        }
        case 104: {
          IsPlayerCurAvatar = input.ReadBool();
          break;
        }
        case 112: {
          PlayerUid = input.ReadUInt32();
          break;
        }
        case 120: {
          AvatarGuid = input.ReadUInt64();
          break;
        }
        case 1216: {
          IsOnScene = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
