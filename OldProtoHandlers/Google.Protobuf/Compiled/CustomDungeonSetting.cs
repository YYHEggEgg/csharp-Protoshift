// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CustomDungeonSetting.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from CustomDungeonSetting.proto</summary>
public static partial class CustomDungeonSettingReflection {

  #region Descriptor
  /// <summary>File descriptor for CustomDungeonSetting.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CustomDungeonSettingReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChpDdXN0b21EdW5nZW9uU2V0dGluZy5wcm90byKyAQoUQ3VzdG9tRHVuZ2Vv",
          "blNldHRpbmcSFgoOb3Blbl9yb29tX2xpc3QYASADKA0SGAoQaXNfYXJyaXZl",
          "X2ZpbmlzaBgOIAEoCBIQCghsaWZlX251bRgGIAEoDRIVCg1zdGFydF9yb29t",
          "X2lkGAQgASgNEhcKD2lzX2ZvcmJpZF9za2lsbBgDIAEoCBISCgpjb2luX2xp",
          "bWl0GAogASgNEhIKCnRpbWVfbGltaXQYCSABKA1CHgocZW11LmdyYXNzY3V0",
          "dGVyLm5ldC5vbGRwcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CustomDungeonSetting), global::CustomDungeonSetting.Parser, new[]{ "OpenRoomList", "IsArriveFinish", "LifeNum", "StartRoomId", "IsForbidSkill", "CoinLimit", "TimeLimit" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CustomDungeonSetting : pb::IMessage<CustomDungeonSetting>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CustomDungeonSetting> _parser = new pb::MessageParser<CustomDungeonSetting>(() => new CustomDungeonSetting());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CustomDungeonSetting> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CustomDungeonSettingReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CustomDungeonSetting() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CustomDungeonSetting(CustomDungeonSetting other) : this() {
    openRoomList_ = other.openRoomList_.Clone();
    isArriveFinish_ = other.isArriveFinish_;
    lifeNum_ = other.lifeNum_;
    startRoomId_ = other.startRoomId_;
    isForbidSkill_ = other.isForbidSkill_;
    coinLimit_ = other.coinLimit_;
    timeLimit_ = other.timeLimit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CustomDungeonSetting Clone() {
    return new CustomDungeonSetting(this);
  }

  /// <summary>Field number for the "open_room_list" field.</summary>
  public const int OpenRoomListFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_openRoomList_codec
      = pb::FieldCodec.ForUInt32(10);
  private readonly pbc::RepeatedField<uint> openRoomList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> OpenRoomList {
    get { return openRoomList_; }
  }

  /// <summary>Field number for the "is_arrive_finish" field.</summary>
  public const int IsArriveFinishFieldNumber = 14;
  private bool isArriveFinish_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsArriveFinish {
    get { return isArriveFinish_; }
    set {
      isArriveFinish_ = value;
    }
  }

  /// <summary>Field number for the "life_num" field.</summary>
  public const int LifeNumFieldNumber = 6;
  private uint lifeNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LifeNum {
    get { return lifeNum_; }
    set {
      lifeNum_ = value;
    }
  }

  /// <summary>Field number for the "start_room_id" field.</summary>
  public const int StartRoomIdFieldNumber = 4;
  private uint startRoomId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StartRoomId {
    get { return startRoomId_; }
    set {
      startRoomId_ = value;
    }
  }

  /// <summary>Field number for the "is_forbid_skill" field.</summary>
  public const int IsForbidSkillFieldNumber = 3;
  private bool isForbidSkill_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsForbidSkill {
    get { return isForbidSkill_; }
    set {
      isForbidSkill_ = value;
    }
  }

  /// <summary>Field number for the "coin_limit" field.</summary>
  public const int CoinLimitFieldNumber = 10;
  private uint coinLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CoinLimit {
    get { return coinLimit_; }
    set {
      coinLimit_ = value;
    }
  }

  /// <summary>Field number for the "time_limit" field.</summary>
  public const int TimeLimitFieldNumber = 9;
  private uint timeLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TimeLimit {
    get { return timeLimit_; }
    set {
      timeLimit_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CustomDungeonSetting);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CustomDungeonSetting other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!openRoomList_.Equals(other.openRoomList_)) return false;
    if (IsArriveFinish != other.IsArriveFinish) return false;
    if (LifeNum != other.LifeNum) return false;
    if (StartRoomId != other.StartRoomId) return false;
    if (IsForbidSkill != other.IsForbidSkill) return false;
    if (CoinLimit != other.CoinLimit) return false;
    if (TimeLimit != other.TimeLimit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= openRoomList_.GetHashCode();
    if (IsArriveFinish != false) hash ^= IsArriveFinish.GetHashCode();
    if (LifeNum != 0) hash ^= LifeNum.GetHashCode();
    if (StartRoomId != 0) hash ^= StartRoomId.GetHashCode();
    if (IsForbidSkill != false) hash ^= IsForbidSkill.GetHashCode();
    if (CoinLimit != 0) hash ^= CoinLimit.GetHashCode();
    if (TimeLimit != 0) hash ^= TimeLimit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    openRoomList_.WriteTo(output, _repeated_openRoomList_codec);
    if (IsForbidSkill != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsForbidSkill);
    }
    if (StartRoomId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(StartRoomId);
    }
    if (LifeNum != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(LifeNum);
    }
    if (TimeLimit != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(TimeLimit);
    }
    if (CoinLimit != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(CoinLimit);
    }
    if (IsArriveFinish != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsArriveFinish);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    openRoomList_.WriteTo(ref output, _repeated_openRoomList_codec);
    if (IsForbidSkill != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsForbidSkill);
    }
    if (StartRoomId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(StartRoomId);
    }
    if (LifeNum != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(LifeNum);
    }
    if (TimeLimit != 0) {
      output.WriteRawTag(72);
      output.WriteUInt32(TimeLimit);
    }
    if (CoinLimit != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(CoinLimit);
    }
    if (IsArriveFinish != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsArriveFinish);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += openRoomList_.CalculateSize(_repeated_openRoomList_codec);
    if (IsArriveFinish != false) {
      size += 1 + 1;
    }
    if (LifeNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LifeNum);
    }
    if (StartRoomId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartRoomId);
    }
    if (IsForbidSkill != false) {
      size += 1 + 1;
    }
    if (CoinLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CoinLimit);
    }
    if (TimeLimit != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeLimit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CustomDungeonSetting other) {
    if (other == null) {
      return;
    }
    openRoomList_.Add(other.openRoomList_);
    if (other.IsArriveFinish != false) {
      IsArriveFinish = other.IsArriveFinish;
    }
    if (other.LifeNum != 0) {
      LifeNum = other.LifeNum;
    }
    if (other.StartRoomId != 0) {
      StartRoomId = other.StartRoomId;
    }
    if (other.IsForbidSkill != false) {
      IsForbidSkill = other.IsForbidSkill;
    }
    if (other.CoinLimit != 0) {
      CoinLimit = other.CoinLimit;
    }
    if (other.TimeLimit != 0) {
      TimeLimit = other.TimeLimit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          openRoomList_.AddEntriesFrom(input, _repeated_openRoomList_codec);
          break;
        }
        case 24: {
          IsForbidSkill = input.ReadBool();
          break;
        }
        case 32: {
          StartRoomId = input.ReadUInt32();
          break;
        }
        case 48: {
          LifeNum = input.ReadUInt32();
          break;
        }
        case 72: {
          TimeLimit = input.ReadUInt32();
          break;
        }
        case 80: {
          CoinLimit = input.ReadUInt32();
          break;
        }
        case 112: {
          IsArriveFinish = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          openRoomList_.AddEntriesFrom(ref input, _repeated_openRoomList_codec);
          break;
        }
        case 24: {
          IsForbidSkill = input.ReadBool();
          break;
        }
        case 32: {
          StartRoomId = input.ReadUInt32();
          break;
        }
        case 48: {
          LifeNum = input.ReadUInt32();
          break;
        }
        case 72: {
          TimeLimit = input.ReadUInt32();
          break;
        }
        case 80: {
          CoinLimit = input.ReadUInt32();
          break;
        }
        case 112: {
          IsArriveFinish = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
