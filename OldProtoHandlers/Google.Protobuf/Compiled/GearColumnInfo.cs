// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GearColumnInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OldProtos {

  /// <summary>Holder for reflection information generated from GearColumnInfo.proto</summary>
  public static partial class GearColumnInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for GearColumnInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GearColumnInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRHZWFyQ29sdW1uSW5mby5wcm90byJ8Cg5HZWFyQ29sdW1uSW5mbxIZChFn",
            "ZWFyX2NvbHVtbl9pbmRleBgHIAEoDRITCgtpc19vdmVydHVybhgDIAEoCBIQ",
            "CghoYXNfZ2VhchgCIAEoCBIPCgdnZWFyX2lkGAsgASgNEhcKD3BsYWNlbWVu",
            "dF9sYXllchgGIAEoDUIMqgIJT2xkUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OldProtos.GearColumnInfo), global::OldProtos.GearColumnInfo.Parser, new[]{ "GearColumnIndex", "IsOverturn", "HasGear", "GearId", "PlacementLayer" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GearColumnInfo : pb::IMessage<GearColumnInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GearColumnInfo> _parser = new pb::MessageParser<GearColumnInfo>(() => new GearColumnInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GearColumnInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OldProtos.GearColumnInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GearColumnInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GearColumnInfo(GearColumnInfo other) : this() {
      gearColumnIndex_ = other.gearColumnIndex_;
      isOverturn_ = other.isOverturn_;
      hasGear_ = other.hasGear_;
      gearId_ = other.gearId_;
      placementLayer_ = other.placementLayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GearColumnInfo Clone() {
      return new GearColumnInfo(this);
    }

    /// <summary>Field number for the "gear_column_index" field.</summary>
    public const int GearColumnIndexFieldNumber = 7;
    private uint gearColumnIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GearColumnIndex {
      get { return gearColumnIndex_; }
      set {
        gearColumnIndex_ = value;
      }
    }

    /// <summary>Field number for the "is_overturn" field.</summary>
    public const int IsOverturnFieldNumber = 3;
    private bool isOverturn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsOverturn {
      get { return isOverturn_; }
      set {
        isOverturn_ = value;
      }
    }

    /// <summary>Field number for the "has_gear" field.</summary>
    public const int HasGearFieldNumber = 2;
    private bool hasGear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGear {
      get { return hasGear_; }
      set {
        hasGear_ = value;
      }
    }

    /// <summary>Field number for the "gear_id" field.</summary>
    public const int GearIdFieldNumber = 11;
    private uint gearId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GearId {
      get { return gearId_; }
      set {
        gearId_ = value;
      }
    }

    /// <summary>Field number for the "placement_layer" field.</summary>
    public const int PlacementLayerFieldNumber = 6;
    private uint placementLayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlacementLayer {
      get { return placementLayer_; }
      set {
        placementLayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GearColumnInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GearColumnInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GearColumnIndex != other.GearColumnIndex) return false;
      if (IsOverturn != other.IsOverturn) return false;
      if (HasGear != other.HasGear) return false;
      if (GearId != other.GearId) return false;
      if (PlacementLayer != other.PlacementLayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GearColumnIndex != 0) hash ^= GearColumnIndex.GetHashCode();
      if (IsOverturn != false) hash ^= IsOverturn.GetHashCode();
      if (HasGear != false) hash ^= HasGear.GetHashCode();
      if (GearId != 0) hash ^= GearId.GetHashCode();
      if (PlacementLayer != 0) hash ^= PlacementLayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGear != false) {
        output.WriteRawTag(16);
        output.WriteBool(HasGear);
      }
      if (IsOverturn != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOverturn);
      }
      if (PlacementLayer != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PlacementLayer);
      }
      if (GearColumnIndex != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(GearColumnIndex);
      }
      if (GearId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(GearId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGear != false) {
        output.WriteRawTag(16);
        output.WriteBool(HasGear);
      }
      if (IsOverturn != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsOverturn);
      }
      if (PlacementLayer != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PlacementLayer);
      }
      if (GearColumnIndex != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(GearColumnIndex);
      }
      if (GearId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(GearId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GearColumnIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GearColumnIndex);
      }
      if (IsOverturn != false) {
        size += 1 + 1;
      }
      if (HasGear != false) {
        size += 1 + 1;
      }
      if (GearId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GearId);
      }
      if (PlacementLayer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlacementLayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GearColumnInfo other) {
      if (other == null) {
        return;
      }
      if (other.GearColumnIndex != 0) {
        GearColumnIndex = other.GearColumnIndex;
      }
      if (other.IsOverturn != false) {
        IsOverturn = other.IsOverturn;
      }
      if (other.HasGear != false) {
        HasGear = other.HasGear;
      }
      if (other.GearId != 0) {
        GearId = other.GearId;
      }
      if (other.PlacementLayer != 0) {
        PlacementLayer = other.PlacementLayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            HasGear = input.ReadBool();
            break;
          }
          case 24: {
            IsOverturn = input.ReadBool();
            break;
          }
          case 48: {
            PlacementLayer = input.ReadUInt32();
            break;
          }
          case 56: {
            GearColumnIndex = input.ReadUInt32();
            break;
          }
          case 88: {
            GearId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            HasGear = input.ReadBool();
            break;
          }
          case 24: {
            IsOverturn = input.ReadBool();
            break;
          }
          case 48: {
            PlacementLayer = input.ReadUInt32();
            break;
          }
          case 56: {
            GearColumnIndex = input.ReadUInt32();
            break;
          }
          case 88: {
            GearId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
