// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Weapon.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Weapon.proto</summary>
public static partial class WeaponReflection {

  #region Descriptor
  /// <summary>File descriptor for Weapon.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static WeaponReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxXZWFwb24ucHJvdG8ilgEKBldlYXBvbhINCgVsZXZlbBgBIAEoDRILCgNl",
          "eHAYAiABKA0SFQoNcHJvbW90ZV9sZXZlbBgDIAEoDRIoCglhZmZpeF9tYXAY",
          "BCADKAsyFS5XZWFwb24uQWZmaXhNYXBFbnRyeRovCg1BZmZpeE1hcEVudHJ5",
          "EgsKA2tleRgBIAEoDRINCgV2YWx1ZRgCIAEoDToCOAFCHgocZW11LmdyYXNz",
          "Y3V0dGVyLm5ldC5vbGRwcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Weapon), global::Weapon.Parser, new[]{ "Level", "Exp", "PromoteLevel", "AffixMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Weapon : pb::IMessage<Weapon>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Weapon> _parser = new pb::MessageParser<Weapon>(() => new Weapon());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Weapon> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::WeaponReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Weapon() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Weapon(Weapon other) : this() {
    level_ = other.level_;
    exp_ = other.exp_;
    promoteLevel_ = other.promoteLevel_;
    affixMap_ = other.affixMap_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Weapon Clone() {
    return new Weapon(this);
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int LevelFieldNumber = 1;
  private uint level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int ExpFieldNumber = 2;
  private uint exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "promote_level" field.</summary>
  public const int PromoteLevelFieldNumber = 3;
  private uint promoteLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PromoteLevel {
    get { return promoteLevel_; }
    set {
      promoteLevel_ = value;
    }
  }

  /// <summary>Field number for the "affix_map" field.</summary>
  public const int AffixMapFieldNumber = 4;
  private static readonly pbc::MapField<uint, uint>.Codec _map_affixMap_codec
      = new pbc::MapField<uint, uint>.Codec(pb::FieldCodec.ForUInt32(8, 0), pb::FieldCodec.ForUInt32(16, 0), 34);
  private readonly pbc::MapField<uint, uint> affixMap_ = new pbc::MapField<uint, uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::MapField<uint, uint> AffixMap {
    get { return affixMap_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Weapon);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Weapon other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Level != other.Level) return false;
    if (Exp != other.Exp) return false;
    if (PromoteLevel != other.PromoteLevel) return false;
    if (!AffixMap.Equals(other.AffixMap)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Level != 0) hash ^= Level.GetHashCode();
    if (Exp != 0) hash ^= Exp.GetHashCode();
    if (PromoteLevel != 0) hash ^= PromoteLevel.GetHashCode();
    hash ^= AffixMap.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Level != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Level);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Exp);
    }
    if (PromoteLevel != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PromoteLevel);
    }
    affixMap_.WriteTo(output, _map_affixMap_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Level != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(Level);
    }
    if (Exp != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Exp);
    }
    if (PromoteLevel != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PromoteLevel);
    }
    affixMap_.WriteTo(ref output, _map_affixMap_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
    }
    if (Exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Exp);
    }
    if (PromoteLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PromoteLevel);
    }
    size += affixMap_.CalculateSize(_map_affixMap_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Weapon other) {
    if (other == null) {
      return;
    }
    if (other.Level != 0) {
      Level = other.Level;
    }
    if (other.Exp != 0) {
      Exp = other.Exp;
    }
    if (other.PromoteLevel != 0) {
      PromoteLevel = other.PromoteLevel;
    }
    affixMap_.Add(other.affixMap_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Level = input.ReadUInt32();
          break;
        }
        case 16: {
          Exp = input.ReadUInt32();
          break;
        }
        case 24: {
          PromoteLevel = input.ReadUInt32();
          break;
        }
        case 34: {
          affixMap_.AddEntriesFrom(input, _map_affixMap_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Level = input.ReadUInt32();
          break;
        }
        case 16: {
          Exp = input.ReadUInt32();
          break;
        }
        case 24: {
          PromoteLevel = input.ReadUInt32();
          break;
        }
        case 34: {
          affixMap_.AddEntriesFrom(ref input, _map_affixMap_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
