// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCGTCTavernInfoNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GCGTCTavernInfoNotify.proto</summary>
public static partial class GCGTCTavernInfoNotifyReflection {

  #region Descriptor
  /// <summary>File descriptor for GCGTCTavernInfoNotify.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GCGTCTavernInfoNotifyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChtHQ0dUQ1RhdmVybkluZm9Ob3RpZnkucHJvdG8irgEKFUdDR1RDVGF2ZXJu",
          "SW5mb05vdGlmeRIYChBpc19sYXN0X2R1ZWxfd2luGA4gASgIEhAKCGxldmVs",
          "X2lkGAsgASgNEhgKEGlzX293bmVyX2luX2R1ZWwYBSABKAgSEAoIcG9pbnRf",
          "aWQYAyABKA0SEQoJYXZhdGFyX2lkGAwgASgNEhQKDGNoYXJhY3Rlcl9pZBgH",
          "IAEoDRIUCgxlbGVtZW50X3R5cGUYCiABKA1CHgocZW11LmdyYXNzY3V0dGVy",
          "Lm5ldC5vbGRwcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GCGTCTavernInfoNotify), global::GCGTCTavernInfoNotify.Parser, new[]{ "IsLastDuelWin", "LevelId", "IsOwnerInDuel", "PointId", "AvatarId", "CharacterId", "ElementType" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// CmdId: 7011
/// EnetChannelId: 0
/// EnetIsReliable: true
/// </summary>
public sealed partial class GCGTCTavernInfoNotify : pb::IMessage<GCGTCTavernInfoNotify>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GCGTCTavernInfoNotify> _parser = new pb::MessageParser<GCGTCTavernInfoNotify>(() => new GCGTCTavernInfoNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GCGTCTavernInfoNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GCGTCTavernInfoNotifyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GCGTCTavernInfoNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GCGTCTavernInfoNotify(GCGTCTavernInfoNotify other) : this() {
    isLastDuelWin_ = other.isLastDuelWin_;
    levelId_ = other.levelId_;
    isOwnerInDuel_ = other.isOwnerInDuel_;
    pointId_ = other.pointId_;
    avatarId_ = other.avatarId_;
    characterId_ = other.characterId_;
    elementType_ = other.elementType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GCGTCTavernInfoNotify Clone() {
    return new GCGTCTavernInfoNotify(this);
  }

  /// <summary>Field number for the "is_last_duel_win" field.</summary>
  public const int IsLastDuelWinFieldNumber = 14;
  private bool isLastDuelWin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsLastDuelWin {
    get { return isLastDuelWin_; }
    set {
      isLastDuelWin_ = value;
    }
  }

  /// <summary>Field number for the "level_id" field.</summary>
  public const int LevelIdFieldNumber = 11;
  private uint levelId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LevelId {
    get { return levelId_; }
    set {
      levelId_ = value;
    }
  }

  /// <summary>Field number for the "is_owner_in_duel" field.</summary>
  public const int IsOwnerInDuelFieldNumber = 5;
  private bool isOwnerInDuel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsOwnerInDuel {
    get { return isOwnerInDuel_; }
    set {
      isOwnerInDuel_ = value;
    }
  }

  /// <summary>Field number for the "point_id" field.</summary>
  public const int PointIdFieldNumber = 3;
  private uint pointId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PointId {
    get { return pointId_; }
    set {
      pointId_ = value;
    }
  }

  /// <summary>Field number for the "avatar_id" field.</summary>
  public const int AvatarIdFieldNumber = 12;
  private uint avatarId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AvatarId {
    get { return avatarId_; }
    set {
      avatarId_ = value;
    }
  }

  /// <summary>Field number for the "character_id" field.</summary>
  public const int CharacterIdFieldNumber = 7;
  private uint characterId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CharacterId {
    get { return characterId_; }
    set {
      characterId_ = value;
    }
  }

  /// <summary>Field number for the "element_type" field.</summary>
  public const int ElementTypeFieldNumber = 10;
  private uint elementType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ElementType {
    get { return elementType_; }
    set {
      elementType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GCGTCTavernInfoNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GCGTCTavernInfoNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsLastDuelWin != other.IsLastDuelWin) return false;
    if (LevelId != other.LevelId) return false;
    if (IsOwnerInDuel != other.IsOwnerInDuel) return false;
    if (PointId != other.PointId) return false;
    if (AvatarId != other.AvatarId) return false;
    if (CharacterId != other.CharacterId) return false;
    if (ElementType != other.ElementType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (IsLastDuelWin != false) hash ^= IsLastDuelWin.GetHashCode();
    if (LevelId != 0) hash ^= LevelId.GetHashCode();
    if (IsOwnerInDuel != false) hash ^= IsOwnerInDuel.GetHashCode();
    if (PointId != 0) hash ^= PointId.GetHashCode();
    if (AvatarId != 0) hash ^= AvatarId.GetHashCode();
    if (CharacterId != 0) hash ^= CharacterId.GetHashCode();
    if (ElementType != 0) hash ^= ElementType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (PointId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PointId);
    }
    if (IsOwnerInDuel != false) {
      output.WriteRawTag(40);
      output.WriteBool(IsOwnerInDuel);
    }
    if (CharacterId != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(CharacterId);
    }
    if (ElementType != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(ElementType);
    }
    if (LevelId != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(LevelId);
    }
    if (AvatarId != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(AvatarId);
    }
    if (IsLastDuelWin != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsLastDuelWin);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (PointId != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(PointId);
    }
    if (IsOwnerInDuel != false) {
      output.WriteRawTag(40);
      output.WriteBool(IsOwnerInDuel);
    }
    if (CharacterId != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(CharacterId);
    }
    if (ElementType != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(ElementType);
    }
    if (LevelId != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(LevelId);
    }
    if (AvatarId != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(AvatarId);
    }
    if (IsLastDuelWin != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsLastDuelWin);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (IsLastDuelWin != false) {
      size += 1 + 1;
    }
    if (LevelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelId);
    }
    if (IsOwnerInDuel != false) {
      size += 1 + 1;
    }
    if (PointId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PointId);
    }
    if (AvatarId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvatarId);
    }
    if (CharacterId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CharacterId);
    }
    if (ElementType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ElementType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GCGTCTavernInfoNotify other) {
    if (other == null) {
      return;
    }
    if (other.IsLastDuelWin != false) {
      IsLastDuelWin = other.IsLastDuelWin;
    }
    if (other.LevelId != 0) {
      LevelId = other.LevelId;
    }
    if (other.IsOwnerInDuel != false) {
      IsOwnerInDuel = other.IsOwnerInDuel;
    }
    if (other.PointId != 0) {
      PointId = other.PointId;
    }
    if (other.AvatarId != 0) {
      AvatarId = other.AvatarId;
    }
    if (other.CharacterId != 0) {
      CharacterId = other.CharacterId;
    }
    if (other.ElementType != 0) {
      ElementType = other.ElementType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 24: {
          PointId = input.ReadUInt32();
          break;
        }
        case 40: {
          IsOwnerInDuel = input.ReadBool();
          break;
        }
        case 56: {
          CharacterId = input.ReadUInt32();
          break;
        }
        case 80: {
          ElementType = input.ReadUInt32();
          break;
        }
        case 88: {
          LevelId = input.ReadUInt32();
          break;
        }
        case 96: {
          AvatarId = input.ReadUInt32();
          break;
        }
        case 112: {
          IsLastDuelWin = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 24: {
          PointId = input.ReadUInt32();
          break;
        }
        case 40: {
          IsOwnerInDuel = input.ReadBool();
          break;
        }
        case 56: {
          CharacterId = input.ReadUInt32();
          break;
        }
        case 80: {
          ElementType = input.ReadUInt32();
          break;
        }
        case 88: {
          LevelId = input.ReadUInt32();
          break;
        }
        case 96: {
          AvatarId = input.ReadUInt32();
          break;
        }
        case 112: {
          IsLastDuelWin = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
