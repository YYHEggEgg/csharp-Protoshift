// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TreasureMapDetectorData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from TreasureMapDetectorData.proto</summary>
public static partial class TreasureMapDetectorDataReflection {

  #region Descriptor
  /// <summary>File descriptor for TreasureMapDetectorData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TreasureMapDetectorDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch1UcmVhc3VyZU1hcERldGVjdG9yRGF0YS5wcm90bxoMVmVjdG9yLnByb3Rv",
          "IpEBChdUcmVhc3VyZU1hcERldGVjdG9yRGF0YRIRCglyZWdpb25faWQYBCAB",
          "KA0SGwoKY2VudGVyX3BvcxgHIAEoCzIHLlZlY3RvchIaChJpc19yZWdpb25f",
          "ZGV0ZWN0ZWQYBiABKAgSGgoJc3BvdF9saXN0GAogAygLMgcuVmVjdG9yEg4K",
          "BnJhZGl1cxgOIAEoDUIeChxlbXUuZ3Jhc3NjdXR0ZXIubmV0Lm9sZHByb3Rv",
          "YgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::VectorReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::TreasureMapDetectorData), global::TreasureMapDetectorData.Parser, new[]{ "RegionId", "CenterPos", "IsRegionDetected", "SpotList", "Radius" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class TreasureMapDetectorData : pb::IMessage<TreasureMapDetectorData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TreasureMapDetectorData> _parser = new pb::MessageParser<TreasureMapDetectorData>(() => new TreasureMapDetectorData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<TreasureMapDetectorData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TreasureMapDetectorDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TreasureMapDetectorData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TreasureMapDetectorData(TreasureMapDetectorData other) : this() {
    regionId_ = other.regionId_;
    centerPos_ = other.centerPos_ != null ? other.centerPos_.Clone() : null;
    isRegionDetected_ = other.isRegionDetected_;
    spotList_ = other.spotList_.Clone();
    radius_ = other.radius_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public TreasureMapDetectorData Clone() {
    return new TreasureMapDetectorData(this);
  }

  /// <summary>Field number for the "region_id" field.</summary>
  public const int RegionIdFieldNumber = 4;
  private uint regionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RegionId {
    get { return regionId_; }
    set {
      regionId_ = value;
    }
  }

  /// <summary>Field number for the "center_pos" field.</summary>
  public const int CenterPosFieldNumber = 7;
  private global::Vector centerPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector CenterPos {
    get { return centerPos_; }
    set {
      centerPos_ = value;
    }
  }

  /// <summary>Field number for the "is_region_detected" field.</summary>
  public const int IsRegionDetectedFieldNumber = 6;
  private bool isRegionDetected_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsRegionDetected {
    get { return isRegionDetected_; }
    set {
      isRegionDetected_ = value;
    }
  }

  /// <summary>Field number for the "spot_list" field.</summary>
  public const int SpotListFieldNumber = 10;
  private static readonly pb::FieldCodec<global::Vector> _repeated_spotList_codec
      = pb::FieldCodec.ForMessage(82, global::Vector.Parser);
  private readonly pbc::RepeatedField<global::Vector> spotList_ = new pbc::RepeatedField<global::Vector>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Vector> SpotList {
    get { return spotList_; }
  }

  /// <summary>Field number for the "radius" field.</summary>
  public const int RadiusFieldNumber = 14;
  private uint radius_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Radius {
    get { return radius_; }
    set {
      radius_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as TreasureMapDetectorData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(TreasureMapDetectorData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RegionId != other.RegionId) return false;
    if (!object.Equals(CenterPos, other.CenterPos)) return false;
    if (IsRegionDetected != other.IsRegionDetected) return false;
    if(!spotList_.Equals(other.spotList_)) return false;
    if (Radius != other.Radius) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (RegionId != 0) hash ^= RegionId.GetHashCode();
    if (centerPos_ != null) hash ^= CenterPos.GetHashCode();
    if (IsRegionDetected != false) hash ^= IsRegionDetected.GetHashCode();
    hash ^= spotList_.GetHashCode();
    if (Radius != 0) hash ^= Radius.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RegionId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(RegionId);
    }
    if (IsRegionDetected != false) {
      output.WriteRawTag(48);
      output.WriteBool(IsRegionDetected);
    }
    if (centerPos_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(CenterPos);
    }
    spotList_.WriteTo(output, _repeated_spotList_codec);
    if (Radius != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(Radius);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RegionId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(RegionId);
    }
    if (IsRegionDetected != false) {
      output.WriteRawTag(48);
      output.WriteBool(IsRegionDetected);
    }
    if (centerPos_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(CenterPos);
    }
    spotList_.WriteTo(ref output, _repeated_spotList_codec);
    if (Radius != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(Radius);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (RegionId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RegionId);
    }
    if (centerPos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CenterPos);
    }
    if (IsRegionDetected != false) {
      size += 1 + 1;
    }
    size += spotList_.CalculateSize(_repeated_spotList_codec);
    if (Radius != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Radius);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(TreasureMapDetectorData other) {
    if (other == null) {
      return;
    }
    if (other.RegionId != 0) {
      RegionId = other.RegionId;
    }
    if (other.centerPos_ != null) {
      if (centerPos_ == null) {
        CenterPos = new global::Vector();
      }
      CenterPos.MergeFrom(other.CenterPos);
    }
    if (other.IsRegionDetected != false) {
      IsRegionDetected = other.IsRegionDetected;
    }
    spotList_.Add(other.spotList_);
    if (other.Radius != 0) {
      Radius = other.Radius;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 32: {
          RegionId = input.ReadUInt32();
          break;
        }
        case 48: {
          IsRegionDetected = input.ReadBool();
          break;
        }
        case 58: {
          if (centerPos_ == null) {
            CenterPos = new global::Vector();
          }
          input.ReadMessage(CenterPos);
          break;
        }
        case 82: {
          spotList_.AddEntriesFrom(input, _repeated_spotList_codec);
          break;
        }
        case 112: {
          Radius = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 32: {
          RegionId = input.ReadUInt32();
          break;
        }
        case 48: {
          IsRegionDetected = input.ReadBool();
          break;
        }
        case 58: {
          if (centerPos_ == null) {
            CenterPos = new global::Vector();
          }
          input.ReadMessage(CenterPos);
          break;
        }
        case 82: {
          spotList_.AddEntriesFrom(ref input, _repeated_spotList_codec);
          break;
        }
        case 112: {
          Radius = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
