// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BrickBreakerSettleNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from BrickBreakerSettleNotify.proto</summary>
public static partial class BrickBreakerSettleNotifyReflection {

  #region Descriptor
  /// <summary>File descriptor for BrickBreakerSettleNotify.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BrickBreakerSettleNotifyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch5Ccmlja0JyZWFrZXJTZXR0bGVOb3RpZnkucHJvdG8aEFVpbnQzMlBhaXIu",
          "cHJvdG8i/wIKGEJyaWNrQnJlYWtlclNldHRsZU5vdGlmeRISCgpnYWxsZXJ5",
          "X2lkGAYgASgNEg0KBXNjb3JlGA4gASgNEhAKCGxldmVsX2lkGAEgASgNEhUK",
          "DWlzX25ld19yZWNvcmQYDSABKAgSJgoRdXBkYXRlX3NraWxsX2xpc3QYCiAD",
          "KAsyCy5VaW50MzJQYWlyEjYKBnJlYXNvbhgFIAEoDjImLkJyaWNrQnJlYWtl",
          "clNldHRsZU5vdGlmeS5TZXR0bGVSZWFzb24SFgoOaXNfc2luZ2xlX21vZGUY",
          "CSABKAgSDQoFY29tYm8YDCABKA0SDAoEdGltZRgPIAEoDRISCgppc19kdW5n",
          "ZW9uGAsgASgIIm4KDFNldHRsZVJlYXNvbhIaChZTRVRUTEVfUkVBU09OX1RJ",
          "TUVfT1VUEAASEwoPU0VUVExFX1BMQVlfRU5EEAESFgoSU0VUVExFX1BMQVlF",
          "Ul9RVUlUEAISFQoRU0VUVExFX0xJRkVfQ09VTlQQA0IeChxlbXUuZ3Jhc3Nj",
          "dXR0ZXIubmV0Lm9sZHByb3RvYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::Uint32PairReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::BrickBreakerSettleNotify), global::BrickBreakerSettleNotify.Parser, new[]{ "GalleryId", "Score", "LevelId", "IsNewRecord", "UpdateSkillList", "Reason", "IsSingleMode", "Combo", "Time", "IsDungeon" }, null, new[]{ typeof(global::BrickBreakerSettleNotify.Types.SettleReason) }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class BrickBreakerSettleNotify : pb::IMessage<BrickBreakerSettleNotify>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BrickBreakerSettleNotify> _parser = new pb::MessageParser<BrickBreakerSettleNotify>(() => new BrickBreakerSettleNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<BrickBreakerSettleNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BrickBreakerSettleNotifyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BrickBreakerSettleNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BrickBreakerSettleNotify(BrickBreakerSettleNotify other) : this() {
    galleryId_ = other.galleryId_;
    score_ = other.score_;
    levelId_ = other.levelId_;
    isNewRecord_ = other.isNewRecord_;
    updateSkillList_ = other.updateSkillList_.Clone();
    reason_ = other.reason_;
    isSingleMode_ = other.isSingleMode_;
    combo_ = other.combo_;
    time_ = other.time_;
    isDungeon_ = other.isDungeon_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BrickBreakerSettleNotify Clone() {
    return new BrickBreakerSettleNotify(this);
  }

  /// <summary>Field number for the "gallery_id" field.</summary>
  public const int GalleryIdFieldNumber = 6;
  private uint galleryId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GalleryId {
    get { return galleryId_; }
    set {
      galleryId_ = value;
    }
  }

  /// <summary>Field number for the "score" field.</summary>
  public const int ScoreFieldNumber = 14;
  private uint score_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Score {
    get { return score_; }
    set {
      score_ = value;
    }
  }

  /// <summary>Field number for the "level_id" field.</summary>
  public const int LevelIdFieldNumber = 1;
  private uint levelId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LevelId {
    get { return levelId_; }
    set {
      levelId_ = value;
    }
  }

  /// <summary>Field number for the "is_new_record" field.</summary>
  public const int IsNewRecordFieldNumber = 13;
  private bool isNewRecord_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsNewRecord {
    get { return isNewRecord_; }
    set {
      isNewRecord_ = value;
    }
  }

  /// <summary>Field number for the "update_skill_list" field.</summary>
  public const int UpdateSkillListFieldNumber = 10;
  private static readonly pb::FieldCodec<global::Uint32Pair> _repeated_updateSkillList_codec
      = pb::FieldCodec.ForMessage(82, global::Uint32Pair.Parser);
  private readonly pbc::RepeatedField<global::Uint32Pair> updateSkillList_ = new pbc::RepeatedField<global::Uint32Pair>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Uint32Pair> UpdateSkillList {
    get { return updateSkillList_; }
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 5;
  private global::BrickBreakerSettleNotify.Types.SettleReason reason_ = global::BrickBreakerSettleNotify.Types.SettleReason.TimeOut;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::BrickBreakerSettleNotify.Types.SettleReason Reason {
    get { return reason_; }
    set {
      reason_ = value;
    }
  }

  /// <summary>Field number for the "is_single_mode" field.</summary>
  public const int IsSingleModeFieldNumber = 9;
  private bool isSingleMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsSingleMode {
    get { return isSingleMode_; }
    set {
      isSingleMode_ = value;
    }
  }

  /// <summary>Field number for the "combo" field.</summary>
  public const int ComboFieldNumber = 12;
  private uint combo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Combo {
    get { return combo_; }
    set {
      combo_ = value;
    }
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int TimeFieldNumber = 15;
  private uint time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  /// <summary>Field number for the "is_dungeon" field.</summary>
  public const int IsDungeonFieldNumber = 11;
  private bool isDungeon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsDungeon {
    get { return isDungeon_; }
    set {
      isDungeon_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as BrickBreakerSettleNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(BrickBreakerSettleNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (GalleryId != other.GalleryId) return false;
    if (Score != other.Score) return false;
    if (LevelId != other.LevelId) return false;
    if (IsNewRecord != other.IsNewRecord) return false;
    if(!updateSkillList_.Equals(other.updateSkillList_)) return false;
    if (Reason != other.Reason) return false;
    if (IsSingleMode != other.IsSingleMode) return false;
    if (Combo != other.Combo) return false;
    if (Time != other.Time) return false;
    if (IsDungeon != other.IsDungeon) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (GalleryId != 0) hash ^= GalleryId.GetHashCode();
    if (Score != 0) hash ^= Score.GetHashCode();
    if (LevelId != 0) hash ^= LevelId.GetHashCode();
    if (IsNewRecord != false) hash ^= IsNewRecord.GetHashCode();
    hash ^= updateSkillList_.GetHashCode();
    if (Reason != global::BrickBreakerSettleNotify.Types.SettleReason.TimeOut) hash ^= Reason.GetHashCode();
    if (IsSingleMode != false) hash ^= IsSingleMode.GetHashCode();
    if (Combo != 0) hash ^= Combo.GetHashCode();
    if (Time != 0) hash ^= Time.GetHashCode();
    if (IsDungeon != false) hash ^= IsDungeon.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (LevelId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(LevelId);
    }
    if (Reason != global::BrickBreakerSettleNotify.Types.SettleReason.TimeOut) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Reason);
    }
    if (GalleryId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(GalleryId);
    }
    if (IsSingleMode != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsSingleMode);
    }
    updateSkillList_.WriteTo(output, _repeated_updateSkillList_codec);
    if (IsDungeon != false) {
      output.WriteRawTag(88);
      output.WriteBool(IsDungeon);
    }
    if (Combo != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(Combo);
    }
    if (IsNewRecord != false) {
      output.WriteRawTag(104);
      output.WriteBool(IsNewRecord);
    }
    if (Score != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(Score);
    }
    if (Time != 0) {
      output.WriteRawTag(120);
      output.WriteUInt32(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (LevelId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(LevelId);
    }
    if (Reason != global::BrickBreakerSettleNotify.Types.SettleReason.TimeOut) {
      output.WriteRawTag(40);
      output.WriteEnum((int) Reason);
    }
    if (GalleryId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(GalleryId);
    }
    if (IsSingleMode != false) {
      output.WriteRawTag(72);
      output.WriteBool(IsSingleMode);
    }
    updateSkillList_.WriteTo(ref output, _repeated_updateSkillList_codec);
    if (IsDungeon != false) {
      output.WriteRawTag(88);
      output.WriteBool(IsDungeon);
    }
    if (Combo != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(Combo);
    }
    if (IsNewRecord != false) {
      output.WriteRawTag(104);
      output.WriteBool(IsNewRecord);
    }
    if (Score != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(Score);
    }
    if (Time != 0) {
      output.WriteRawTag(120);
      output.WriteUInt32(Time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (GalleryId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GalleryId);
    }
    if (Score != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Score);
    }
    if (LevelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelId);
    }
    if (IsNewRecord != false) {
      size += 1 + 1;
    }
    size += updateSkillList_.CalculateSize(_repeated_updateSkillList_codec);
    if (Reason != global::BrickBreakerSettleNotify.Types.SettleReason.TimeOut) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
    }
    if (IsSingleMode != false) {
      size += 1 + 1;
    }
    if (Combo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Combo);
    }
    if (Time != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Time);
    }
    if (IsDungeon != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(BrickBreakerSettleNotify other) {
    if (other == null) {
      return;
    }
    if (other.GalleryId != 0) {
      GalleryId = other.GalleryId;
    }
    if (other.Score != 0) {
      Score = other.Score;
    }
    if (other.LevelId != 0) {
      LevelId = other.LevelId;
    }
    if (other.IsNewRecord != false) {
      IsNewRecord = other.IsNewRecord;
    }
    updateSkillList_.Add(other.updateSkillList_);
    if (other.Reason != global::BrickBreakerSettleNotify.Types.SettleReason.TimeOut) {
      Reason = other.Reason;
    }
    if (other.IsSingleMode != false) {
      IsSingleMode = other.IsSingleMode;
    }
    if (other.Combo != 0) {
      Combo = other.Combo;
    }
    if (other.Time != 0) {
      Time = other.Time;
    }
    if (other.IsDungeon != false) {
      IsDungeon = other.IsDungeon;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          LevelId = input.ReadUInt32();
          break;
        }
        case 40: {
          Reason = (global::BrickBreakerSettleNotify.Types.SettleReason) input.ReadEnum();
          break;
        }
        case 48: {
          GalleryId = input.ReadUInt32();
          break;
        }
        case 72: {
          IsSingleMode = input.ReadBool();
          break;
        }
        case 82: {
          updateSkillList_.AddEntriesFrom(input, _repeated_updateSkillList_codec);
          break;
        }
        case 88: {
          IsDungeon = input.ReadBool();
          break;
        }
        case 96: {
          Combo = input.ReadUInt32();
          break;
        }
        case 104: {
          IsNewRecord = input.ReadBool();
          break;
        }
        case 112: {
          Score = input.ReadUInt32();
          break;
        }
        case 120: {
          Time = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          LevelId = input.ReadUInt32();
          break;
        }
        case 40: {
          Reason = (global::BrickBreakerSettleNotify.Types.SettleReason) input.ReadEnum();
          break;
        }
        case 48: {
          GalleryId = input.ReadUInt32();
          break;
        }
        case 72: {
          IsSingleMode = input.ReadBool();
          break;
        }
        case 82: {
          updateSkillList_.AddEntriesFrom(ref input, _repeated_updateSkillList_codec);
          break;
        }
        case 88: {
          IsDungeon = input.ReadBool();
          break;
        }
        case 96: {
          Combo = input.ReadUInt32();
          break;
        }
        case 104: {
          IsNewRecord = input.ReadBool();
          break;
        }
        case 112: {
          Score = input.ReadUInt32();
          break;
        }
        case 120: {
          Time = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the BrickBreakerSettleNotify message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum SettleReason {
      [pbr::OriginalName("SETTLE_REASON_TIME_OUT")] TimeOut = 0,
      [pbr::OriginalName("SETTLE_PLAY_END")] SettlePlayEnd = 1,
      [pbr::OriginalName("SETTLE_PLAYER_QUIT")] SettlePlayerQuit = 2,
      [pbr::OriginalName("SETTLE_LIFE_COUNT")] SettleLifeCount = 3,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
