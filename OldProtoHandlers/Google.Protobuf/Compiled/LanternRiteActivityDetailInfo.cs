// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LanternRiteActivityDetailInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from LanternRiteActivityDetailInfo.proto</summary>
public static partial class LanternRiteActivityDetailInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for LanternRiteActivityDetailInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LanternRiteActivityDetailInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiNMYW50ZXJuUml0ZUFjdGl2aXR5RGV0YWlsSW5mby5wcm90bxobTGFudGVy",
          "blByb2plY3Rpb25JbmZvLnByb3RvGh5MYW50ZXJuUml0ZUZpcmV3b3Jrc0lu",
          "Zm8ucHJvdG8aFlNhbHZhZ2VTdGFnZUluZm8ucHJvdG8ijwIKHUxhbnRlcm5S",
          "aXRlQWN0aXZpdHlEZXRhaWxJbmZvEi8KD3Byb2plY3Rpb25faW5mbxgNIAEo",
          "CzIWLkxhbnRlcm5Qcm9qZWN0aW9uSW5mbxIqCg9zdGFnZV9pbmZvX2xpc3QY",
          "BSADKAsyES5TYWx2YWdlU3RhZ2VJbmZvEjEKDmZpcmV3b3Jrc19pbmZvGAgg",
          "ASgLMhkuTGFudGVyblJpdGVGaXJld29ya3NJbmZvEiUKHWlzX21pbmlfZWxk",
          "cml0Y2hfZHVuZ2Vvbl9vcGVuGAIgASgIEhkKEWlzX2NvbnRlbnRfY2xvc2Vk",
          "GA4gASgIEhwKFGlzX3Rha2VuX3NraW5fcmV3YXJkGAYgASgIQh4KHGVtdS5n",
          "cmFzc2N1dHRlci5uZXQub2xkcHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::LanternProjectionInfoReflection.Descriptor, global::LanternRiteFireworksInfoReflection.Descriptor, global::SalvageStageInfoReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LanternRiteActivityDetailInfo), global::LanternRiteActivityDetailInfo.Parser, new[]{ "ProjectionInfo", "StageInfoList", "FireworksInfo", "IsMiniEldritchDungeonOpen", "IsContentClosed", "IsTakenSkinReward" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class LanternRiteActivityDetailInfo : pb::IMessage<LanternRiteActivityDetailInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LanternRiteActivityDetailInfo> _parser = new pb::MessageParser<LanternRiteActivityDetailInfo>(() => new LanternRiteActivityDetailInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<LanternRiteActivityDetailInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LanternRiteActivityDetailInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LanternRiteActivityDetailInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LanternRiteActivityDetailInfo(LanternRiteActivityDetailInfo other) : this() {
    projectionInfo_ = other.projectionInfo_ != null ? other.projectionInfo_.Clone() : null;
    stageInfoList_ = other.stageInfoList_.Clone();
    fireworksInfo_ = other.fireworksInfo_ != null ? other.fireworksInfo_.Clone() : null;
    isMiniEldritchDungeonOpen_ = other.isMiniEldritchDungeonOpen_;
    isContentClosed_ = other.isContentClosed_;
    isTakenSkinReward_ = other.isTakenSkinReward_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LanternRiteActivityDetailInfo Clone() {
    return new LanternRiteActivityDetailInfo(this);
  }

  /// <summary>Field number for the "projection_info" field.</summary>
  public const int ProjectionInfoFieldNumber = 13;
  private global::LanternProjectionInfo projectionInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::LanternProjectionInfo ProjectionInfo {
    get { return projectionInfo_; }
    set {
      projectionInfo_ = value;
    }
  }

  /// <summary>Field number for the "stage_info_list" field.</summary>
  public const int StageInfoListFieldNumber = 5;
  private static readonly pb::FieldCodec<global::SalvageStageInfo> _repeated_stageInfoList_codec
      = pb::FieldCodec.ForMessage(42, global::SalvageStageInfo.Parser);
  private readonly pbc::RepeatedField<global::SalvageStageInfo> stageInfoList_ = new pbc::RepeatedField<global::SalvageStageInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::SalvageStageInfo> StageInfoList {
    get { return stageInfoList_; }
  }

  /// <summary>Field number for the "fireworks_info" field.</summary>
  public const int FireworksInfoFieldNumber = 8;
  private global::LanternRiteFireworksInfo fireworksInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::LanternRiteFireworksInfo FireworksInfo {
    get { return fireworksInfo_; }
    set {
      fireworksInfo_ = value;
    }
  }

  /// <summary>Field number for the "is_mini_eldritch_dungeon_open" field.</summary>
  public const int IsMiniEldritchDungeonOpenFieldNumber = 2;
  private bool isMiniEldritchDungeonOpen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsMiniEldritchDungeonOpen {
    get { return isMiniEldritchDungeonOpen_; }
    set {
      isMiniEldritchDungeonOpen_ = value;
    }
  }

  /// <summary>Field number for the "is_content_closed" field.</summary>
  public const int IsContentClosedFieldNumber = 14;
  private bool isContentClosed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsContentClosed {
    get { return isContentClosed_; }
    set {
      isContentClosed_ = value;
    }
  }

  /// <summary>Field number for the "is_taken_skin_reward" field.</summary>
  public const int IsTakenSkinRewardFieldNumber = 6;
  private bool isTakenSkinReward_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsTakenSkinReward {
    get { return isTakenSkinReward_; }
    set {
      isTakenSkinReward_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as LanternRiteActivityDetailInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(LanternRiteActivityDetailInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(ProjectionInfo, other.ProjectionInfo)) return false;
    if(!stageInfoList_.Equals(other.stageInfoList_)) return false;
    if (!object.Equals(FireworksInfo, other.FireworksInfo)) return false;
    if (IsMiniEldritchDungeonOpen != other.IsMiniEldritchDungeonOpen) return false;
    if (IsContentClosed != other.IsContentClosed) return false;
    if (IsTakenSkinReward != other.IsTakenSkinReward) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (projectionInfo_ != null) hash ^= ProjectionInfo.GetHashCode();
    hash ^= stageInfoList_.GetHashCode();
    if (fireworksInfo_ != null) hash ^= FireworksInfo.GetHashCode();
    if (IsMiniEldritchDungeonOpen != false) hash ^= IsMiniEldritchDungeonOpen.GetHashCode();
    if (IsContentClosed != false) hash ^= IsContentClosed.GetHashCode();
    if (IsTakenSkinReward != false) hash ^= IsTakenSkinReward.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (IsMiniEldritchDungeonOpen != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsMiniEldritchDungeonOpen);
    }
    stageInfoList_.WriteTo(output, _repeated_stageInfoList_codec);
    if (IsTakenSkinReward != false) {
      output.WriteRawTag(48);
      output.WriteBool(IsTakenSkinReward);
    }
    if (fireworksInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(FireworksInfo);
    }
    if (projectionInfo_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(ProjectionInfo);
    }
    if (IsContentClosed != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsContentClosed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (IsMiniEldritchDungeonOpen != false) {
      output.WriteRawTag(16);
      output.WriteBool(IsMiniEldritchDungeonOpen);
    }
    stageInfoList_.WriteTo(ref output, _repeated_stageInfoList_codec);
    if (IsTakenSkinReward != false) {
      output.WriteRawTag(48);
      output.WriteBool(IsTakenSkinReward);
    }
    if (fireworksInfo_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(FireworksInfo);
    }
    if (projectionInfo_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(ProjectionInfo);
    }
    if (IsContentClosed != false) {
      output.WriteRawTag(112);
      output.WriteBool(IsContentClosed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (projectionInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProjectionInfo);
    }
    size += stageInfoList_.CalculateSize(_repeated_stageInfoList_codec);
    if (fireworksInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(FireworksInfo);
    }
    if (IsMiniEldritchDungeonOpen != false) {
      size += 1 + 1;
    }
    if (IsContentClosed != false) {
      size += 1 + 1;
    }
    if (IsTakenSkinReward != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(LanternRiteActivityDetailInfo other) {
    if (other == null) {
      return;
    }
    if (other.projectionInfo_ != null) {
      if (projectionInfo_ == null) {
        ProjectionInfo = new global::LanternProjectionInfo();
      }
      ProjectionInfo.MergeFrom(other.ProjectionInfo);
    }
    stageInfoList_.Add(other.stageInfoList_);
    if (other.fireworksInfo_ != null) {
      if (fireworksInfo_ == null) {
        FireworksInfo = new global::LanternRiteFireworksInfo();
      }
      FireworksInfo.MergeFrom(other.FireworksInfo);
    }
    if (other.IsMiniEldritchDungeonOpen != false) {
      IsMiniEldritchDungeonOpen = other.IsMiniEldritchDungeonOpen;
    }
    if (other.IsContentClosed != false) {
      IsContentClosed = other.IsContentClosed;
    }
    if (other.IsTakenSkinReward != false) {
      IsTakenSkinReward = other.IsTakenSkinReward;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          IsMiniEldritchDungeonOpen = input.ReadBool();
          break;
        }
        case 42: {
          stageInfoList_.AddEntriesFrom(input, _repeated_stageInfoList_codec);
          break;
        }
        case 48: {
          IsTakenSkinReward = input.ReadBool();
          break;
        }
        case 66: {
          if (fireworksInfo_ == null) {
            FireworksInfo = new global::LanternRiteFireworksInfo();
          }
          input.ReadMessage(FireworksInfo);
          break;
        }
        case 106: {
          if (projectionInfo_ == null) {
            ProjectionInfo = new global::LanternProjectionInfo();
          }
          input.ReadMessage(ProjectionInfo);
          break;
        }
        case 112: {
          IsContentClosed = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          IsMiniEldritchDungeonOpen = input.ReadBool();
          break;
        }
        case 42: {
          stageInfoList_.AddEntriesFrom(ref input, _repeated_stageInfoList_codec);
          break;
        }
        case 48: {
          IsTakenSkinReward = input.ReadBool();
          break;
        }
        case 66: {
          if (fireworksInfo_ == null) {
            FireworksInfo = new global::LanternRiteFireworksInfo();
          }
          input.ReadMessage(FireworksInfo);
          break;
        }
        case 106: {
          if (projectionInfo_ == null) {
            ProjectionInfo = new global::LanternProjectionInfo();
          }
          input.ReadMessage(ProjectionInfo);
          break;
        }
        case 112: {
          IsContentClosed = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
