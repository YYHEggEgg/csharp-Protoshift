// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BattlePassSchedule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OldProtos {

  /// <summary>Holder for reflection information generated from BattlePassSchedule.proto</summary>
  public static partial class BattlePassScheduleReflection {

    #region Descriptor
    /// <summary>File descriptor for BattlePassSchedule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattlePassScheduleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhCYXR0bGVQYXNzU2NoZWR1bGUucHJvdG8aFUJhdHRsZVBhc3NDeWNsZS5w",
            "cm90bxoXQmF0dGxlUGFzc1Byb2R1Y3QucHJvdG8aGUJhdHRsZVBhc3NSZXdh",
            "cmRUYWcucHJvdG8aHEJhdHRsZVBhc3NVbmxvY2tTdGF0dXMucHJvdG8iiwMK",
            "EkJhdHRsZVBhc3NTY2hlZHVsZRINCgVsZXZlbBgOIAEoDRISCgpiZWdpbl90",
            "aW1lGAIgASgNEhAKCGVuZF90aW1lGA8gASgNEg0KBXBvaW50GAEgASgNEiMK",
            "CWN1cl9jeWNsZRgEIAEoCzIQLkJhdHRsZVBhc3NDeWNsZRIuCg11bmxvY2tf",
            "c3RhdHVzGAcgASgOMhcuQmF0dGxlUGFzc1VubG9ja1N0YXR1cxIvChFyZXdh",
            "cmRfdGFrZW5fbGlzdBgLIAMoCzIULkJhdHRsZVBhc3NSZXdhcmRUYWcSGAoQ",
            "Y3VyX2N5Y2xlX3BvaW50cxgKIAEoDRIbChNwYWlkX3BsYXRmb3JtX2ZsYWdz",
            "GAwgASgNEigKDHByb2R1Y3RfaW5mbxgNIAEoCzISLkJhdHRsZVBhc3NQcm9k",
            "dWN0EiIKGmlzX2V4dHJhX3BhaWRfcmV3YXJkX3Rha2VuGAYgASgIEhEKCWlz",
            "X3ZpZXdlZBgDIAEoCBITCgtzY2hlZHVsZV9pZBgJIAEoDUIMqgIJT2xkUHJv",
            "dG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OldProtos.BattlePassCycleReflection.Descriptor, global::OldProtos.BattlePassProductReflection.Descriptor, global::OldProtos.BattlePassRewardTagReflection.Descriptor, global::OldProtos.BattlePassUnlockStatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OldProtos.BattlePassSchedule), global::OldProtos.BattlePassSchedule.Parser, new[]{ "Level", "BeginTime", "EndTime", "Point", "CurCycle", "UnlockStatus", "RewardTakenList", "CurCyclePoints", "PaidPlatformFlags", "ProductInfo", "IsExtraPaidRewardTaken", "IsViewed", "ScheduleId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BattlePassSchedule : pb::IMessage<BattlePassSchedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattlePassSchedule> _parser = new pb::MessageParser<BattlePassSchedule>(() => new BattlePassSchedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BattlePassSchedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OldProtos.BattlePassScheduleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassSchedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassSchedule(BattlePassSchedule other) : this() {
      level_ = other.level_;
      beginTime_ = other.beginTime_;
      endTime_ = other.endTime_;
      point_ = other.point_;
      curCycle_ = other.curCycle_ != null ? other.curCycle_.Clone() : null;
      unlockStatus_ = other.unlockStatus_;
      rewardTakenList_ = other.rewardTakenList_.Clone();
      curCyclePoints_ = other.curCyclePoints_;
      paidPlatformFlags_ = other.paidPlatformFlags_;
      productInfo_ = other.productInfo_ != null ? other.productInfo_.Clone() : null;
      isExtraPaidRewardTaken_ = other.isExtraPaidRewardTaken_;
      isViewed_ = other.isViewed_;
      scheduleId_ = other.scheduleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BattlePassSchedule Clone() {
      return new BattlePassSchedule(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 14;
    private uint level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "begin_time" field.</summary>
    public const int BeginTimeFieldNumber = 2;
    private uint beginTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BeginTime {
      get { return beginTime_; }
      set {
        beginTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 15;
    private uint endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 1;
    private uint point_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Point {
      get { return point_; }
      set {
        point_ = value;
      }
    }

    /// <summary>Field number for the "cur_cycle" field.</summary>
    public const int CurCycleFieldNumber = 4;
    private global::OldProtos.BattlePassCycle curCycle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OldProtos.BattlePassCycle CurCycle {
      get { return curCycle_; }
      set {
        curCycle_ = value;
      }
    }

    /// <summary>Field number for the "unlock_status" field.</summary>
    public const int UnlockStatusFieldNumber = 7;
    private global::OldProtos.BattlePassUnlockStatus unlockStatus_ = global::OldProtos.BattlePassUnlockStatus.Invalid;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OldProtos.BattlePassUnlockStatus UnlockStatus {
      get { return unlockStatus_; }
      set {
        unlockStatus_ = value;
      }
    }

    /// <summary>Field number for the "reward_taken_list" field.</summary>
    public const int RewardTakenListFieldNumber = 11;
    private static readonly pb::FieldCodec<global::OldProtos.BattlePassRewardTag> _repeated_rewardTakenList_codec
        = pb::FieldCodec.ForMessage(90, global::OldProtos.BattlePassRewardTag.Parser);
    private readonly pbc::RepeatedField<global::OldProtos.BattlePassRewardTag> rewardTakenList_ = new pbc::RepeatedField<global::OldProtos.BattlePassRewardTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OldProtos.BattlePassRewardTag> RewardTakenList {
      get { return rewardTakenList_; }
    }

    /// <summary>Field number for the "cur_cycle_points" field.</summary>
    public const int CurCyclePointsFieldNumber = 10;
    private uint curCyclePoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CurCyclePoints {
      get { return curCyclePoints_; }
      set {
        curCyclePoints_ = value;
      }
    }

    /// <summary>Field number for the "paid_platform_flags" field.</summary>
    public const int PaidPlatformFlagsFieldNumber = 12;
    private uint paidPlatformFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PaidPlatformFlags {
      get { return paidPlatformFlags_; }
      set {
        paidPlatformFlags_ = value;
      }
    }

    /// <summary>Field number for the "product_info" field.</summary>
    public const int ProductInfoFieldNumber = 13;
    private global::OldProtos.BattlePassProduct productInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OldProtos.BattlePassProduct ProductInfo {
      get { return productInfo_; }
      set {
        productInfo_ = value;
      }
    }

    /// <summary>Field number for the "is_extra_paid_reward_taken" field.</summary>
    public const int IsExtraPaidRewardTakenFieldNumber = 6;
    private bool isExtraPaidRewardTaken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsExtraPaidRewardTaken {
      get { return isExtraPaidRewardTaken_; }
      set {
        isExtraPaidRewardTaken_ = value;
      }
    }

    /// <summary>Field number for the "is_viewed" field.</summary>
    public const int IsViewedFieldNumber = 3;
    private bool isViewed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsViewed {
      get { return isViewed_; }
      set {
        isViewed_ = value;
      }
    }

    /// <summary>Field number for the "schedule_id" field.</summary>
    public const int ScheduleIdFieldNumber = 9;
    private uint scheduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BattlePassSchedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BattlePassSchedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (BeginTime != other.BeginTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Point != other.Point) return false;
      if (!object.Equals(CurCycle, other.CurCycle)) return false;
      if (UnlockStatus != other.UnlockStatus) return false;
      if(!rewardTakenList_.Equals(other.rewardTakenList_)) return false;
      if (CurCyclePoints != other.CurCyclePoints) return false;
      if (PaidPlatformFlags != other.PaidPlatformFlags) return false;
      if (!object.Equals(ProductInfo, other.ProductInfo)) return false;
      if (IsExtraPaidRewardTaken != other.IsExtraPaidRewardTaken) return false;
      if (IsViewed != other.IsViewed) return false;
      if (ScheduleId != other.ScheduleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (BeginTime != 0) hash ^= BeginTime.GetHashCode();
      if (EndTime != 0) hash ^= EndTime.GetHashCode();
      if (Point != 0) hash ^= Point.GetHashCode();
      if (curCycle_ != null) hash ^= CurCycle.GetHashCode();
      if (UnlockStatus != global::OldProtos.BattlePassUnlockStatus.Invalid) hash ^= UnlockStatus.GetHashCode();
      hash ^= rewardTakenList_.GetHashCode();
      if (CurCyclePoints != 0) hash ^= CurCyclePoints.GetHashCode();
      if (PaidPlatformFlags != 0) hash ^= PaidPlatformFlags.GetHashCode();
      if (productInfo_ != null) hash ^= ProductInfo.GetHashCode();
      if (IsExtraPaidRewardTaken != false) hash ^= IsExtraPaidRewardTaken.GetHashCode();
      if (IsViewed != false) hash ^= IsViewed.GetHashCode();
      if (ScheduleId != 0) hash ^= ScheduleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Point != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Point);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BeginTime);
      }
      if (IsViewed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsViewed);
      }
      if (curCycle_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CurCycle);
      }
      if (IsExtraPaidRewardTaken != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsExtraPaidRewardTaken);
      }
      if (UnlockStatus != global::OldProtos.BattlePassUnlockStatus.Invalid) {
        output.WriteRawTag(56);
        output.WriteEnum((int) UnlockStatus);
      }
      if (ScheduleId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ScheduleId);
      }
      if (CurCyclePoints != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(CurCyclePoints);
      }
      rewardTakenList_.WriteTo(output, _repeated_rewardTakenList_codec);
      if (PaidPlatformFlags != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PaidPlatformFlags);
      }
      if (productInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ProductInfo);
      }
      if (Level != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Level);
      }
      if (EndTime != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Point != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Point);
      }
      if (BeginTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BeginTime);
      }
      if (IsViewed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsViewed);
      }
      if (curCycle_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CurCycle);
      }
      if (IsExtraPaidRewardTaken != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsExtraPaidRewardTaken);
      }
      if (UnlockStatus != global::OldProtos.BattlePassUnlockStatus.Invalid) {
        output.WriteRawTag(56);
        output.WriteEnum((int) UnlockStatus);
      }
      if (ScheduleId != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ScheduleId);
      }
      if (CurCyclePoints != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(CurCyclePoints);
      }
      rewardTakenList_.WriteTo(ref output, _repeated_rewardTakenList_codec);
      if (PaidPlatformFlags != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(PaidPlatformFlags);
      }
      if (productInfo_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ProductInfo);
      }
      if (Level != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(Level);
      }
      if (EndTime != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Level);
      }
      if (BeginTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BeginTime);
      }
      if (EndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndTime);
      }
      if (Point != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Point);
      }
      if (curCycle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurCycle);
      }
      if (UnlockStatus != global::OldProtos.BattlePassUnlockStatus.Invalid) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UnlockStatus);
      }
      size += rewardTakenList_.CalculateSize(_repeated_rewardTakenList_codec);
      if (CurCyclePoints != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurCyclePoints);
      }
      if (PaidPlatformFlags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PaidPlatformFlags);
      }
      if (productInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProductInfo);
      }
      if (IsExtraPaidRewardTaken != false) {
        size += 1 + 1;
      }
      if (IsViewed != false) {
        size += 1 + 1;
      }
      if (ScheduleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ScheduleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BattlePassSchedule other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.BeginTime != 0) {
        BeginTime = other.BeginTime;
      }
      if (other.EndTime != 0) {
        EndTime = other.EndTime;
      }
      if (other.Point != 0) {
        Point = other.Point;
      }
      if (other.curCycle_ != null) {
        if (curCycle_ == null) {
          CurCycle = new global::OldProtos.BattlePassCycle();
        }
        CurCycle.MergeFrom(other.CurCycle);
      }
      if (other.UnlockStatus != global::OldProtos.BattlePassUnlockStatus.Invalid) {
        UnlockStatus = other.UnlockStatus;
      }
      rewardTakenList_.Add(other.rewardTakenList_);
      if (other.CurCyclePoints != 0) {
        CurCyclePoints = other.CurCyclePoints;
      }
      if (other.PaidPlatformFlags != 0) {
        PaidPlatformFlags = other.PaidPlatformFlags;
      }
      if (other.productInfo_ != null) {
        if (productInfo_ == null) {
          ProductInfo = new global::OldProtos.BattlePassProduct();
        }
        ProductInfo.MergeFrom(other.ProductInfo);
      }
      if (other.IsExtraPaidRewardTaken != false) {
        IsExtraPaidRewardTaken = other.IsExtraPaidRewardTaken;
      }
      if (other.IsViewed != false) {
        IsViewed = other.IsViewed;
      }
      if (other.ScheduleId != 0) {
        ScheduleId = other.ScheduleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Point = input.ReadUInt32();
            break;
          }
          case 16: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 24: {
            IsViewed = input.ReadBool();
            break;
          }
          case 34: {
            if (curCycle_ == null) {
              CurCycle = new global::OldProtos.BattlePassCycle();
            }
            input.ReadMessage(CurCycle);
            break;
          }
          case 48: {
            IsExtraPaidRewardTaken = input.ReadBool();
            break;
          }
          case 56: {
            UnlockStatus = (global::OldProtos.BattlePassUnlockStatus) input.ReadEnum();
            break;
          }
          case 72: {
            ScheduleId = input.ReadUInt32();
            break;
          }
          case 80: {
            CurCyclePoints = input.ReadUInt32();
            break;
          }
          case 90: {
            rewardTakenList_.AddEntriesFrom(input, _repeated_rewardTakenList_codec);
            break;
          }
          case 96: {
            PaidPlatformFlags = input.ReadUInt32();
            break;
          }
          case 106: {
            if (productInfo_ == null) {
              ProductInfo = new global::OldProtos.BattlePassProduct();
            }
            input.ReadMessage(ProductInfo);
            break;
          }
          case 112: {
            Level = input.ReadUInt32();
            break;
          }
          case 120: {
            EndTime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Point = input.ReadUInt32();
            break;
          }
          case 16: {
            BeginTime = input.ReadUInt32();
            break;
          }
          case 24: {
            IsViewed = input.ReadBool();
            break;
          }
          case 34: {
            if (curCycle_ == null) {
              CurCycle = new global::OldProtos.BattlePassCycle();
            }
            input.ReadMessage(CurCycle);
            break;
          }
          case 48: {
            IsExtraPaidRewardTaken = input.ReadBool();
            break;
          }
          case 56: {
            UnlockStatus = (global::OldProtos.BattlePassUnlockStatus) input.ReadEnum();
            break;
          }
          case 72: {
            ScheduleId = input.ReadUInt32();
            break;
          }
          case 80: {
            CurCyclePoints = input.ReadUInt32();
            break;
          }
          case 90: {
            rewardTakenList_.AddEntriesFrom(ref input, _repeated_rewardTakenList_codec);
            break;
          }
          case 96: {
            PaidPlatformFlags = input.ReadUInt32();
            break;
          }
          case 106: {
            if (productInfo_ == null) {
              ProductInfo = new global::OldProtos.BattlePassProduct();
            }
            input.ReadMessage(ProductInfo);
            break;
          }
          case 112: {
            Level = input.ReadUInt32();
            break;
          }
          case 120: {
            EndTime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
