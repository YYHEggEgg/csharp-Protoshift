// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PotionEnterDungeonNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PotionEnterDungeonNotify.proto</summary>
public static partial class PotionEnterDungeonNotifyReflection {

  #region Descriptor
  /// <summary>File descriptor for PotionEnterDungeonNotify.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PotionEnterDungeonNotifyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch5Qb3Rpb25FbnRlckR1bmdlb25Ob3RpZnkucHJvdG8aGVBvdGlvbkR1bmdl",
          "b25BdmF0YXIucHJvdG8inAEKGFBvdGlvbkVudGVyRHVuZ2Vvbk5vdGlmeRIQ",
          "CghzdGFnZV9pZBgNIAEoDRIYChBkaWZmaWN1bHR5X2xldmVsGAcgASgNEjEK",
          "E2R1bmdlb25fYXZhdGFyX2xpc3QYBiADKAsyFC5Qb3Rpb25EdW5nZW9uQXZh",
          "dGFyEhAKCGxldmVsX2lkGAggASgNEg8KB21vZGVfaWQYBSABKA1CHgocZW11",
          "LmdyYXNzY3V0dGVyLm5ldC5vbGRwcm90b2IGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::PotionDungeonAvatarReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PotionEnterDungeonNotify), global::PotionEnterDungeonNotify.Parser, new[]{ "StageId", "DifficultyLevel", "DungeonAvatarList", "LevelId", "ModeId" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// CmdId: 8531
/// EnetChannelId: 0
/// EnetIsReliable: true
/// </summary>
public sealed partial class PotionEnterDungeonNotify : pb::IMessage<PotionEnterDungeonNotify>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PotionEnterDungeonNotify> _parser = new pb::MessageParser<PotionEnterDungeonNotify>(() => new PotionEnterDungeonNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PotionEnterDungeonNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PotionEnterDungeonNotifyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PotionEnterDungeonNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PotionEnterDungeonNotify(PotionEnterDungeonNotify other) : this() {
    stageId_ = other.stageId_;
    difficultyLevel_ = other.difficultyLevel_;
    dungeonAvatarList_ = other.dungeonAvatarList_.Clone();
    levelId_ = other.levelId_;
    modeId_ = other.modeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PotionEnterDungeonNotify Clone() {
    return new PotionEnterDungeonNotify(this);
  }

  /// <summary>Field number for the "stage_id" field.</summary>
  public const int StageIdFieldNumber = 13;
  private uint stageId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint StageId {
    get { return stageId_; }
    set {
      stageId_ = value;
    }
  }

  /// <summary>Field number for the "difficulty_level" field.</summary>
  public const int DifficultyLevelFieldNumber = 7;
  private uint difficultyLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DifficultyLevel {
    get { return difficultyLevel_; }
    set {
      difficultyLevel_ = value;
    }
  }

  /// <summary>Field number for the "dungeon_avatar_list" field.</summary>
  public const int DungeonAvatarListFieldNumber = 6;
  private static readonly pb::FieldCodec<global::PotionDungeonAvatar> _repeated_dungeonAvatarList_codec
      = pb::FieldCodec.ForMessage(50, global::PotionDungeonAvatar.Parser);
  private readonly pbc::RepeatedField<global::PotionDungeonAvatar> dungeonAvatarList_ = new pbc::RepeatedField<global::PotionDungeonAvatar>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::PotionDungeonAvatar> DungeonAvatarList {
    get { return dungeonAvatarList_; }
  }

  /// <summary>Field number for the "level_id" field.</summary>
  public const int LevelIdFieldNumber = 8;
  private uint levelId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LevelId {
    get { return levelId_; }
    set {
      levelId_ = value;
    }
  }

  /// <summary>Field number for the "mode_id" field.</summary>
  public const int ModeIdFieldNumber = 5;
  private uint modeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ModeId {
    get { return modeId_; }
    set {
      modeId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PotionEnterDungeonNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PotionEnterDungeonNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (StageId != other.StageId) return false;
    if (DifficultyLevel != other.DifficultyLevel) return false;
    if(!dungeonAvatarList_.Equals(other.dungeonAvatarList_)) return false;
    if (LevelId != other.LevelId) return false;
    if (ModeId != other.ModeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (StageId != 0) hash ^= StageId.GetHashCode();
    if (DifficultyLevel != 0) hash ^= DifficultyLevel.GetHashCode();
    hash ^= dungeonAvatarList_.GetHashCode();
    if (LevelId != 0) hash ^= LevelId.GetHashCode();
    if (ModeId != 0) hash ^= ModeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ModeId != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(ModeId);
    }
    dungeonAvatarList_.WriteTo(output, _repeated_dungeonAvatarList_codec);
    if (DifficultyLevel != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(DifficultyLevel);
    }
    if (LevelId != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(LevelId);
    }
    if (StageId != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(StageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ModeId != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(ModeId);
    }
    dungeonAvatarList_.WriteTo(ref output, _repeated_dungeonAvatarList_codec);
    if (DifficultyLevel != 0) {
      output.WriteRawTag(56);
      output.WriteUInt32(DifficultyLevel);
    }
    if (LevelId != 0) {
      output.WriteRawTag(64);
      output.WriteUInt32(LevelId);
    }
    if (StageId != 0) {
      output.WriteRawTag(104);
      output.WriteUInt32(StageId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (StageId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StageId);
    }
    if (DifficultyLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DifficultyLevel);
    }
    size += dungeonAvatarList_.CalculateSize(_repeated_dungeonAvatarList_codec);
    if (LevelId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LevelId);
    }
    if (ModeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PotionEnterDungeonNotify other) {
    if (other == null) {
      return;
    }
    if (other.StageId != 0) {
      StageId = other.StageId;
    }
    if (other.DifficultyLevel != 0) {
      DifficultyLevel = other.DifficultyLevel;
    }
    dungeonAvatarList_.Add(other.dungeonAvatarList_);
    if (other.LevelId != 0) {
      LevelId = other.LevelId;
    }
    if (other.ModeId != 0) {
      ModeId = other.ModeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 40: {
          ModeId = input.ReadUInt32();
          break;
        }
        case 50: {
          dungeonAvatarList_.AddEntriesFrom(input, _repeated_dungeonAvatarList_codec);
          break;
        }
        case 56: {
          DifficultyLevel = input.ReadUInt32();
          break;
        }
        case 64: {
          LevelId = input.ReadUInt32();
          break;
        }
        case 104: {
          StageId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 40: {
          ModeId = input.ReadUInt32();
          break;
        }
        case 50: {
          dungeonAvatarList_.AddEntriesFrom(ref input, _repeated_dungeonAvatarList_codec);
          break;
        }
        case 56: {
          DifficultyLevel = input.ReadUInt32();
          break;
        }
        case 64: {
          LevelId = input.ReadUInt32();
          break;
        }
        case 104: {
          StageId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
