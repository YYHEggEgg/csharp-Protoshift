// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SummerTimeDungeonInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OldProtos {

  /// <summary>Holder for reflection information generated from SummerTimeDungeonInfo.proto</summary>
  public static partial class SummerTimeDungeonInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for SummerTimeDungeonInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SummerTimeDungeonInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtTdW1tZXJUaW1lRHVuZ2VvbkluZm8ucHJvdG8ilwEKFVN1bW1lclRpbWVE",
            "dW5nZW9uSW5mbxIZChF0YWtlbl9jaGVzdF9jb3VudBgPIAEoDRIZChF0b3Rh",
            "bF9jaGVzdF9jb3VudBgMIAEoDRIZChF0YWtlbl9zaGVsbF9jb3VudBgOIAEo",
            "DRISCgpkdW5nZW9uX2lkGAQgASgNEhkKEXRvdGFsX3NoZWxsX2NvdW50GA0g",
            "ASgNQgyqAglPbGRQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OldProtos.SummerTimeDungeonInfo), global::OldProtos.SummerTimeDungeonInfo.Parser, new[]{ "TakenChestCount", "TotalChestCount", "TakenShellCount", "DungeonId", "TotalShellCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SummerTimeDungeonInfo : pb::IMessage<SummerTimeDungeonInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SummerTimeDungeonInfo> _parser = new pb::MessageParser<SummerTimeDungeonInfo>(() => new SummerTimeDungeonInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SummerTimeDungeonInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OldProtos.SummerTimeDungeonInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SummerTimeDungeonInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SummerTimeDungeonInfo(SummerTimeDungeonInfo other) : this() {
      takenChestCount_ = other.takenChestCount_;
      totalChestCount_ = other.totalChestCount_;
      takenShellCount_ = other.takenShellCount_;
      dungeonId_ = other.dungeonId_;
      totalShellCount_ = other.totalShellCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SummerTimeDungeonInfo Clone() {
      return new SummerTimeDungeonInfo(this);
    }

    /// <summary>Field number for the "taken_chest_count" field.</summary>
    public const int TakenChestCountFieldNumber = 15;
    private uint takenChestCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TakenChestCount {
      get { return takenChestCount_; }
      set {
        takenChestCount_ = value;
      }
    }

    /// <summary>Field number for the "total_chest_count" field.</summary>
    public const int TotalChestCountFieldNumber = 12;
    private uint totalChestCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalChestCount {
      get { return totalChestCount_; }
      set {
        totalChestCount_ = value;
      }
    }

    /// <summary>Field number for the "taken_shell_count" field.</summary>
    public const int TakenShellCountFieldNumber = 14;
    private uint takenShellCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TakenShellCount {
      get { return takenShellCount_; }
      set {
        takenShellCount_ = value;
      }
    }

    /// <summary>Field number for the "dungeon_id" field.</summary>
    public const int DungeonIdFieldNumber = 4;
    private uint dungeonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DungeonId {
      get { return dungeonId_; }
      set {
        dungeonId_ = value;
      }
    }

    /// <summary>Field number for the "total_shell_count" field.</summary>
    public const int TotalShellCountFieldNumber = 13;
    private uint totalShellCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalShellCount {
      get { return totalShellCount_; }
      set {
        totalShellCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SummerTimeDungeonInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SummerTimeDungeonInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TakenChestCount != other.TakenChestCount) return false;
      if (TotalChestCount != other.TotalChestCount) return false;
      if (TakenShellCount != other.TakenShellCount) return false;
      if (DungeonId != other.DungeonId) return false;
      if (TotalShellCount != other.TotalShellCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TakenChestCount != 0) hash ^= TakenChestCount.GetHashCode();
      if (TotalChestCount != 0) hash ^= TotalChestCount.GetHashCode();
      if (TakenShellCount != 0) hash ^= TakenShellCount.GetHashCode();
      if (DungeonId != 0) hash ^= DungeonId.GetHashCode();
      if (TotalShellCount != 0) hash ^= TotalShellCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DungeonId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DungeonId);
      }
      if (TotalChestCount != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(TotalChestCount);
      }
      if (TotalShellCount != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(TotalShellCount);
      }
      if (TakenShellCount != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(TakenShellCount);
      }
      if (TakenChestCount != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TakenChestCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DungeonId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(DungeonId);
      }
      if (TotalChestCount != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(TotalChestCount);
      }
      if (TotalShellCount != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(TotalShellCount);
      }
      if (TakenShellCount != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(TakenShellCount);
      }
      if (TakenChestCount != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(TakenChestCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TakenChestCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TakenChestCount);
      }
      if (TotalChestCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalChestCount);
      }
      if (TakenShellCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TakenShellCount);
      }
      if (DungeonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DungeonId);
      }
      if (TotalShellCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalShellCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SummerTimeDungeonInfo other) {
      if (other == null) {
        return;
      }
      if (other.TakenChestCount != 0) {
        TakenChestCount = other.TakenChestCount;
      }
      if (other.TotalChestCount != 0) {
        TotalChestCount = other.TotalChestCount;
      }
      if (other.TakenShellCount != 0) {
        TakenShellCount = other.TakenShellCount;
      }
      if (other.DungeonId != 0) {
        DungeonId = other.DungeonId;
      }
      if (other.TotalShellCount != 0) {
        TotalShellCount = other.TotalShellCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 96: {
            TotalChestCount = input.ReadUInt32();
            break;
          }
          case 104: {
            TotalShellCount = input.ReadUInt32();
            break;
          }
          case 112: {
            TakenShellCount = input.ReadUInt32();
            break;
          }
          case 120: {
            TakenChestCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 32: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 96: {
            TotalChestCount = input.ReadUInt32();
            break;
          }
          case 104: {
            TotalShellCount = input.ReadUInt32();
            break;
          }
          case 112: {
            TakenShellCount = input.ReadUInt32();
            break;
          }
          case 120: {
            TakenChestCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
