// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WidgetSlotData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OldProtos {

  /// <summary>Holder for reflection information generated from WidgetSlotData.proto</summary>
  public static partial class WidgetSlotDataReflection {

    #region Descriptor
    /// <summary>File descriptor for WidgetSlotData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WidgetSlotDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRXaWRnZXRTbG90RGF0YS5wcm90bxoTV2lkZ2V0U2xvdFRhZy5wcm90byJr",
            "Cg5XaWRnZXRTbG90RGF0YRIUCgxjZF9vdmVyX3RpbWUYCSABKA0SGwoDdGFn",
            "GA4gASgOMg4uV2lkZ2V0U2xvdFRhZxITCgttYXRlcmlhbF9pZBgLIAEoDRIR",
            "Cglpc19hY3RpdmUYDCABKAhCDKoCCU9sZFByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OldProtos.WidgetSlotTagReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OldProtos.WidgetSlotData), global::OldProtos.WidgetSlotData.Parser, new[]{ "CdOverTime", "Tag", "MaterialId", "IsActive" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WidgetSlotData : pb::IMessage<WidgetSlotData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WidgetSlotData> _parser = new pb::MessageParser<WidgetSlotData>(() => new WidgetSlotData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WidgetSlotData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OldProtos.WidgetSlotDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WidgetSlotData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WidgetSlotData(WidgetSlotData other) : this() {
      cdOverTime_ = other.cdOverTime_;
      tag_ = other.tag_;
      materialId_ = other.materialId_;
      isActive_ = other.isActive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WidgetSlotData Clone() {
      return new WidgetSlotData(this);
    }

    /// <summary>Field number for the "cd_over_time" field.</summary>
    public const int CdOverTimeFieldNumber = 9;
    private uint cdOverTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint CdOverTime {
      get { return cdOverTime_; }
      set {
        cdOverTime_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 14;
    private global::OldProtos.WidgetSlotTag tag_ = global::OldProtos.WidgetSlotTag.QuickUse;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OldProtos.WidgetSlotTag Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "material_id" field.</summary>
    public const int MaterialIdFieldNumber = 11;
    private uint materialId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaterialId {
      get { return materialId_; }
      set {
        materialId_ = value;
      }
    }

    /// <summary>Field number for the "is_active" field.</summary>
    public const int IsActiveFieldNumber = 12;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WidgetSlotData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WidgetSlotData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CdOverTime != other.CdOverTime) return false;
      if (Tag != other.Tag) return false;
      if (MaterialId != other.MaterialId) return false;
      if (IsActive != other.IsActive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CdOverTime != 0) hash ^= CdOverTime.GetHashCode();
      if (Tag != global::OldProtos.WidgetSlotTag.QuickUse) hash ^= Tag.GetHashCode();
      if (MaterialId != 0) hash ^= MaterialId.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CdOverTime != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(CdOverTime);
      }
      if (MaterialId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MaterialId);
      }
      if (IsActive != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsActive);
      }
      if (Tag != global::OldProtos.WidgetSlotTag.QuickUse) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CdOverTime != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(CdOverTime);
      }
      if (MaterialId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MaterialId);
      }
      if (IsActive != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsActive);
      }
      if (Tag != global::OldProtos.WidgetSlotTag.QuickUse) {
        output.WriteRawTag(112);
        output.WriteEnum((int) Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CdOverTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CdOverTime);
      }
      if (Tag != global::OldProtos.WidgetSlotTag.QuickUse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Tag);
      }
      if (MaterialId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaterialId);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WidgetSlotData other) {
      if (other == null) {
        return;
      }
      if (other.CdOverTime != 0) {
        CdOverTime = other.CdOverTime;
      }
      if (other.Tag != global::OldProtos.WidgetSlotTag.QuickUse) {
        Tag = other.Tag;
      }
      if (other.MaterialId != 0) {
        MaterialId = other.MaterialId;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 72: {
            CdOverTime = input.ReadUInt32();
            break;
          }
          case 88: {
            MaterialId = input.ReadUInt32();
            break;
          }
          case 96: {
            IsActive = input.ReadBool();
            break;
          }
          case 112: {
            Tag = (global::OldProtos.WidgetSlotTag) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 72: {
            CdOverTime = input.ReadUInt32();
            break;
          }
          case 88: {
            MaterialId = input.ReadUInt32();
            break;
          }
          case 96: {
            IsActive = input.ReadBool();
            break;
          }
          case 112: {
            Tag = (global::OldProtos.WidgetSlotTag) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
