// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LanternRiteFireworksChallengeInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from LanternRiteFireworksChallengeInfo.proto</summary>
public static partial class LanternRiteFireworksChallengeInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for LanternRiteFireworksChallengeInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LanternRiteFireworksChallengeInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CidMYW50ZXJuUml0ZUZpcmV3b3Jrc0NoYWxsZW5nZUluZm8ucHJvdG8iZAoh",
          "TGFudGVyblJpdGVGaXJld29ya3NDaGFsbGVuZ2VJbmZvEhIKCmJlc3Rfc2Nv",
          "cmUYAiABKA0SFQoNaXNfZnVsbF9zY29yZRgDIAEoCBIUCgxjaGFsbGVuZ2Vf",
          "aWQYDCABKA1CFgoUb3JnLnNvcmFwb2ludGEucHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LanternRiteFireworksChallengeInfo), global::LanternRiteFireworksChallengeInfo.Parser, new[]{ "BestScore", "IsFullScore", "ChallengeId" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class LanternRiteFireworksChallengeInfo : pb::IMessage<LanternRiteFireworksChallengeInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LanternRiteFireworksChallengeInfo> _parser = new pb::MessageParser<LanternRiteFireworksChallengeInfo>(() => new LanternRiteFireworksChallengeInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<LanternRiteFireworksChallengeInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LanternRiteFireworksChallengeInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LanternRiteFireworksChallengeInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LanternRiteFireworksChallengeInfo(LanternRiteFireworksChallengeInfo other) : this() {
    bestScore_ = other.bestScore_;
    isFullScore_ = other.isFullScore_;
    challengeId_ = other.challengeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public LanternRiteFireworksChallengeInfo Clone() {
    return new LanternRiteFireworksChallengeInfo(this);
  }

  /// <summary>Field number for the "best_score" field.</summary>
  public const int BestScoreFieldNumber = 2;
  private uint bestScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BestScore {
    get { return bestScore_; }
    set {
      bestScore_ = value;
    }
  }

  /// <summary>Field number for the "is_full_score" field.</summary>
  public const int IsFullScoreFieldNumber = 3;
  private bool isFullScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsFullScore {
    get { return isFullScore_; }
    set {
      isFullScore_ = value;
    }
  }

  /// <summary>Field number for the "challenge_id" field.</summary>
  public const int ChallengeIdFieldNumber = 12;
  private uint challengeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ChallengeId {
    get { return challengeId_; }
    set {
      challengeId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as LanternRiteFireworksChallengeInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(LanternRiteFireworksChallengeInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BestScore != other.BestScore) return false;
    if (IsFullScore != other.IsFullScore) return false;
    if (ChallengeId != other.ChallengeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (BestScore != 0) hash ^= BestScore.GetHashCode();
    if (IsFullScore != false) hash ^= IsFullScore.GetHashCode();
    if (ChallengeId != 0) hash ^= ChallengeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (BestScore != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(BestScore);
    }
    if (IsFullScore != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsFullScore);
    }
    if (ChallengeId != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(ChallengeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (BestScore != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(BestScore);
    }
    if (IsFullScore != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsFullScore);
    }
    if (ChallengeId != 0) {
      output.WriteRawTag(96);
      output.WriteUInt32(ChallengeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (BestScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BestScore);
    }
    if (IsFullScore != false) {
      size += 1 + 1;
    }
    if (ChallengeId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChallengeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(LanternRiteFireworksChallengeInfo other) {
    if (other == null) {
      return;
    }
    if (other.BestScore != 0) {
      BestScore = other.BestScore;
    }
    if (other.IsFullScore != false) {
      IsFullScore = other.IsFullScore;
    }
    if (other.ChallengeId != 0) {
      ChallengeId = other.ChallengeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 16: {
          BestScore = input.ReadUInt32();
          break;
        }
        case 24: {
          IsFullScore = input.ReadBool();
          break;
        }
        case 96: {
          ChallengeId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 16: {
          BestScore = input.ReadUInt32();
          break;
        }
        case 24: {
          IsFullScore = input.ReadBool();
          break;
        }
        case 96: {
          ChallengeId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
