// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ScenePlayerSoundNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from ScenePlayerSoundNotify.proto</summary>
public static partial class ScenePlayerSoundNotifyReflection {

  #region Descriptor
  /// <summary>File descriptor for ScenePlayerSoundNotify.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ScenePlayerSoundNotifyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChxTY2VuZVBsYXllclNvdW5kTm90aWZ5LnByb3RvGgxWZWN0b3IucHJvdG8i",
          "4QEKFlNjZW5lUGxheWVyU291bmROb3RpZnkSGQoIcGxheV9wb3MYBiABKAsy",
          "By5WZWN0b3ISOAoJcGxheV90eXBlGA8gASgOMiUuU2NlbmVQbGF5ZXJTb3Vu",
          "ZE5vdGlmeS5QbGF5U291bmRUeXBlEhIKCnNvdW5kX25hbWUYDiABKAkiXgoN",
          "UGxheVNvdW5kVHlwZRIYChRQTEFZX1NPVU5EX1RZUEVfTk9ORRAAEhkKFVBM",
          "QVlfU09VTkRfVFlQRV9TVEFSVBABEhgKFFBMQVlfU09VTkRfVFlQRV9TVE9Q",
          "EAJCFgoUb3JnLnNvcmFwb2ludGEucHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::VectorReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ScenePlayerSoundNotify), global::ScenePlayerSoundNotify.Parser, new[]{ "PlayPos", "PlayType", "SoundName" }, null, new[]{ typeof(global::ScenePlayerSoundNotify.Types.PlaySoundType) }, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// enum CmdId {
///   option allow_alias = true;
///   NONE = 0;
///   CMD_ID = 266;
///   ENET_CHANNEL_ID = 0;
///   ENET_IS_RELIABLE = 1;
/// }
/// </summary>
public sealed partial class ScenePlayerSoundNotify : pb::IMessage<ScenePlayerSoundNotify>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ScenePlayerSoundNotify> _parser = new pb::MessageParser<ScenePlayerSoundNotify>(() => new ScenePlayerSoundNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ScenePlayerSoundNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ScenePlayerSoundNotifyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ScenePlayerSoundNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ScenePlayerSoundNotify(ScenePlayerSoundNotify other) : this() {
    playPos_ = other.playPos_ != null ? other.playPos_.Clone() : null;
    playType_ = other.playType_;
    soundName_ = other.soundName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ScenePlayerSoundNotify Clone() {
    return new ScenePlayerSoundNotify(this);
  }

  /// <summary>Field number for the "play_pos" field.</summary>
  public const int PlayPosFieldNumber = 6;
  private global::Vector playPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector PlayPos {
    get { return playPos_; }
    set {
      playPos_ = value;
    }
  }

  /// <summary>Field number for the "play_type" field.</summary>
  public const int PlayTypeFieldNumber = 15;
  private global::ScenePlayerSoundNotify.Types.PlaySoundType playType_ = global::ScenePlayerSoundNotify.Types.PlaySoundType.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ScenePlayerSoundNotify.Types.PlaySoundType PlayType {
    get { return playType_; }
    set {
      playType_ = value;
    }
  }

  /// <summary>Field number for the "sound_name" field.</summary>
  public const int SoundNameFieldNumber = 14;
  private string soundName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SoundName {
    get { return soundName_; }
    set {
      soundName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ScenePlayerSoundNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ScenePlayerSoundNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(PlayPos, other.PlayPos)) return false;
    if (PlayType != other.PlayType) return false;
    if (SoundName != other.SoundName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (playPos_ != null) hash ^= PlayPos.GetHashCode();
    if (PlayType != global::ScenePlayerSoundNotify.Types.PlaySoundType.None) hash ^= PlayType.GetHashCode();
    if (SoundName.Length != 0) hash ^= SoundName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (playPos_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(PlayPos);
    }
    if (SoundName.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(SoundName);
    }
    if (PlayType != global::ScenePlayerSoundNotify.Types.PlaySoundType.None) {
      output.WriteRawTag(120);
      output.WriteEnum((int) PlayType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (playPos_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(PlayPos);
    }
    if (SoundName.Length != 0) {
      output.WriteRawTag(114);
      output.WriteString(SoundName);
    }
    if (PlayType != global::ScenePlayerSoundNotify.Types.PlaySoundType.None) {
      output.WriteRawTag(120);
      output.WriteEnum((int) PlayType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (playPos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayPos);
    }
    if (PlayType != global::ScenePlayerSoundNotify.Types.PlaySoundType.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayType);
    }
    if (SoundName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SoundName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ScenePlayerSoundNotify other) {
    if (other == null) {
      return;
    }
    if (other.playPos_ != null) {
      if (playPos_ == null) {
        PlayPos = new global::Vector();
      }
      PlayPos.MergeFrom(other.PlayPos);
    }
    if (other.PlayType != global::ScenePlayerSoundNotify.Types.PlaySoundType.None) {
      PlayType = other.PlayType;
    }
    if (other.SoundName.Length != 0) {
      SoundName = other.SoundName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 50: {
          if (playPos_ == null) {
            PlayPos = new global::Vector();
          }
          input.ReadMessage(PlayPos);
          break;
        }
        case 114: {
          SoundName = input.ReadString();
          break;
        }
        case 120: {
          PlayType = (global::ScenePlayerSoundNotify.Types.PlaySoundType) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 50: {
          if (playPos_ == null) {
            PlayPos = new global::Vector();
          }
          input.ReadMessage(PlayPos);
          break;
        }
        case 114: {
          SoundName = input.ReadString();
          break;
        }
        case 120: {
          PlayType = (global::ScenePlayerSoundNotify.Types.PlaySoundType) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the ScenePlayerSoundNotify message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum PlaySoundType {
      [pbr::OriginalName("PLAY_SOUND_TYPE_NONE")] None = 0,
      [pbr::OriginalName("PLAY_SOUND_TYPE_START")] Start = 1,
      [pbr::OriginalName("PLAY_SOUND_TYPE_STOP")] Stop = 2,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
