// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerStartMatchRsp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NewProtos {

  /// <summary>Holder for reflection information generated from PlayerStartMatchRsp.proto</summary>
  public static partial class PlayerStartMatchRspReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerStartMatchRsp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerStartMatchRspReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQbGF5ZXJTdGFydE1hdGNoUnNwLnByb3RvGg9NYXRjaFR5cGUucHJvdG8i",
            "zAEKE1BsYXllclN0YXJ0TWF0Y2hSc3ASEgoKZHVuZ2Vvbl9pZBgBIAEoDRIQ",
            "CghtYXRjaF9pZBgMIAEoDRIeCgptYXRjaF90eXBlGAogASgOMgouTWF0Y2hU",
            "eXBlEhcKD3B1bmlzaF9lbmRfdGltZRgIIAEoDRISCgptcF9wbGF5X2lkGAsg",
            "ASgNEg0KBXBhcmFtGAcgASgNEiIKGm1lY2hhbmljdXNfZGlmZmljdWx0X2xl",
            "dmVsGAMgASgNEg8KB3JldGNvZGUYBiABKAVCDKoCCU5ld1Byb3Rvc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NewProtos.MatchTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NewProtos.PlayerStartMatchRsp), global::NewProtos.PlayerStartMatchRsp.Parser, new[]{ "DungeonId", "MatchId", "MatchType", "PunishEndTime", "MpPlayId", "Param", "MechanicusDifficultLevel", "Retcode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// enum CmdId {
  ///   option allow_alias = true;
  ///   NONE = 0;
  ///   CMD_ID = 4191;
  ///   ENET_CHANNEL_ID = 0;
  ///   ENET_IS_RELIABLE = 1;
  /// }
  /// </summary>
  public sealed partial class PlayerStartMatchRsp : pb::IMessage<PlayerStartMatchRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStartMatchRsp> _parser = new pb::MessageParser<PlayerStartMatchRsp>(() => new PlayerStartMatchRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerStartMatchRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NewProtos.PlayerStartMatchRspReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStartMatchRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStartMatchRsp(PlayerStartMatchRsp other) : this() {
      dungeonId_ = other.dungeonId_;
      matchId_ = other.matchId_;
      matchType_ = other.matchType_;
      punishEndTime_ = other.punishEndTime_;
      mpPlayId_ = other.mpPlayId_;
      param_ = other.param_;
      mechanicusDifficultLevel_ = other.mechanicusDifficultLevel_;
      retcode_ = other.retcode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerStartMatchRsp Clone() {
      return new PlayerStartMatchRsp(this);
    }

    /// <summary>Field number for the "dungeon_id" field.</summary>
    public const int DungeonIdFieldNumber = 1;
    private uint dungeonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DungeonId {
      get { return dungeonId_; }
      set {
        dungeonId_ = value;
      }
    }

    /// <summary>Field number for the "match_id" field.</summary>
    public const int MatchIdFieldNumber = 12;
    private uint matchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MatchId {
      get { return matchId_; }
      set {
        matchId_ = value;
      }
    }

    /// <summary>Field number for the "match_type" field.</summary>
    public const int MatchTypeFieldNumber = 10;
    private global::NewProtos.MatchType matchType_ = global::NewProtos.MatchType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::NewProtos.MatchType MatchType {
      get { return matchType_; }
      set {
        matchType_ = value;
      }
    }

    /// <summary>Field number for the "punish_end_time" field.</summary>
    public const int PunishEndTimeFieldNumber = 8;
    private uint punishEndTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PunishEndTime {
      get { return punishEndTime_; }
      set {
        punishEndTime_ = value;
      }
    }

    /// <summary>Field number for the "mp_play_id" field.</summary>
    public const int MpPlayIdFieldNumber = 11;
    private uint mpPlayId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MpPlayId {
      get { return mpPlayId_; }
      set {
        mpPlayId_ = value;
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 7;
    private uint param_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Param {
      get { return param_; }
      set {
        param_ = value;
      }
    }

    /// <summary>Field number for the "mechanicus_difficult_level" field.</summary>
    public const int MechanicusDifficultLevelFieldNumber = 3;
    private uint mechanicusDifficultLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MechanicusDifficultLevel {
      get { return mechanicusDifficultLevel_; }
      set {
        mechanicusDifficultLevel_ = value;
      }
    }

    /// <summary>Field number for the "retcode" field.</summary>
    public const int RetcodeFieldNumber = 6;
    private int retcode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Retcode {
      get { return retcode_; }
      set {
        retcode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerStartMatchRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerStartMatchRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DungeonId != other.DungeonId) return false;
      if (MatchId != other.MatchId) return false;
      if (MatchType != other.MatchType) return false;
      if (PunishEndTime != other.PunishEndTime) return false;
      if (MpPlayId != other.MpPlayId) return false;
      if (Param != other.Param) return false;
      if (MechanicusDifficultLevel != other.MechanicusDifficultLevel) return false;
      if (Retcode != other.Retcode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DungeonId != 0) hash ^= DungeonId.GetHashCode();
      if (MatchId != 0) hash ^= MatchId.GetHashCode();
      if (MatchType != global::NewProtos.MatchType.None) hash ^= MatchType.GetHashCode();
      if (PunishEndTime != 0) hash ^= PunishEndTime.GetHashCode();
      if (MpPlayId != 0) hash ^= MpPlayId.GetHashCode();
      if (Param != 0) hash ^= Param.GetHashCode();
      if (MechanicusDifficultLevel != 0) hash ^= MechanicusDifficultLevel.GetHashCode();
      if (Retcode != 0) hash ^= Retcode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DungeonId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DungeonId);
      }
      if (MechanicusDifficultLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MechanicusDifficultLevel);
      }
      if (Retcode != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Retcode);
      }
      if (Param != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Param);
      }
      if (PunishEndTime != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PunishEndTime);
      }
      if (MatchType != global::NewProtos.MatchType.None) {
        output.WriteRawTag(80);
        output.WriteEnum((int) MatchType);
      }
      if (MpPlayId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MpPlayId);
      }
      if (MatchId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DungeonId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(DungeonId);
      }
      if (MechanicusDifficultLevel != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MechanicusDifficultLevel);
      }
      if (Retcode != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Retcode);
      }
      if (Param != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Param);
      }
      if (PunishEndTime != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PunishEndTime);
      }
      if (MatchType != global::NewProtos.MatchType.None) {
        output.WriteRawTag(80);
        output.WriteEnum((int) MatchType);
      }
      if (MpPlayId != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MpPlayId);
      }
      if (MatchId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MatchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DungeonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DungeonId);
      }
      if (MatchId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MatchId);
      }
      if (MatchType != global::NewProtos.MatchType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchType);
      }
      if (PunishEndTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PunishEndTime);
      }
      if (MpPlayId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MpPlayId);
      }
      if (Param != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Param);
      }
      if (MechanicusDifficultLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MechanicusDifficultLevel);
      }
      if (Retcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Retcode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerStartMatchRsp other) {
      if (other == null) {
        return;
      }
      if (other.DungeonId != 0) {
        DungeonId = other.DungeonId;
      }
      if (other.MatchId != 0) {
        MatchId = other.MatchId;
      }
      if (other.MatchType != global::NewProtos.MatchType.None) {
        MatchType = other.MatchType;
      }
      if (other.PunishEndTime != 0) {
        PunishEndTime = other.PunishEndTime;
      }
      if (other.MpPlayId != 0) {
        MpPlayId = other.MpPlayId;
      }
      if (other.Param != 0) {
        Param = other.Param;
      }
      if (other.MechanicusDifficultLevel != 0) {
        MechanicusDifficultLevel = other.MechanicusDifficultLevel;
      }
      if (other.Retcode != 0) {
        Retcode = other.Retcode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 24: {
            MechanicusDifficultLevel = input.ReadUInt32();
            break;
          }
          case 48: {
            Retcode = input.ReadInt32();
            break;
          }
          case 56: {
            Param = input.ReadUInt32();
            break;
          }
          case 64: {
            PunishEndTime = input.ReadUInt32();
            break;
          }
          case 80: {
            MatchType = (global::NewProtos.MatchType) input.ReadEnum();
            break;
          }
          case 88: {
            MpPlayId = input.ReadUInt32();
            break;
          }
          case 96: {
            MatchId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DungeonId = input.ReadUInt32();
            break;
          }
          case 24: {
            MechanicusDifficultLevel = input.ReadUInt32();
            break;
          }
          case 48: {
            Retcode = input.ReadInt32();
            break;
          }
          case 56: {
            Param = input.ReadUInt32();
            break;
          }
          case 64: {
            PunishEndTime = input.ReadUInt32();
            break;
          }
          case 80: {
            MatchType = (global::NewProtos.MatchType) input.ReadEnum();
            break;
          }
          case 88: {
            MpPlayId = input.ReadUInt32();
            break;
          }
          case 96: {
            MatchId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
