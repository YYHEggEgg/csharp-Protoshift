// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GMObstacleInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GMObstacleInfo.proto</summary>
public static partial class GMObstacleInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for GMObstacleInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GMObstacleInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRHTU9ic3RhY2xlSW5mby5wcm90bxoUTWF0aFF1YXRlcm5pb24ucHJvdG8a",
          "DFZlY3Rvci5wcm90bxoQVmVjdG9yM0ludC5wcm90byKTAgoOR01PYnN0YWNs",
          "ZUluZm8SKAoFc2hhcGUYAiABKA4yGS5HTU9ic3RhY2xlSW5mby5TaGFwZVR5",
          "cGUSIQoIcm90YXRpb24YCCABKAsyDy5NYXRoUXVhdGVybmlvbhIXCgZjZW50",
          "ZXIYDyABKAsyBy5WZWN0b3ISEQoJdGltZXN0YW1wGAEgASgDEhMKC29ic3Rh",
          "Y2xlX2lkGA0gASgFEhwKB2V4dGVudHMYCSABKAsyCy5WZWN0b3IzSW50IlUK",
          "CVNoYXBlVHlwZRIlCiFTSEFQRV9UWVBFX09CU1RBQ0xFX1NIQVBFX0NBUFNV",
          "TEUQABIhCh1TSEFQRV9UWVBFX09CU1RBQ0xFX1NIQVBFX0JPWBABQhYKFG9y",
          "Zy5zb3JhcG9pbnRhLnByb3RvYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MathQuaternionReflection.Descriptor, global::VectorReflection.Descriptor, global::Vector3IntReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GMObstacleInfo), global::GMObstacleInfo.Parser, new[]{ "Shape", "Rotation", "Center", "Timestamp", "ObstacleId", "Extents" }, null, new[]{ typeof(global::GMObstacleInfo.Types.ShapeType) }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GMObstacleInfo : pb::IMessage<GMObstacleInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GMObstacleInfo> _parser = new pb::MessageParser<GMObstacleInfo>(() => new GMObstacleInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GMObstacleInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GMObstacleInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GMObstacleInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GMObstacleInfo(GMObstacleInfo other) : this() {
    shape_ = other.shape_;
    rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
    center_ = other.center_ != null ? other.center_.Clone() : null;
    timestamp_ = other.timestamp_;
    obstacleId_ = other.obstacleId_;
    extents_ = other.extents_ != null ? other.extents_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GMObstacleInfo Clone() {
    return new GMObstacleInfo(this);
  }

  /// <summary>Field number for the "shape" field.</summary>
  public const int ShapeFieldNumber = 2;
  private global::GMObstacleInfo.Types.ShapeType shape_ = global::GMObstacleInfo.Types.ShapeType.ObstacleShapeCapsule;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GMObstacleInfo.Types.ShapeType Shape {
    get { return shape_; }
    set {
      shape_ = value;
    }
  }

  /// <summary>Field number for the "rotation" field.</summary>
  public const int RotationFieldNumber = 8;
  private global::MathQuaternion rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::MathQuaternion Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "center" field.</summary>
  public const int CenterFieldNumber = 15;
  private global::Vector center_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector Center {
    get { return center_; }
    set {
      center_ = value;
    }
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 1;
  private long timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long Timestamp {
    get { return timestamp_; }
    set {
      timestamp_ = value;
    }
  }

  /// <summary>Field number for the "obstacle_id" field.</summary>
  public const int ObstacleIdFieldNumber = 13;
  private int obstacleId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ObstacleId {
    get { return obstacleId_; }
    set {
      obstacleId_ = value;
    }
  }

  /// <summary>Field number for the "extents" field.</summary>
  public const int ExtentsFieldNumber = 9;
  private global::Vector3Int extents_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector3Int Extents {
    get { return extents_; }
    set {
      extents_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GMObstacleInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GMObstacleInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Shape != other.Shape) return false;
    if (!object.Equals(Rotation, other.Rotation)) return false;
    if (!object.Equals(Center, other.Center)) return false;
    if (Timestamp != other.Timestamp) return false;
    if (ObstacleId != other.ObstacleId) return false;
    if (!object.Equals(Extents, other.Extents)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Shape != global::GMObstacleInfo.Types.ShapeType.ObstacleShapeCapsule) hash ^= Shape.GetHashCode();
    if (rotation_ != null) hash ^= Rotation.GetHashCode();
    if (center_ != null) hash ^= Center.GetHashCode();
    if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
    if (ObstacleId != 0) hash ^= ObstacleId.GetHashCode();
    if (extents_ != null) hash ^= Extents.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Timestamp != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Timestamp);
    }
    if (Shape != global::GMObstacleInfo.Types.ShapeType.ObstacleShapeCapsule) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Shape);
    }
    if (rotation_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Rotation);
    }
    if (extents_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Extents);
    }
    if (ObstacleId != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(ObstacleId);
    }
    if (center_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(Center);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Timestamp != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(Timestamp);
    }
    if (Shape != global::GMObstacleInfo.Types.ShapeType.ObstacleShapeCapsule) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Shape);
    }
    if (rotation_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(Rotation);
    }
    if (extents_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(Extents);
    }
    if (ObstacleId != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(ObstacleId);
    }
    if (center_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(Center);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Shape != global::GMObstacleInfo.Types.ShapeType.ObstacleShapeCapsule) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shape);
    }
    if (rotation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
    }
    if (center_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Center);
    }
    if (Timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
    }
    if (ObstacleId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObstacleId);
    }
    if (extents_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extents);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GMObstacleInfo other) {
    if (other == null) {
      return;
    }
    if (other.Shape != global::GMObstacleInfo.Types.ShapeType.ObstacleShapeCapsule) {
      Shape = other.Shape;
    }
    if (other.rotation_ != null) {
      if (rotation_ == null) {
        Rotation = new global::MathQuaternion();
      }
      Rotation.MergeFrom(other.Rotation);
    }
    if (other.center_ != null) {
      if (center_ == null) {
        Center = new global::Vector();
      }
      Center.MergeFrom(other.Center);
    }
    if (other.Timestamp != 0L) {
      Timestamp = other.Timestamp;
    }
    if (other.ObstacleId != 0) {
      ObstacleId = other.ObstacleId;
    }
    if (other.extents_ != null) {
      if (extents_ == null) {
        Extents = new global::Vector3Int();
      }
      Extents.MergeFrom(other.Extents);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Timestamp = input.ReadInt64();
          break;
        }
        case 16: {
          Shape = (global::GMObstacleInfo.Types.ShapeType) input.ReadEnum();
          break;
        }
        case 66: {
          if (rotation_ == null) {
            Rotation = new global::MathQuaternion();
          }
          input.ReadMessage(Rotation);
          break;
        }
        case 74: {
          if (extents_ == null) {
            Extents = new global::Vector3Int();
          }
          input.ReadMessage(Extents);
          break;
        }
        case 104: {
          ObstacleId = input.ReadInt32();
          break;
        }
        case 122: {
          if (center_ == null) {
            Center = new global::Vector();
          }
          input.ReadMessage(Center);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Timestamp = input.ReadInt64();
          break;
        }
        case 16: {
          Shape = (global::GMObstacleInfo.Types.ShapeType) input.ReadEnum();
          break;
        }
        case 66: {
          if (rotation_ == null) {
            Rotation = new global::MathQuaternion();
          }
          input.ReadMessage(Rotation);
          break;
        }
        case 74: {
          if (extents_ == null) {
            Extents = new global::Vector3Int();
          }
          input.ReadMessage(Extents);
          break;
        }
        case 104: {
          ObstacleId = input.ReadInt32();
          break;
        }
        case 122: {
          if (center_ == null) {
            Center = new global::Vector();
          }
          input.ReadMessage(Center);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the GMObstacleInfo message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum ShapeType {
      [pbr::OriginalName("SHAPE_TYPE_OBSTACLE_SHAPE_CAPSULE")] ObstacleShapeCapsule = 0,
      [pbr::OriginalName("SHAPE_TYPE_OBSTACLE_SHAPE_BOX")] ObstacleShapeBox = 1,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
