// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCGDSCardData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GCGDSCardData.proto</summary>
public static partial class GCGDSCardDataReflection {

  #region Descriptor
  /// <summary>File descriptor for GCGDSCardData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GCGDSCardDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNHQ0dEU0NhcmREYXRhLnByb3RvIp8BCg1HQ0dEU0NhcmREYXRhEgsKA251",
          "bRgLIAEoDRIRCglmYWNlX3R5cGUYBSABKA0SDwoHY2FyZF9pZBgEIAEoDRIp",
          "CiFwcm9maWNpZW5jeV9yZXdhcmRfdGFrZW5faWR4X2xpc3QYDiADKA0SHQoV",
          "dW5sb2NrX2ZhY2VfdHlwZV9saXN0GAYgAygNEhMKC3Byb2ZpY2llbmN5GAog",
          "ASgNQhYKFG9yZy5zb3JhcG9pbnRhLnByb3RvYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GCGDSCardData), global::GCGDSCardData.Parser, new[]{ "Num", "FaceType", "CardId", "ProficiencyRewardTakenIdxList", "UnlockFaceTypeList", "Proficiency" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GCGDSCardData : pb::IMessage<GCGDSCardData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GCGDSCardData> _parser = new pb::MessageParser<GCGDSCardData>(() => new GCGDSCardData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GCGDSCardData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GCGDSCardDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GCGDSCardData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GCGDSCardData(GCGDSCardData other) : this() {
    num_ = other.num_;
    faceType_ = other.faceType_;
    cardId_ = other.cardId_;
    proficiencyRewardTakenIdxList_ = other.proficiencyRewardTakenIdxList_.Clone();
    unlockFaceTypeList_ = other.unlockFaceTypeList_.Clone();
    proficiency_ = other.proficiency_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GCGDSCardData Clone() {
    return new GCGDSCardData(this);
  }

  /// <summary>Field number for the "num" field.</summary>
  public const int NumFieldNumber = 11;
  private uint num_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Num {
    get { return num_; }
    set {
      num_ = value;
    }
  }

  /// <summary>Field number for the "face_type" field.</summary>
  public const int FaceTypeFieldNumber = 5;
  private uint faceType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FaceType {
    get { return faceType_; }
    set {
      faceType_ = value;
    }
  }

  /// <summary>Field number for the "card_id" field.</summary>
  public const int CardIdFieldNumber = 4;
  private uint cardId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CardId {
    get { return cardId_; }
    set {
      cardId_ = value;
    }
  }

  /// <summary>Field number for the "proficiency_reward_taken_idx_list" field.</summary>
  public const int ProficiencyRewardTakenIdxListFieldNumber = 14;
  private static readonly pb::FieldCodec<uint> _repeated_proficiencyRewardTakenIdxList_codec
      = pb::FieldCodec.ForUInt32(114);
  private readonly pbc::RepeatedField<uint> proficiencyRewardTakenIdxList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> ProficiencyRewardTakenIdxList {
    get { return proficiencyRewardTakenIdxList_; }
  }

  /// <summary>Field number for the "unlock_face_type_list" field.</summary>
  public const int UnlockFaceTypeListFieldNumber = 6;
  private static readonly pb::FieldCodec<uint> _repeated_unlockFaceTypeList_codec
      = pb::FieldCodec.ForUInt32(50);
  private readonly pbc::RepeatedField<uint> unlockFaceTypeList_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> UnlockFaceTypeList {
    get { return unlockFaceTypeList_; }
  }

  /// <summary>Field number for the "proficiency" field.</summary>
  public const int ProficiencyFieldNumber = 10;
  private uint proficiency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Proficiency {
    get { return proficiency_; }
    set {
      proficiency_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GCGDSCardData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GCGDSCardData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Num != other.Num) return false;
    if (FaceType != other.FaceType) return false;
    if (CardId != other.CardId) return false;
    if(!proficiencyRewardTakenIdxList_.Equals(other.proficiencyRewardTakenIdxList_)) return false;
    if(!unlockFaceTypeList_.Equals(other.unlockFaceTypeList_)) return false;
    if (Proficiency != other.Proficiency) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Num != 0) hash ^= Num.GetHashCode();
    if (FaceType != 0) hash ^= FaceType.GetHashCode();
    if (CardId != 0) hash ^= CardId.GetHashCode();
    hash ^= proficiencyRewardTakenIdxList_.GetHashCode();
    hash ^= unlockFaceTypeList_.GetHashCode();
    if (Proficiency != 0) hash ^= Proficiency.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (CardId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(CardId);
    }
    if (FaceType != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(FaceType);
    }
    unlockFaceTypeList_.WriteTo(output, _repeated_unlockFaceTypeList_codec);
    if (Proficiency != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(Proficiency);
    }
    if (Num != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(Num);
    }
    proficiencyRewardTakenIdxList_.WriteTo(output, _repeated_proficiencyRewardTakenIdxList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (CardId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(CardId);
    }
    if (FaceType != 0) {
      output.WriteRawTag(40);
      output.WriteUInt32(FaceType);
    }
    unlockFaceTypeList_.WriteTo(ref output, _repeated_unlockFaceTypeList_codec);
    if (Proficiency != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(Proficiency);
    }
    if (Num != 0) {
      output.WriteRawTag(88);
      output.WriteUInt32(Num);
    }
    proficiencyRewardTakenIdxList_.WriteTo(ref output, _repeated_proficiencyRewardTakenIdxList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Num != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Num);
    }
    if (FaceType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FaceType);
    }
    if (CardId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CardId);
    }
    size += proficiencyRewardTakenIdxList_.CalculateSize(_repeated_proficiencyRewardTakenIdxList_codec);
    size += unlockFaceTypeList_.CalculateSize(_repeated_unlockFaceTypeList_codec);
    if (Proficiency != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Proficiency);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GCGDSCardData other) {
    if (other == null) {
      return;
    }
    if (other.Num != 0) {
      Num = other.Num;
    }
    if (other.FaceType != 0) {
      FaceType = other.FaceType;
    }
    if (other.CardId != 0) {
      CardId = other.CardId;
    }
    proficiencyRewardTakenIdxList_.Add(other.proficiencyRewardTakenIdxList_);
    unlockFaceTypeList_.Add(other.unlockFaceTypeList_);
    if (other.Proficiency != 0) {
      Proficiency = other.Proficiency;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 32: {
          CardId = input.ReadUInt32();
          break;
        }
        case 40: {
          FaceType = input.ReadUInt32();
          break;
        }
        case 50:
        case 48: {
          unlockFaceTypeList_.AddEntriesFrom(input, _repeated_unlockFaceTypeList_codec);
          break;
        }
        case 80: {
          Proficiency = input.ReadUInt32();
          break;
        }
        case 88: {
          Num = input.ReadUInt32();
          break;
        }
        case 114:
        case 112: {
          proficiencyRewardTakenIdxList_.AddEntriesFrom(input, _repeated_proficiencyRewardTakenIdxList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 32: {
          CardId = input.ReadUInt32();
          break;
        }
        case 40: {
          FaceType = input.ReadUInt32();
          break;
        }
        case 50:
        case 48: {
          unlockFaceTypeList_.AddEntriesFrom(ref input, _repeated_unlockFaceTypeList_codec);
          break;
        }
        case 80: {
          Proficiency = input.ReadUInt32();
          break;
        }
        case 88: {
          Num = input.ReadUInt32();
          break;
        }
        case 114:
        case 112: {
          proficiencyRewardTakenIdxList_.AddEntriesFrom(ref input, _repeated_proficiencyRewardTakenIdxList_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
