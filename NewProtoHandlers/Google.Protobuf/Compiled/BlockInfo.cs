// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BlockInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from BlockInfo.proto</summary>
public static partial class BlockInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for BlockInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BlockInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9CbG9ja0luZm8ucHJvdG8iVwoJQmxvY2tJbmZvEhAKCGJsb2NrX2lkGAEg",
          "ASgNEhQKDGRhdGFfdmVyc2lvbhgCIAEoDRIQCghiaW5fZGF0YRgDIAEoDBIQ",
          "Cghpc19kaXJ0eRgEIAEoCEIWChRvcmcuc29yYXBvaW50YS5wcm90b2IGcHJv",
          "dG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::BlockInfo), global::BlockInfo.Parser, new[]{ "BlockId", "DataVersion", "BinData", "IsDirty" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class BlockInfo : pb::IMessage<BlockInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BlockInfo> _parser = new pb::MessageParser<BlockInfo>(() => new BlockInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<BlockInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BlockInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BlockInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BlockInfo(BlockInfo other) : this() {
    blockId_ = other.blockId_;
    dataVersion_ = other.dataVersion_;
    binData_ = other.binData_;
    isDirty_ = other.isDirty_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BlockInfo Clone() {
    return new BlockInfo(this);
  }

  /// <summary>Field number for the "block_id" field.</summary>
  public const int BlockIdFieldNumber = 1;
  private uint blockId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BlockId {
    get { return blockId_; }
    set {
      blockId_ = value;
    }
  }

  /// <summary>Field number for the "data_version" field.</summary>
  public const int DataVersionFieldNumber = 2;
  private uint dataVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DataVersion {
    get { return dataVersion_; }
    set {
      dataVersion_ = value;
    }
  }

  /// <summary>Field number for the "bin_data" field.</summary>
  public const int BinDataFieldNumber = 3;
  private pb::ByteString binData_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString BinData {
    get { return binData_; }
    set {
      binData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "is_dirty" field.</summary>
  public const int IsDirtyFieldNumber = 4;
  private bool isDirty_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsDirty {
    get { return isDirty_; }
    set {
      isDirty_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as BlockInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(BlockInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BlockId != other.BlockId) return false;
    if (DataVersion != other.DataVersion) return false;
    if (BinData != other.BinData) return false;
    if (IsDirty != other.IsDirty) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (BlockId != 0) hash ^= BlockId.GetHashCode();
    if (DataVersion != 0) hash ^= DataVersion.GetHashCode();
    if (BinData.Length != 0) hash ^= BinData.GetHashCode();
    if (IsDirty != false) hash ^= IsDirty.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (BlockId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(BlockId);
    }
    if (DataVersion != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(DataVersion);
    }
    if (BinData.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(BinData);
    }
    if (IsDirty != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsDirty);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (BlockId != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(BlockId);
    }
    if (DataVersion != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(DataVersion);
    }
    if (BinData.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(BinData);
    }
    if (IsDirty != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsDirty);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (BlockId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlockId);
    }
    if (DataVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DataVersion);
    }
    if (BinData.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(BinData);
    }
    if (IsDirty != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(BlockInfo other) {
    if (other == null) {
      return;
    }
    if (other.BlockId != 0) {
      BlockId = other.BlockId;
    }
    if (other.DataVersion != 0) {
      DataVersion = other.DataVersion;
    }
    if (other.BinData.Length != 0) {
      BinData = other.BinData;
    }
    if (other.IsDirty != false) {
      IsDirty = other.IsDirty;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          BlockId = input.ReadUInt32();
          break;
        }
        case 16: {
          DataVersion = input.ReadUInt32();
          break;
        }
        case 26: {
          BinData = input.ReadBytes();
          break;
        }
        case 32: {
          IsDirty = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          BlockId = input.ReadUInt32();
          break;
        }
        case 16: {
          DataVersion = input.ReadUInt32();
          break;
        }
        case 26: {
          BinData = input.ReadBytes();
          break;
        }
        case 32: {
          IsDirty = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
