// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CoinCollectPlayerInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from CoinCollectPlayerInfo.proto</summary>
public static partial class CoinCollectPlayerInfoReflection {

  #region Descriptor
  /// <summary>File descriptor for CoinCollectPlayerInfo.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CoinCollectPlayerInfoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChtDb2luQ29sbGVjdFBsYXllckluZm8ucHJvdG8aH0NvaW5Db2xsZWN0VGVh",
          "bUF2YXRhckluZm8ucHJvdG8iowEKFUNvaW5Db2xsZWN0UGxheWVySW5mbxIS",
          "CgpwbGF5ZXJfdWlkGA8gASgNEhIKCmlzX3ByZXBhcmUYByABKAgSFwoPY2hv",
          "b3NlX3NraWxsX25vGAogASgNEjQKEGF2YXRhcl9pbmZvX2xpc3QYAiADKAsy",
          "Gi5Db2luQ29sbGVjdFRlYW1BdmF0YXJJbmZvEhMKC3BsYXllcl9uYW1lGAYg",
          "ASgJQhYKFG9yZy5zb3JhcG9pbnRhLnByb3RvYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::CoinCollectTeamAvatarInfoReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CoinCollectPlayerInfo), global::CoinCollectPlayerInfo.Parser, new[]{ "PlayerUid", "IsPrepare", "ChooseSkillNo", "AvatarInfoList", "PlayerName" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class CoinCollectPlayerInfo : pb::IMessage<CoinCollectPlayerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CoinCollectPlayerInfo> _parser = new pb::MessageParser<CoinCollectPlayerInfo>(() => new CoinCollectPlayerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CoinCollectPlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CoinCollectPlayerInfoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CoinCollectPlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CoinCollectPlayerInfo(CoinCollectPlayerInfo other) : this() {
    playerUid_ = other.playerUid_;
    isPrepare_ = other.isPrepare_;
    chooseSkillNo_ = other.chooseSkillNo_;
    avatarInfoList_ = other.avatarInfoList_.Clone();
    playerName_ = other.playerName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CoinCollectPlayerInfo Clone() {
    return new CoinCollectPlayerInfo(this);
  }

  /// <summary>Field number for the "player_uid" field.</summary>
  public const int PlayerUidFieldNumber = 15;
  private uint playerUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PlayerUid {
    get { return playerUid_; }
    set {
      playerUid_ = value;
    }
  }

  /// <summary>Field number for the "is_prepare" field.</summary>
  public const int IsPrepareFieldNumber = 7;
  private bool isPrepare_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPrepare {
    get { return isPrepare_; }
    set {
      isPrepare_ = value;
    }
  }

  /// <summary>Field number for the "choose_skill_no" field.</summary>
  public const int ChooseSkillNoFieldNumber = 10;
  private uint chooseSkillNo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ChooseSkillNo {
    get { return chooseSkillNo_; }
    set {
      chooseSkillNo_ = value;
    }
  }

  /// <summary>Field number for the "avatar_info_list" field.</summary>
  public const int AvatarInfoListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CoinCollectTeamAvatarInfo> _repeated_avatarInfoList_codec
      = pb::FieldCodec.ForMessage(18, global::CoinCollectTeamAvatarInfo.Parser);
  private readonly pbc::RepeatedField<global::CoinCollectTeamAvatarInfo> avatarInfoList_ = new pbc::RepeatedField<global::CoinCollectTeamAvatarInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CoinCollectTeamAvatarInfo> AvatarInfoList {
    get { return avatarInfoList_; }
  }

  /// <summary>Field number for the "player_name" field.</summary>
  public const int PlayerNameFieldNumber = 6;
  private string playerName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PlayerName {
    get { return playerName_; }
    set {
      playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CoinCollectPlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CoinCollectPlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayerUid != other.PlayerUid) return false;
    if (IsPrepare != other.IsPrepare) return false;
    if (ChooseSkillNo != other.ChooseSkillNo) return false;
    if(!avatarInfoList_.Equals(other.avatarInfoList_)) return false;
    if (PlayerName != other.PlayerName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayerUid != 0) hash ^= PlayerUid.GetHashCode();
    if (IsPrepare != false) hash ^= IsPrepare.GetHashCode();
    if (ChooseSkillNo != 0) hash ^= ChooseSkillNo.GetHashCode();
    hash ^= avatarInfoList_.GetHashCode();
    if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    avatarInfoList_.WriteTo(output, _repeated_avatarInfoList_codec);
    if (PlayerName.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(PlayerName);
    }
    if (IsPrepare != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsPrepare);
    }
    if (ChooseSkillNo != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(ChooseSkillNo);
    }
    if (PlayerUid != 0) {
      output.WriteRawTag(120);
      output.WriteUInt32(PlayerUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    avatarInfoList_.WriteTo(ref output, _repeated_avatarInfoList_codec);
    if (PlayerName.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(PlayerName);
    }
    if (IsPrepare != false) {
      output.WriteRawTag(56);
      output.WriteBool(IsPrepare);
    }
    if (ChooseSkillNo != 0) {
      output.WriteRawTag(80);
      output.WriteUInt32(ChooseSkillNo);
    }
    if (PlayerUid != 0) {
      output.WriteRawTag(120);
      output.WriteUInt32(PlayerUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (PlayerUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerUid);
    }
    if (IsPrepare != false) {
      size += 1 + 1;
    }
    if (ChooseSkillNo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChooseSkillNo);
    }
    size += avatarInfoList_.CalculateSize(_repeated_avatarInfoList_codec);
    if (PlayerName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CoinCollectPlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.PlayerUid != 0) {
      PlayerUid = other.PlayerUid;
    }
    if (other.IsPrepare != false) {
      IsPrepare = other.IsPrepare;
    }
    if (other.ChooseSkillNo != 0) {
      ChooseSkillNo = other.ChooseSkillNo;
    }
    avatarInfoList_.Add(other.avatarInfoList_);
    if (other.PlayerName.Length != 0) {
      PlayerName = other.PlayerName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          avatarInfoList_.AddEntriesFrom(input, _repeated_avatarInfoList_codec);
          break;
        }
        case 50: {
          PlayerName = input.ReadString();
          break;
        }
        case 56: {
          IsPrepare = input.ReadBool();
          break;
        }
        case 80: {
          ChooseSkillNo = input.ReadUInt32();
          break;
        }
        case 120: {
          PlayerUid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 18: {
          avatarInfoList_.AddEntriesFrom(ref input, _repeated_avatarInfoList_codec);
          break;
        }
        case 50: {
          PlayerName = input.ReadString();
          break;
        }
        case 56: {
          IsPrepare = input.ReadBool();
          break;
        }
        case 80: {
          ChooseSkillNo = input.ReadUInt32();
          break;
        }
        case 120: {
          PlayerUid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
