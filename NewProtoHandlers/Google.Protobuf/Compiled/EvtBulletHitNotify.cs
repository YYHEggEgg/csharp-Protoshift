// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EvtBulletHitNotify.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from EvtBulletHitNotify.proto</summary>
public static partial class EvtBulletHitNotifyReflection {

  #region Descriptor
  /// <summary>File descriptor for EvtBulletHitNotify.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static EvtBulletHitNotifyReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhFdnRCdWxsZXRIaXROb3RpZnkucHJvdG8aEUZvcndhcmRUeXBlLnByb3Rv",
          "GhVIaXRDb2xsaWRlclR5cGUucHJvdG8aDFZlY3Rvci5wcm90byKPAgoSRXZ0",
          "QnVsbGV0SGl0Tm90aWZ5EiIKDGZvcndhcmRfdHlwZRgCIAEoDjIMLkZvcndh",
          "cmRUeXBlEhgKEHNpbmdsZV9idWxsZXRfaWQYBCABKA0SGwoKaGl0X25vcm1h",
          "bBgJIAEoCzIHLlZlY3RvchIVCg1oaXRfZW50aXR5X2lkGAYgASgNEhoKCWhp",
          "dF9wb2ludBgIIAEoCzIHLlZlY3RvchIrChFoaXRfY29sbGlkZXJfdHlwZRgK",
          "IAEoDjIQLkhpdENvbGxpZGVyVHlwZRIRCgllbnRpdHlfaWQYDiABKA0SFAoM",
          "Zm9yd2FyZF9wZWVyGAMgASgNEhUKDWhpdF9ib3hfaW5kZXgYASABKAVCFgoU",
          "b3JnLnNvcmFwb2ludGEucHJvdG9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::ForwardTypeReflection.Descriptor, global::HitColliderTypeReflection.Descriptor, global::VectorReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::EvtBulletHitNotify), global::EvtBulletHitNotify.Parser, new[]{ "ForwardType", "SingleBulletId", "HitNormal", "HitEntityId", "HitPoint", "HitColliderType", "EntityId", "ForwardPeer", "HitBoxIndex" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// enum CmdId {
///   option allow_alias = true;
///   NONE = 0;
///   CMD_ID = 348;
///   ENET_CHANNEL_ID = 0;
///   ENET_IS_RELIABLE = 1;
///   IS_ALLOW_CLIENT = 1;
/// }
/// </summary>
public sealed partial class EvtBulletHitNotify : pb::IMessage<EvtBulletHitNotify>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<EvtBulletHitNotify> _parser = new pb::MessageParser<EvtBulletHitNotify>(() => new EvtBulletHitNotify());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<EvtBulletHitNotify> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::EvtBulletHitNotifyReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public EvtBulletHitNotify() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public EvtBulletHitNotify(EvtBulletHitNotify other) : this() {
    forwardType_ = other.forwardType_;
    singleBulletId_ = other.singleBulletId_;
    hitNormal_ = other.hitNormal_ != null ? other.hitNormal_.Clone() : null;
    hitEntityId_ = other.hitEntityId_;
    hitPoint_ = other.hitPoint_ != null ? other.hitPoint_.Clone() : null;
    hitColliderType_ = other.hitColliderType_;
    entityId_ = other.entityId_;
    forwardPeer_ = other.forwardPeer_;
    hitBoxIndex_ = other.hitBoxIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public EvtBulletHitNotify Clone() {
    return new EvtBulletHitNotify(this);
  }

  /// <summary>Field number for the "forward_type" field.</summary>
  public const int ForwardTypeFieldNumber = 2;
  private global::ForwardType forwardType_ = global::ForwardType.Local;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ForwardType ForwardType {
    get { return forwardType_; }
    set {
      forwardType_ = value;
    }
  }

  /// <summary>Field number for the "single_bullet_id" field.</summary>
  public const int SingleBulletIdFieldNumber = 4;
  private uint singleBulletId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SingleBulletId {
    get { return singleBulletId_; }
    set {
      singleBulletId_ = value;
    }
  }

  /// <summary>Field number for the "hit_normal" field.</summary>
  public const int HitNormalFieldNumber = 9;
  private global::Vector hitNormal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector HitNormal {
    get { return hitNormal_; }
    set {
      hitNormal_ = value;
    }
  }

  /// <summary>Field number for the "hit_entity_id" field.</summary>
  public const int HitEntityIdFieldNumber = 6;
  private uint hitEntityId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HitEntityId {
    get { return hitEntityId_; }
    set {
      hitEntityId_ = value;
    }
  }

  /// <summary>Field number for the "hit_point" field.</summary>
  public const int HitPointFieldNumber = 8;
  private global::Vector hitPoint_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Vector HitPoint {
    get { return hitPoint_; }
    set {
      hitPoint_ = value;
    }
  }

  /// <summary>Field number for the "hit_collider_type" field.</summary>
  public const int HitColliderTypeFieldNumber = 10;
  private global::HitColliderType hitColliderType_ = global::HitColliderType.Invalid;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::HitColliderType HitColliderType {
    get { return hitColliderType_; }
    set {
      hitColliderType_ = value;
    }
  }

  /// <summary>Field number for the "entity_id" field.</summary>
  public const int EntityIdFieldNumber = 14;
  private uint entityId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EntityId {
    get { return entityId_; }
    set {
      entityId_ = value;
    }
  }

  /// <summary>Field number for the "forward_peer" field.</summary>
  public const int ForwardPeerFieldNumber = 3;
  private uint forwardPeer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ForwardPeer {
    get { return forwardPeer_; }
    set {
      forwardPeer_ = value;
    }
  }

  /// <summary>Field number for the "hit_box_index" field.</summary>
  public const int HitBoxIndexFieldNumber = 1;
  private int hitBoxIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int HitBoxIndex {
    get { return hitBoxIndex_; }
    set {
      hitBoxIndex_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as EvtBulletHitNotify);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(EvtBulletHitNotify other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ForwardType != other.ForwardType) return false;
    if (SingleBulletId != other.SingleBulletId) return false;
    if (!object.Equals(HitNormal, other.HitNormal)) return false;
    if (HitEntityId != other.HitEntityId) return false;
    if (!object.Equals(HitPoint, other.HitPoint)) return false;
    if (HitColliderType != other.HitColliderType) return false;
    if (EntityId != other.EntityId) return false;
    if (ForwardPeer != other.ForwardPeer) return false;
    if (HitBoxIndex != other.HitBoxIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (ForwardType != global::ForwardType.Local) hash ^= ForwardType.GetHashCode();
    if (SingleBulletId != 0) hash ^= SingleBulletId.GetHashCode();
    if (hitNormal_ != null) hash ^= HitNormal.GetHashCode();
    if (HitEntityId != 0) hash ^= HitEntityId.GetHashCode();
    if (hitPoint_ != null) hash ^= HitPoint.GetHashCode();
    if (HitColliderType != global::HitColliderType.Invalid) hash ^= HitColliderType.GetHashCode();
    if (EntityId != 0) hash ^= EntityId.GetHashCode();
    if (ForwardPeer != 0) hash ^= ForwardPeer.GetHashCode();
    if (HitBoxIndex != 0) hash ^= HitBoxIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HitBoxIndex != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(HitBoxIndex);
    }
    if (ForwardType != global::ForwardType.Local) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ForwardType);
    }
    if (ForwardPeer != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(ForwardPeer);
    }
    if (SingleBulletId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(SingleBulletId);
    }
    if (HitEntityId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(HitEntityId);
    }
    if (hitPoint_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(HitPoint);
    }
    if (hitNormal_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(HitNormal);
    }
    if (HitColliderType != global::HitColliderType.Invalid) {
      output.WriteRawTag(80);
      output.WriteEnum((int) HitColliderType);
    }
    if (EntityId != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(EntityId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HitBoxIndex != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(HitBoxIndex);
    }
    if (ForwardType != global::ForwardType.Local) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ForwardType);
    }
    if (ForwardPeer != 0) {
      output.WriteRawTag(24);
      output.WriteUInt32(ForwardPeer);
    }
    if (SingleBulletId != 0) {
      output.WriteRawTag(32);
      output.WriteUInt32(SingleBulletId);
    }
    if (HitEntityId != 0) {
      output.WriteRawTag(48);
      output.WriteUInt32(HitEntityId);
    }
    if (hitPoint_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(HitPoint);
    }
    if (hitNormal_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(HitNormal);
    }
    if (HitColliderType != global::HitColliderType.Invalid) {
      output.WriteRawTag(80);
      output.WriteEnum((int) HitColliderType);
    }
    if (EntityId != 0) {
      output.WriteRawTag(112);
      output.WriteUInt32(EntityId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (ForwardType != global::ForwardType.Local) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ForwardType);
    }
    if (SingleBulletId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SingleBulletId);
    }
    if (hitNormal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitNormal);
    }
    if (HitEntityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitEntityId);
    }
    if (hitPoint_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(HitPoint);
    }
    if (HitColliderType != global::HitColliderType.Invalid) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HitColliderType);
    }
    if (EntityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityId);
    }
    if (ForwardPeer != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ForwardPeer);
    }
    if (HitBoxIndex != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(HitBoxIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(EvtBulletHitNotify other) {
    if (other == null) {
      return;
    }
    if (other.ForwardType != global::ForwardType.Local) {
      ForwardType = other.ForwardType;
    }
    if (other.SingleBulletId != 0) {
      SingleBulletId = other.SingleBulletId;
    }
    if (other.hitNormal_ != null) {
      if (hitNormal_ == null) {
        HitNormal = new global::Vector();
      }
      HitNormal.MergeFrom(other.HitNormal);
    }
    if (other.HitEntityId != 0) {
      HitEntityId = other.HitEntityId;
    }
    if (other.hitPoint_ != null) {
      if (hitPoint_ == null) {
        HitPoint = new global::Vector();
      }
      HitPoint.MergeFrom(other.HitPoint);
    }
    if (other.HitColliderType != global::HitColliderType.Invalid) {
      HitColliderType = other.HitColliderType;
    }
    if (other.EntityId != 0) {
      EntityId = other.EntityId;
    }
    if (other.ForwardPeer != 0) {
      ForwardPeer = other.ForwardPeer;
    }
    if (other.HitBoxIndex != 0) {
      HitBoxIndex = other.HitBoxIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HitBoxIndex = input.ReadInt32();
          break;
        }
        case 16: {
          ForwardType = (global::ForwardType) input.ReadEnum();
          break;
        }
        case 24: {
          ForwardPeer = input.ReadUInt32();
          break;
        }
        case 32: {
          SingleBulletId = input.ReadUInt32();
          break;
        }
        case 48: {
          HitEntityId = input.ReadUInt32();
          break;
        }
        case 66: {
          if (hitPoint_ == null) {
            HitPoint = new global::Vector();
          }
          input.ReadMessage(HitPoint);
          break;
        }
        case 74: {
          if (hitNormal_ == null) {
            HitNormal = new global::Vector();
          }
          input.ReadMessage(HitNormal);
          break;
        }
        case 80: {
          HitColliderType = (global::HitColliderType) input.ReadEnum();
          break;
        }
        case 112: {
          EntityId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          HitBoxIndex = input.ReadInt32();
          break;
        }
        case 16: {
          ForwardType = (global::ForwardType) input.ReadEnum();
          break;
        }
        case 24: {
          ForwardPeer = input.ReadUInt32();
          break;
        }
        case 32: {
          SingleBulletId = input.ReadUInt32();
          break;
        }
        case 48: {
          HitEntityId = input.ReadUInt32();
          break;
        }
        case 66: {
          if (hitPoint_ == null) {
            HitPoint = new global::Vector();
          }
          input.ReadMessage(HitPoint);
          break;
        }
        case 74: {
          if (hitNormal_ == null) {
            HitNormal = new global::Vector();
          }
          input.ReadMessage(HitNormal);
          break;
        }
        case 80: {
          HitColliderType = (global::HitColliderType) input.ReadEnum();
          break;
        }
        case 112: {
          EntityId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
