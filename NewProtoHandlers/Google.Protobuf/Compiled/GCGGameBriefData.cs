// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCGGameBriefData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NewProtos {

  /// <summary>Holder for reflection information generated from GCGGameBriefData.proto</summary>
  public static partial class GCGGameBriefDataReflection {

    #region Descriptor
    /// <summary>File descriptor for GCGGameBriefData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCGGameBriefDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZHQ0dHYW1lQnJpZWZEYXRhLnByb3RvGhlHQ0dHYW1lQnVzaW5lc3NUeXBl",
            "LnByb3RvGhhHQ0dQbGF5ZXJCcmllZkRhdGEucHJvdG8ivgEKEEdDR0dhbWVC",
            "cmllZkRhdGESEwoLdmVyaWZ5X2NvZGUYDSABKA0SKwoNYnVzaW5lc3NfdHlw",
            "ZRgIIAEoDjIULkdDR0dhbWVCdXNpbmVzc1R5cGUSEAoIZ2FtZV91aWQYDiAB",
            "KA0SFQoNcGxhdGZvcm1fdHlwZRgGIAEoDRIPCgdnYW1lX2lkGAwgASgNEi4K",
            "EXBsYXllcl9icmllZl9saXN0GAUgAygLMhMuR0NHUGxheWVyQnJpZWZEYXRh",
            "QgyqAglOZXdQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NewProtos.GCGGameBusinessTypeReflection.Descriptor, global::NewProtos.GCGPlayerBriefDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NewProtos.GCGGameBriefData), global::NewProtos.GCGGameBriefData.Parser, new[]{ "VerifyCode", "BusinessType", "GameUid", "PlatformType", "GameId", "PlayerBriefList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GCGGameBriefData : pb::IMessage<GCGGameBriefData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GCGGameBriefData> _parser = new pb::MessageParser<GCGGameBriefData>(() => new GCGGameBriefData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GCGGameBriefData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NewProtos.GCGGameBriefDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGGameBriefData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGGameBriefData(GCGGameBriefData other) : this() {
      verifyCode_ = other.verifyCode_;
      businessType_ = other.businessType_;
      gameUid_ = other.gameUid_;
      platformType_ = other.platformType_;
      gameId_ = other.gameId_;
      playerBriefList_ = other.playerBriefList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCGGameBriefData Clone() {
      return new GCGGameBriefData(this);
    }

    /// <summary>Field number for the "verify_code" field.</summary>
    public const int VerifyCodeFieldNumber = 13;
    private uint verifyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VerifyCode {
      get { return verifyCode_; }
      set {
        verifyCode_ = value;
      }
    }

    /// <summary>Field number for the "business_type" field.</summary>
    public const int BusinessTypeFieldNumber = 8;
    private global::NewProtos.GCGGameBusinessType businessType_ = global::NewProtos.GCGGameBusinessType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::NewProtos.GCGGameBusinessType BusinessType {
      get { return businessType_; }
      set {
        businessType_ = value;
      }
    }

    /// <summary>Field number for the "game_uid" field.</summary>
    public const int GameUidFieldNumber = 14;
    private uint gameUid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameUid {
      get { return gameUid_; }
      set {
        gameUid_ = value;
      }
    }

    /// <summary>Field number for the "platform_type" field.</summary>
    public const int PlatformTypeFieldNumber = 6;
    private uint platformType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PlatformType {
      get { return platformType_; }
      set {
        platformType_ = value;
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 12;
    private uint gameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint GameId {
      get { return gameId_; }
      set {
        gameId_ = value;
      }
    }

    /// <summary>Field number for the "player_brief_list" field.</summary>
    public const int PlayerBriefListFieldNumber = 5;
    private static readonly pb::FieldCodec<global::NewProtos.GCGPlayerBriefData> _repeated_playerBriefList_codec
        = pb::FieldCodec.ForMessage(42, global::NewProtos.GCGPlayerBriefData.Parser);
    private readonly pbc::RepeatedField<global::NewProtos.GCGPlayerBriefData> playerBriefList_ = new pbc::RepeatedField<global::NewProtos.GCGPlayerBriefData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::NewProtos.GCGPlayerBriefData> PlayerBriefList {
      get { return playerBriefList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GCGGameBriefData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GCGGameBriefData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VerifyCode != other.VerifyCode) return false;
      if (BusinessType != other.BusinessType) return false;
      if (GameUid != other.GameUid) return false;
      if (PlatformType != other.PlatformType) return false;
      if (GameId != other.GameId) return false;
      if(!playerBriefList_.Equals(other.playerBriefList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VerifyCode != 0) hash ^= VerifyCode.GetHashCode();
      if (BusinessType != global::NewProtos.GCGGameBusinessType.None) hash ^= BusinessType.GetHashCode();
      if (GameUid != 0) hash ^= GameUid.GetHashCode();
      if (PlatformType != 0) hash ^= PlatformType.GetHashCode();
      if (GameId != 0) hash ^= GameId.GetHashCode();
      hash ^= playerBriefList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerBriefList_.WriteTo(output, _repeated_playerBriefList_codec);
      if (PlatformType != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PlatformType);
      }
      if (BusinessType != global::NewProtos.GCGGameBusinessType.None) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BusinessType);
      }
      if (GameId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(GameId);
      }
      if (VerifyCode != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(VerifyCode);
      }
      if (GameUid != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(GameUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerBriefList_.WriteTo(ref output, _repeated_playerBriefList_codec);
      if (PlatformType != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PlatformType);
      }
      if (BusinessType != global::NewProtos.GCGGameBusinessType.None) {
        output.WriteRawTag(64);
        output.WriteEnum((int) BusinessType);
      }
      if (GameId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(GameId);
      }
      if (VerifyCode != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(VerifyCode);
      }
      if (GameUid != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(GameUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VerifyCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VerifyCode);
      }
      if (BusinessType != global::NewProtos.GCGGameBusinessType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BusinessType);
      }
      if (GameUid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameUid);
      }
      if (PlatformType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlatformType);
      }
      if (GameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameId);
      }
      size += playerBriefList_.CalculateSize(_repeated_playerBriefList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GCGGameBriefData other) {
      if (other == null) {
        return;
      }
      if (other.VerifyCode != 0) {
        VerifyCode = other.VerifyCode;
      }
      if (other.BusinessType != global::NewProtos.GCGGameBusinessType.None) {
        BusinessType = other.BusinessType;
      }
      if (other.GameUid != 0) {
        GameUid = other.GameUid;
      }
      if (other.PlatformType != 0) {
        PlatformType = other.PlatformType;
      }
      if (other.GameId != 0) {
        GameId = other.GameId;
      }
      playerBriefList_.Add(other.playerBriefList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            playerBriefList_.AddEntriesFrom(input, _repeated_playerBriefList_codec);
            break;
          }
          case 48: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 64: {
            BusinessType = (global::NewProtos.GCGGameBusinessType) input.ReadEnum();
            break;
          }
          case 96: {
            GameId = input.ReadUInt32();
            break;
          }
          case 104: {
            VerifyCode = input.ReadUInt32();
            break;
          }
          case 112: {
            GameUid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 42: {
            playerBriefList_.AddEntriesFrom(ref input, _repeated_playerBriefList_codec);
            break;
          }
          case 48: {
            PlatformType = input.ReadUInt32();
            break;
          }
          case 64: {
            BusinessType = (global::NewProtos.GCGGameBusinessType) input.ReadEnum();
            break;
          }
          case 96: {
            GameId = input.ReadUInt32();
            break;
          }
          case 104: {
            VerifyCode = input.ReadUInt32();
            break;
          }
          case 112: {
            GameUid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
