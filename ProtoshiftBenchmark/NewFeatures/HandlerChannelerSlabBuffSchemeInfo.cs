// <auto-generated>
//     Generated by csharp-Protoshift.HandlerGenerator. 
// </auto-generated>

#region Designer Generated Code
using csharp_Protoshift.Enhanced.Handlers;
using Google.Protobuf;

namespace csharp_Protoshift.Enhanced.Benchmark.Experimental
{
    public class HandlerChannelerSlabBuffSchemeInfo_Special
        : HandlerBase<NewProtos.ChannelerSlabBuffSchemeInfo, OldProtos.ChannelerSlabBuffSchemeInfo>
    {
        #region Base Type
        MessageParser<NewProtos.ChannelerSlabBuffSchemeInfo> newproto_parser_base = NewProtos.ChannelerSlabBuffSchemeInfo.Parser;
        MessageParser<OldProtos.ChannelerSlabBuffSchemeInfo> oldproto_parser_base = OldProtos.ChannelerSlabBuffSchemeInfo.Parser;
        #endregion
        #region Import Types
        #endregion

        public const int MapParallelHandle_Count = 0;

        #region Protocol Shift
        public override OldProtos.ChannelerSlabBuffSchemeInfo NewShiftToOld(NewProtos.ChannelerSlabBuffSchemeInfo newprotocol)
        {
            OldProtos.ChannelerSlabBuffSchemeInfo oldprotocol = new();
            // Not found match CommonResult in old: [ Field Type: uint32, Field Name: Unk3300_NCMDDAFNENO, Is Repeated: False, Is Import Type: False ]
            // Not found match CommonResult in old: [ Field Type: uint32, Field Name: Unk3300_CKMNFOCNMGL, Is Repeated: False, Is Import Type: False ]
            oldprotocol.SlotMap.MergeFrom(newprotocol.SlotMap);
            return oldprotocol;
        }

        public override NewProtos.ChannelerSlabBuffSchemeInfo OldShiftToNew(OldProtos.ChannelerSlabBuffSchemeInfo oldprotocol)
        {
            NewProtos.ChannelerSlabBuffSchemeInfo newprotocol = new();
            // Not found match CommonResult in new: [ Field Type: uint32, Field Name: total_energy, Is Repeated: False, Is Import Type: False ]
            // Not found match CommonResult in new: [ Field Type: uint32, Field Name: self_energy, Is Repeated: False, Is Import Type: False ]
            newprotocol.SlotMap.MergeFrom(oldprotocol.SlotMap);
            return newprotocol;
        }
        #endregion

        public override byte[] NewShiftToOld(byte[] arr, int offset, int length)
            => NewShiftToOld(newproto_parser_base.ParseFrom(arr, offset, length)).ToByteArray();
        public override byte[] NewShiftToOld(ReadOnlySpan<byte> span)
            => NewShiftToOld(newproto_parser_base.ParseFrom(span)).ToByteArray();
        public override ByteString NewShiftToOld(ByteString bytes)
            => NewShiftToOld(newproto_parser_base.ParseFrom(bytes).ToByteString());
        public override byte[] OldShiftToNew(byte[] arr, int offset, int length)
            => OldShiftToNew(oldproto_parser_base.ParseFrom(arr, offset, length)).ToByteArray();
        public override byte[] OldShiftToNew(ReadOnlySpan<byte> span)
            => OldShiftToNew(oldproto_parser_base.ParseFrom(span)).ToByteArray();
        public override ByteString OldShiftToNew(ByteString bytes)
            => OldShiftToNew(oldproto_parser_base.ParseFrom(bytes).ToByteString());

        private static HandlerChannelerSlabBuffSchemeInfo_Special _globalOnlyInstance = new HandlerChannelerSlabBuffSchemeInfo_Special();
        public static HandlerChannelerSlabBuffSchemeInfo_Special GlobalInstance => _globalOnlyInstance;

        #region Inner Messages
        #endregion

        #region Inner Enums
        #endregion
    }
}
#endregion Designer generated code
