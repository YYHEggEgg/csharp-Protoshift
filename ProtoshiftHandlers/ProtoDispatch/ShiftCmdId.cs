// <auto-generated>
//     Generated by csharp-Protoshift.HandlerGenerator.
// </auto-generated>

#region Designer Generated Code
namespace csharp_Protoshift.Enhanced.Handlers.GeneratedCode
{
    public static class ShiftCmdId
    {
        public static uint NewShiftToOld(uint Newcmdid, ReadOnlySpan<byte> head)
        {
            switch (Newcmdid)
            {
                case 5: return 94; // GmTalkNotify
                case 7: return 93; // UpdateRedPointNotify
                case 16: return 39; // CheckSegmentCRCNotify
                case 17: return 27; // ChangeServerGlobalValueNotify
                case 19: return 35; // ShowMessageNotify
                case 25: return 81; // ClientReportNotify
                case 27: return 31; // ServerLogNotify
                case 30: return 98; // GmTalkReq
                case 37: return 22; // WorldPlayerRTTNotify
                case 39: return 75; // ClientReconnectNotify
                case 42: return 5; // UnionCmdNotify
                case 43: return 21; // PingRsp
                case 44: return 4; // ClientBulletCreateNotify
                case 47: return 90; // GetOnlinePlayerListReq
                case 56: return 12; // GmTalkRsp
                case 57: return 99; // ServerTimeNotify
                case 73: return 53; // CheckSegmentCRCReq
                case 76: return 47; // GetOnlinePlayerInfoRsp
                case 78: return 73; // GetOnlinePlayerListRsp
                case 79: return 72; // KeepAliveNotify
                case 89: return 65; // EchoNotify
                case 90: return 82; // GetOnlinePlayerInfoReq
                case 94: return 88; // LastPacketPrintNotify
                case 99: return 97; // RobotPushPlayerDataNotify
                case 100: return 7; // PingReq
                case 101: // DON'T MODIFY THIS LINE - request special handle
                    try
                    {
                    #if PACKET_HEAD_PROTO_DEFINED
                    var packetHead = NewProtos.PacketHead.Parser.ParseFrom(head);
                    if (packetHead == null) return OldProtos.AskCmdId.GetCmdIdFromProtoname("DailyTaskFilterCityReq");
                    if (packetHead.EnetChannelId == 2) return OldProtos.AskCmdId.GetCmdIdFromProtoname("DebugNotify");
                    else
                    #endif
                    return OldProtos.AskCmdId.GetCmdIdFromProtoname("DailyTaskFilterCityReq");
                    }
                    catch (NotSupportedException ex)
                    {
                    throw new NotSupportedException("The target cmdid is unknown.", ex);
                    }
                    // DON'T MODIFY THIS LINE - end special handle
                case 102: return 120; // GetNextResourceInfoRsp
                case 103: return 163; // PlayerRandomCookRsp
                case 104: return 200; // PlayerLevelRewardUpdateNotify
                case 105: return 194; // PlayerCookReq
                case 106: return 128; // CompoundUnlockNotify
                case 107: return 193; // OpenStateUpdateNotify
                case 108: return 118; // ItemGivingRsp
                case 109: return 166; // PlayerCookArgsReq
                case 110: return 106; // CookRecipeDataNotify
                case 111: return 142; // PlayerSetLanguageReq
                case 112: return 164; // AdjustWorldLevelReq
                case 113: return 123; // GetGameplayRecommendationRsp
                case 115: return 149; // GetCompoundDataRsp
                case 116: return 139; // PlayerPropChangeNotify
                case 117: return 127; // OpenStateChangeNotify
                case 118: return 101; // ExclusiveRuleNotify
                case 119: return 135; // PlayerLoginRsp
                case 120: return 129; // TakePlayerLevelRewardReq
                case 121: return 191; // PlayerTimeNotify
                case 122: return 124; // PlayerSetPauseReq
                case 123: return 116; // GivingRecordNotify
                case 124: return 158; // DailyTaskDataNotify
                case 125: return 181; // SetPlayerPropRsp
                case 126: return 189; // PlayerForceExitReq
                case 127: return 131; // PlayerGameTimeNotify
                case 128: return 171; // TakeBackGivingItemReq
                case 129: return 125; // PlayerCompoundMaterialBoostRsp
                case 130: return 198; // GetPlayerTokenRsp
                case 131: return 138; // AdjustWorldLevelRsp
                case 132: return 177; // ReadNicknameAuditReq
                case 133: return 195; // CookDataNotify
                case 134: return 174; // TakeCompoundOutputReq
                case 136: return 160; // TaskVarNotify
                case 137: return 122; // SetPlayerNameRsp
                case 138: return 144; // DailyTaskFilterCityRsp
                case 139: return 175; // PlayerPropNotify
                case 141: return 114; // ClientLockGameTimeNotify
                case 142: return 105; // SetPlayerBornDataReq
                case 143: return 121; // PlayerLogoutRsp
                case 144: return 104; // SetOpenStateRsp
                case 146: return 150; // PlayerCompoundMaterialReq
                case 147: return 190; // PlayerDataNotify
                case 148: return 148; // ClientTriggerEventNotify
                case 149: return 170; // DailyTaskProgressNotify
                case 150: return 130; // PlayerSetLanguageRsp
                case 151: return 109; // PlayerNicknameNotify
                case 152: return 184; // ServerDisconnectClientNotify
                case 153: return 167; // DataResVersionNotify
                case 154: return 119; // AddRandTaskInfoNotify
                case 155: return 151; // GetGameplayRecommendationReq
                case 156: return 112; // PlayerLoginReq
                case 157: return 199; // ChangeGameTimeRsp
                case 159: return 185; // PlayerCompoundMaterialBoostReq
                case 161: return 103; // PlayerLogoutNotify
                case 162: return 108; // PlayerNicknameAuditDataNotify
                case 163: return 157; // TakePlayerLevelRewardRsp
                case 164: return 146; // CompoundDataNotify
                case 165: return 132; // PlayerInjectFixNotify
                case 166: return 133; // PlayerLuaShellNotify
                case 167: return 141; // GetCompoundDataReq
                case 168: return 137; // ReadNicknameAuditRsp
                case 169: return 186; // DailyTaskUnlockedCitiesNotify
                case 171: return 152; // NicknameAuditConfigNotify
                case 172: return 126; // PlayerRandomCookReq
                case 173: return 153; // SetPlayerNameReq
                case 174: return 180; // AntiAddictNotify
                case 175: return 143; // PlayerCompoundMaterialRsp
                case 176: return 147; // DoSetPlayerBornDataNotify
                case 177: return 159; // PlayerForceExitRsp
                case 178: return 173; // ChangeGameTimeReq
                case 179: return 172; // GetPlayerTokenReq
                case 180: return 134; // CookGradeDataNotify
                case 182: return 156; // PlayerSetPauseRsp
                case 185: return 140; // ItemGivingReq
                case 186: return 178; // PlayerGameTimeByLuaNotify
                case 187: return 187; // GivingRecordChangeNotify
                case 188: return 168; // PlayerCookArgsRsp
                case 189: return 165; // SetOpenStateReq
                case 190: return 182; // SetPlayerBornDataRsp
                case 191: return 117; // DailyTaskScoreRewardNotify
                case 193: return 102; // WorldOwnerDailyTaskNotify
                case 194: return 188; // PlayerCookRsp
                case 195: return 176; // TakeCompoundOutputRsp
                case 196: return 145; // TakeBackGivingItemRsp
                case 197: return 192; // GetNextResourceInfoReq
                case 198: return 161; // RemoveRandTaskInfoNotify
                case 199: return 197; // SetPlayerPropReq
                case 200: return 107; // PlayerLogoutReq
                case 201: return 211; // SceneKickPlayerNotify
                case 202: return 220; // JoinPlayerSceneRsp
                case 203: return 263; // SceneDestroyEntityReq
                case 204: return 300; // ExecuteGroupTriggerRsp
                case 205: return 294; // SceneEntityDrownRsp
                case 206: return 228; // SeeMonsterReq
                case 207: return 293; // SceneAreaUnlockNotify
                case 208: return 218; // PlatformStartRouteNotify
                case 209: return 266; // PlatformStopRouteNotify
                case 210: return 206; // SceneForceUnlockNotify
                case 211: return 242; // ExitSceneWeatherAreaNotify
                case 212: return 264; // SceneKickPlayerReq
                case 213: return 223; // AddSeenMonsterNotify
                case 214: return 254; // SetSceneWeatherAreaReq
                case 215: return 249; // GetAreaExplorePointRsp
                case 216: return 239; // SceneTransToPointReq
                case 217: return 227; // SceneEntityDrownReq
                case 218: return 201; // BackMyWorldRsp
                case 219: return 235; // SceneInitFinishReq
                case 221: return 291; // ClientTransmitReq
                case 222: return 224; // ClientTransmitRsp
                case 223: return 216; // LevelupCityReq
                case 224: return 258; // WorldPlayerLocationNotify
                case 225: return 281; // GetScenePointRsp
                case 226: return 289; // SealBattleBeginNotify
                case 227: return 231; // SceneAvatarStaminaStepRsp
                case 228: return 271; // AllSeenMonsterNotify
                case 229: return 225; // WorldPlayerReviveReq
                case 230: return 298; // LeaveSceneReq
                case 231: return 238; // SceneKickPlayerRsp
                case 232: return 277; // EnterSceneDoneReq
                case 233: return 295; // SceneDestroyEntityRsp
                case 234: return 274; // EntityForceSyncReq
                case 235: return 269; // ExecuteGadgetLuaReq
                case 236: return 260; // ClientPauseNotify
                case 237: return 222; // EntityJumpNotify
                case 238: return 244; // HitClientTrivialNotify
                case 239: return 275; // SceneEntityMoveNotify
                case 240: return 210; // ExecuteGadgetLuaRsp
                case 241: return 214; // PlayerEnterSceneInfoNotify
                case 242: return 205; // EnterTransPointRegionNotify
                case 243: return 221; // SceneEntityAppearNotify
                case 244: return 204; // GetSceneAreaRsp
                case 245: return 255; // SceneEntitiesMovesRsp
                case 246: return 250; // EnterWorldAreaReq
                case 247: return 290; // SceneEntityMoveReq
                case 248: return 248; // ScenePlayerLocationNotify
                case 249: return 270; // BeginCameraSceneLookNotify
                case 250: return 230; // SceneAreaWeatherNotify
                case 251: return 209; // EnterSceneReadyRsp
                case 252: return 284; // PersonalSceneJumpReq
                case 253: return 267; // ScenePlayerInfoNotify
                case 254: return 219; // UnmarkEntityInMinMapNotify
                case 255: return 251; // SeeMonsterRsp
                case 256: return 212; // LeaveSceneRsp
                case 257: return 299; // SceneAvatarStaminaStepReq
                case 258: return 236; // JoinPlayerFailNotify
                case 259: return 285; // WorldPlayerDieNotify
                case 260: return 213; // ClientScriptEventNotify
                case 261: return 203; // SceneEntityDisappearNotify
                case 262: return 208; // EnterSceneReadyReq
                case 263: return 257; // ExecuteGroupTriggerReq
                case 265: return 232; // SealBattleProgressNotify
                case 266: return 233; // ScenePlayerSoundNotify
                case 267: return 241; // GetAreaExplorePointReq
                case 268: return 237; // EnterSceneDoneRsp
                case 269: return 286; // BackMyWorldReq
                case 270: return 283; // SetSceneWeatherAreaRsp
                case 271: return 252; // EnterScenePeerNotify
                case 272: return 226; // SceneCreateEntityRsp
                case 273: return 253; // SceneTransToPointRsp
                case 274: return 280; // PersonalSceneJumpRsp
                case 275: return 243; // EnterWorldAreaRsp
                case 276: return 247; // ScenePointUnlockNotify
                case 277: return 259; // SealBattleEndNotify
                case 278: return 273; // SceneEntityMoveRsp
                case 279: return 272; // PlayerEnterSceneNotify
                case 280: return 234; // SceneForceLockNotify
                case 281: return 215; // CutSceneEndNotify
                case 282: return 256; // EnterSceneWeatherAreaNotify
                case 283: return 296; // CutSceneBeginNotify
                case 284: return 262; // CutSceneFinishNotify
                case 285: return 240; // SceneRouteChangeNotify
                case 286: return 278; // WorldPlayerReviveRsp
                case 287: return 287; // LevelupCityRsp
                case 288: return 268; // PlatformChangeRouteNotify
                case 289: return 265; // GetSceneAreaReq
                case 290: return 282; // ExitTransPointRegionNotify
                case 291: return 217; // EndCameraSceneLookNotify
                case 292: return 279; // SceneEntitiesMovesReq
                case 293: return 202; // MarkEntityInMinMapNotify
                case 294: return 288; // SceneCreateEntityReq
                case 295: return 276; // EntityForceSyncRsp
                case 296: return 245; // SceneTimeNotify
                case 297: return 292; // JoinPlayerSceneReq
                case 299: return 297; // GetScenePointReq
                case 300: return 207; // SceneInitFinishRsp
                case 303: return 363; // MonsterAlertChangeNotify
                case 304: return 400; // EntityAiSyncNotify
                case 305: return 394; // EntityAuthorityChangeNotify
                case 307: return 393; // EvtAvatarExitFocusNotify
                case 308: return 318; // EvtAvatarLockChairReq
                case 309: return 366; // EvtAvatarLockChairRsp
                case 311: return 342; // CreateMassiveEntityReq
                case 317: return 327; // EvtAvatarUpdateFocusNotify
                case 319: return 335; // EvtDoSkillSuccNotify
                case 320: return 329; // EvtAiSyncCombatThreatInfoNotify
                case 322: return 324; // EvtAvatarSitDownNotify
                case 323: return 316; // LuaSetOptionNotify
                case 324: return 358; // DestroyMassiveEntityNotify
                case 325: return 381; // EvtEntityStartDieEndNotify
                case 327: return 331; // EvtAnimatorStateChangedNotify
                case 330: return 398; // EvtAnimatorParameterNotify
                case 333: return 395; // MonsterForceAlertNotify
                case 334: return 374; // AnimatorForceSetAirMoveNotify
                case 339: return 375; // EvtRushMoveNotify
                case 343: return 321; // EvtDestroyGadgetNotify
                case 344: return 304; // EvtAvatarEnterFocusNotify
                case 346: return 350; // TriggerCreateGadgetToEquipPartNotify
                case 347: return 390; // EvtFaceToDirNotify
                case 348: return 348; // EvtBulletHitNotify
                case 349: return 370; // MassiveEntityStateChangedNotify
                case 350: return 330; // CreateMassiveEntityRsp
                case 352: return 384; // EvtLocalGadgetOwnerLeaveSceneNotify
                case 353: return 367; // CreateMassiveEntityNotify
                case 354: return 319; // CombatInvocationsNotify
                case 356: return 312; // HostPlayerNotify
                case 357: return 399; // EvtSetAttackTargetNotify
                case 361: return 303; // EvtFaceToEntityNotify
                case 363: return 357; // MassiveEntityElementOpBatchNotify
                case 364: return 346; // EvtBeingHitsCombineNotify
                case 366: return 333; // EvtBeingHealedNotify
                case 372: return 326; // AvatarBuffDelNotify
                case 375: return 343; // EvtEntityRenderersChangedNotify
                case 378: return 373; // EvtCostStaminaNotify
                case 379: return 372; // EvtBeingHitNotify
                case 380: return 334; // AvatarEnterElementViewNotify
                case 382: return 356; // EvtAvatarStandUpNotify
                case 385: return 340; // EntityAiKillSelfNotify
                case 387: return 387; // EvtDestroyServerGadgetNotify
                case 388: return 368; // ReportFightAntiCheatNotify
                case 389: return 365; // EvtBulletMoveNotify
                case 391: return 317; // SyncTeamEntityNotify
                case 393: return 302; // DelTeamEntityNotify
                case 394: return 388; // AvatarBuffAddNotify
                case 395: return 376; // EvtAiSyncSkillCdNotify
                case 398: return 361; // ServerBuffChangeNotify
                case 399: return 397; // EvtBulletDeactiveNotify
                case 400: return 307; // EvtCreateGadgetNotify
                case 403: return 463; // GetAllActivatedBargainDataReq
                case 404: return 500; // SubmitInferenceWordReq
                case 405: return 494; // BargainTerminateNotify
                case 407: return 493; // BargainOfferPriceReq
                case 410: return 406; // ServerCondMeetQuestListUpdateNotify
                case 411: return 442; // PersonalLineNewUnlockNotify
                case 415: return 449; // UnlockPersonalLineReq
                case 416: return 439; // QuestUpdateQuestVarRsp
                case 417: return 427; // BargainOfferPriceRsp
                case 419: return 435; // FinishedParentQuestNotify
                case 420: return 429; // AssociateInferenceWordReq
                case 421: return 491; // UnlockPersonalLineRsp
                case 422: return 424; // CancelFinishParentQuestNotify
                case 423: return 416; // SubmitInferenceWordRsp
                case 424: return 458; // GetQuestLackingResourceRsp
                case 427: return 431; // QuestCreateEntityRsp
                case 430: return 498; // QuestListUpdateNotify
                case 433: return 495; // GetAllActivatedBargainDataRsp
                case 434: return 474; // PersonalLineAllDataReq
                case 437: return 422; // QuestDestroyNpcReq
                case 439: return 475; // QuestDestroyEntityReq
                case 442: return 405; // ChapterStateNotify
                case 443: return 421; // AddQuestContentProgressReq
                case 444: return 404; // BargainStartNotify
                case 446: return 450; // QuestTransmitReq
                case 447: return 490; // GetQuestTalkHistoryReq
                case 448: return 448; // QuestDestroyEntityRsp
                case 449: return 470; // GetParentQuestVideoKeyReq
                case 450: return 430; // NpcTalkStateNotify
                case 453: return 467; // GetQuestLackingResourceReq
                case 454: return 419; // InterpretInferenceWordReq
                case 456: return 412; // QuestDelNotify
                case 457: return 499; // QuestCreateEntityReq
                case 461: return 403; // AddQuestContentProgressRsp
                case 463: return 457; // AssociateInferenceWordRsp
                case 464: return 446; // RedeemLegendaryKeyReq
                case 467: return 441; // RedeemLegendaryKeyRsp
                case 472: return 426; // GetBargainDataRsp
                case 473: return 453; // QuestUpdateQuestVarNotify
                case 475: return 443; // QuestTransmitRsp
                case 476: return 447; // QuestUpdateQuestVarReq
                case 478: return 473; // GetQuestTalkHistoryRsp
                case 479: return 472; // QuestListNotify
                case 480: return 434; // QuestGlobalVarNotify
                case 482: return 456; // QuestUpdateQuestTimeVarNotify
                case 485: return 440; // QuestRenameAvatarRsp
                case 487: return 487; // QuestRenameAvatarReq
                case 489: return 465; // QuestDestroyNpcRsp
                case 490: return 482; // QuestProgressUpdateNotify
                case 491: return 417; // GetParentQuestVideoKeyRsp
                case 493: return 402; // ParentQuestInferenceDataNotify
                case 494: return 488; // GetBargainDataReq
                case 495: return 476; // PersonalLineAllDataRsp
                case 498: return 461; // InterpretInferenceWordRsp
                case 500: return 407; // FinishedParentQuestUpdateNotify
                case 519: return 535; // GetSceneNpcPositionReq
                case 530: return 598; // NpcTalkRsp
                case 543: return 521; // MetNpcIdListNotify
                case 547: return 590; // MeetNpcRsp
                case 561: return 503; // MeetNpcReq
                case 578: return 573; // FinishedTalkIdListNotify
                case 579: return 572; // NpcTalkReq
                case 600: return 507; // GetSceneNpcPositionRsp
                case 601: return 611; // ReliquaryDecomposeRsp
                case 602: return 620; // SetIsAutoUnlockSpecificEquipReq
                case 603: return 663; // GrantRewardNotify
                case 604: return 700; // MaterialDeleteUpdateNotify
                case 605: return 694; // ReliquaryPromoteRsp
                case 607: return 693; // ReliquaryUpgradeRsp
                case 608: return 618; // DestroyMaterialRsp
                case 609: return 666; // SetEquipLockStateReq
                case 610: return 606; // WeaponAwakenRsp
                case 611: return 642; // ResinChangeNotify
                case 612: return 664; // SetIsAutoUnlockSpecificEquipRsp
                case 615: return 649; // ForgeStartReq
                case 616: return 639; // WeaponUpgradeReq
                case 617: return 627; // ReliquaryPromoteReq
                case 619: return 635; // StoreItemDelNotify
                case 620: return 629; // TakeMaterialDeleteReturnReq
                case 621: return 691; // ForgeStartRsp
                case 622: return 624; // ForgeQueueManipulateReq
                case 623: return 616; // McoinExchangeHcoinReq
                case 625: return 681; // WearEquipRsp
                case 626: return 689; // ForgeFormulaDataNotify
                case 627: return 631; // DropItemRsp
                case 630: return 698; // StoreWeightLimitNotify
                case 631: return 638; // ReliquaryDecomposeReq
                case 633: return 695; // WeaponAwakenReq
                case 634: return 674; // CombineRsp
                case 637: return 622; // WeaponPromoteReq
                case 638: return 644; // ReliquaryFilterStateSaveNotify
                case 641: return 614; // ClosedItemNotify
                case 642: return 605; // TakeoffEquipReq
                case 644: return 604; // ReliquaryUpgradeReq
                case 646: return 650; // DropHintNotify
                case 647: return 690; // UseItemReq
                case 652: return 684; // CalcWeaponUpgradeReturnItemsRsp
                case 654: return 619; // BuyResinRsp
                case 656: return 612; // StoreItemChangeNotify
                case 657: return 699; // DropItemReq
                case 663: return 657; // TakeMaterialDeleteReturnRsp
                case 664: return 646; // ForgeGetQueueDataReq
                case 665: return 632; // CombineFormulaDataNotify
                case 666: return 633; // CalcWeaponUpgradeReturnItemsReq
                case 667: return 641; // ForgeGetQueueDataRsp
                case 669: return 686; // ReliquaryFilterStateNotify
                case 672: return 626; // AvatarCardChangeRsp
                case 673: return 653; // WeaponUpgradeRsp
                case 674: return 680; // ForgeDataNotify
                case 675: return 643; // CombineReq
                case 676: return 647; // AvatarEquipChangeNotify
                case 677: return 659; // CombineDataNotify
                case 678: return 673; // UseItemRsp
                case 679: return 672; // PlayerStoreNotify
                case 680: return 634; // ItemCdGroupTimeNotify
                case 682: return 656; // ForgeQueueManipulateRsp
                case 685: return 640; // DestroyMaterialReq
                case 687: return 687; // McoinExchangeHcoinRsp
                case 688: return 668; // SetEquipLockStateRsp
                case 689: return 665; // WeaponPromoteRsp
                case 690: return 682; // TakeoffEquipRsp
                case 693: return 602; // BuyResinReq
                case 694: return 688; // AvatarCardChangeReq
                case 695: return 676; // ForgeQueueDataNotify
                case 697: return 692; // CheckAddItemExceedLimitNotify
                case 698: return 661; // MaterialDeleteReturnNotify
                case 699: return 697; // WearEquipReq
                case 700: return 607; // ItemAddHintNotify
                case 719: return 735; // BuyGoodsRsp
                case 730: return 798; // GetShopRsp
                case 743: return 721; // GetShopmallDataRsp
                case 747: return 790; // GetActivityShopSheetInfoRsp
                case 756: return 712; // BuyGoodsReq
                case 757: return 799; // BatchBuyGoodsRsp
                case 761: return 703; // GetActivityShopSheetInfoReq
                case 778: return 773; // BatchBuyGoodsReq
                case 779: return 772; // GetShopReq
                case 800: return 707; // GetShopmallDataReq
                case 803: return 863; // ProjectorOptionReq
                case 805: return 894; // RequestLiveInfoReq
                case 807: return 893; // CreateVehicleReq
                case 810: return 806; // LiveEndNotify
                case 816: return 839; // GadgetTalkChangeNotify
                case 817: return 827; // CreateVehicleRsp
                case 819: return 835; // WorktopOptionNotify
                case 825: return 881; // UpdateAbilityCreatedMovingPlatformNotify
                case 827: return 831; // GadgetPlayDataNotify
                case 830: return 898; // GadgetInteractRsp
                case 833: return 895; // ProjectorOptionRsp
                case 834: return 874; // GadgetChangeLevelTagRsp
                case 837: return 822; // GadgetChainLevelChangeNotify
                case 839: return 875; // GadgetPlayUidOpNotify
                case 842: return 805; // FoundationReq
                case 843: return 821; // SelectWorktopOptionRsp
                case 844: return 804; // VehicleInteractRsp
                case 846: return 850; // GadgetCustomTreeInfoNotify
                case 847: return 890; // BlossomChestInfoNotify
                case 848: return 848; // GadgetGeneralRewardInfoNotify
                case 856: return 812; // GadgetStateNotify
                case 857: return 899; // GadgetPlayStopNotify
                case 861: return 803; // BossChestActivateNotify
                case 864: return 846; // NightCrowGadgetObservationMatchRsp
                case 867: return 841; // DeshretObeliskChestInfoNotify
                case 872: return 826; // LiveStartNotify
                case 873: return 853; // GadgetChainLevelUpdateNotify
                case 875: return 843; // GadgetChangeLevelTagReq
                case 876: return 847; // FoundationNotify
                case 878: return 873; // GadgetPlayStartNotify
                case 879: return 872; // GadgetInteractReq
                case 880: return 834; // VehicleStaminaNotify
                case 889: return 865; // VehicleInteractReq
                case 890: return 882; // FoundationRsp
                case 894: return 888; // RequestLiveInfoRsp
                case 895: return 876; // NightCrowGadgetObservationMatchReq
                case 899: return 897; // GadgetAutoPickDropInfoNotify
                case 900: return 807; // SelectWorktopOptionReq
                case 903: return 963; // DungeonCandidateTeamDismissNotify
                case 904: return 1000; // DungeonRestartInviteReplyReq
                case 905: return 994; // DungeonCandidateTeamInviteNotify
                case 907: return 993; // ChallengeRecordNotify
                case 908: return 918; // DungeonCandidateTeamSetChangingAvatarReq
                case 909: return 966; // DungeonCandidateTeamSetChangingAvatarRsp
                case 910: return 906; // DungeonCandidateTeamCreateRsp
                case 911: return 942; // DungeonCandidateTeamChangeAvatarRsp
                case 915: return 949; // DungeonCandidateTeamReplyInviteRsp
                case 916: return 939; // DungeonChallengeFinishNotify
                case 917: return 927; // DungeonCandidateTeamInfoNotify
                case 919: return 935; // PlayerEnterDungeonRsp
                case 920: return 929; // DungeonRestartRsp
                case 921: return 991; // DungeonCandidateTeamSetReadyReq
                case 922: return 924; // DungeonCandidateTeamSetReadyRsp
                case 923: return 916; // DungeonRestartInviteReplyRsp
                case 924: return 958; // DungeonSlipRevivePointActivateReq
                case 925: return 981; // DungeonPlayerDieReq
                case 927: return 931; // DungeonPlayerDieNotify
                case 930: return 998; // DungeonEntryInfoRsp
                case 933: return 995; // DungeonCandidateTeamCreateReq
                case 934: return 974; // DungeonCandidateTeamKickRsp
                case 937: return 922; // DungeonFollowNotify
                case 939: return 975; // DungeonDieOptionReq
                case 942: return 905; // DungeonPlayerDieRsp
                case 943: return 921; // PlayerQuitDungeonRsp
                case 944: return 904; // DungeonGetStatueDropRsp
                case 946: return 950; // DungeonCandidateTeamInviteRsp
                case 947: return 990; // DungeonWayPointActivateReq
                case 948: return 948; // DungeonDieOptionRsp
                case 949: return 970; // DungeonSlipRevivePointActivateRsp
                case 950: return 930; // GetDailyDungeonEntryInfoReq
                case 953: return 967; // GetDailyDungeonEntryInfoRsp
                case 954: return 919; // InteractDailyDungeonInfoNotify
                case 956: return 912; // PlayerEnterDungeonReq
                case 957: return 999; // DungeonSettleNotify
                case 961: return 903; // DungeonWayPointNotify
                case 963: return 957; // DungeonRestartInviteNotify
                case 964: return 946; // DungeonCandidateTeamLeaveRsp
                case 966: return 933; // DungeonReviseLevelNotify
                case 967: return 941; // DungeonCandidateTeamReplyInviteReq
                case 972: return 926; // DungeonCandidateTeamPlayerLeaveNotify
                case 973: return 953; // ChallengeDataNotify
                case 975: return 943; // DungeonCandidateTeamKickReq
                case 976: return 947; // DungeonChallengeBeginNotify
                case 978: return 973; // DungeonWayPointActivateRsp
                case 979: return 972; // DungeonEntryInfoReq
                case 980: return 934; // DungeonCandidateTeamInviteReq
                case 982: return 956; // DungeonCandidateTeamChangeAvatarReq
                case 985: return 940; // DungeonRestartResultNotify
                case 987: return 987; // DungeonRestartInviteReplyNotify
                case 988: return 968; // MistTrialFloorLevelNotify
                case 989: return 965; // DungeonGetStatueDropReq
                case 990: return 982; // DungeonDataNotify
                case 991: return 917; // DungeonInterruptChallengeReq
                case 993: return 902; // DungeonInterruptChallengeRsp
                case 994: return 988; // DungeonCandidateTeamRefuseNotify
                case 995: return 976; // DungeonCandidateTeamLeaveReq
                case 998: return 961; // DungeonRestartReq
                case 999: return 997; // DungeonShowReminderNotify
                case 1000: return 907; // PlayerQuitDungeonReq
                case 1019: return 1035; // AvatarSkillDepotChangeNotify
                case 1025: return 1081; // ProudSkillExtraLevelNotify
                case 1027: return 1031; // ProudSkillChangeNotify
                case 1030: return 1098; // UnlockAvatarTalentRsp
                case 1039: return 1075; // AvatarSkillUpgradeReq
                case 1042: return 1005; // CanUseSkillNotify
                case 1043: return 1021; // BigTalentPointConvertRsp
                case 1047: return 1090; // AvatarSkillInfoNotify
                case 1048: return 1048; // AvatarSkillUpgradeRsp
                case 1056: return 1012; // AvatarUnlockTalentNotify
                case 1057: return 1099; // ProudSkillUpgradeRsp
                case 1061: return 1003; // AvatarSkillMaxChargeCountNotify
                case 1078: return 1073; // ProudSkillUpgradeReq
                case 1079: return 1072; // UnlockAvatarTalentReq
                case 1090: return 1082; // TeamResonanceChangeNotify
                case 1099: return 1097; // AvatarSkillChangeNotify
                case 1100: return 1007; // BigTalentPointConvertReq
                case 1119: return 1135; // ClientAbilityInitFinishNotify
                case 1125: return 1181; // ClientAIStateNotify
                case 1127: return 1131; // AbilityChangeNotify
                case 1130: return 1198; // AbilityInvocationsNotify
                case 1139: return 1175; // ClientAbilityChangeNotify
                case 1142: return 1105; // ServerCombatEndNotify
                case 1148: return 1148; // ServerUpdateGlobalValueNotify
                case 1156: return 1112; // ClientAbilityInitBeginNotify
                case 1157: return 1199; // WindSeedClientNotify
                case 1161: return 1103; // ClientAbilitiesInitFinishCombineNotify
                case 1176: return 1147; // PerformOperationNotify
                case 1179: return 1172; // AbilityInvocationFixedNotify
                case 1190: return 1182; // ClientRemoveCombatEndModifierNotify
                case 1199: return 1197; // ServerGlobalValueChangeNotify
                case 1200: return 1107; // AbilityInvocationFailNotify
                case 1219: return 1235; // EntityFightPropUpdateNotify
                case 1227: return 1231; // AvatarPropNotify
                case 1230: return 1298; // LifeStateChangeNotify
                case 1239: return 1275; // MarkNewNotify
                case 1243: return 1221; // AvatarFightPropUpdateNotify
                case 1247: return 1290; // AvatarLifeStateChangeNotify
                case 1256: return 1212; // EntityFightPropNotify
                case 1257: return 1299; // PlayerPropChangeReasonNotify
                case 1261: return 1203; // EntityFightPropChangeReasonNotify
                case 1278: return 1273; // AvatarPropChangeReasonNotify
                case 1279: return 1272; // EntityPropNotify
                case 1300: return 1207; // AvatarFightPropNotify
                case 1379: return 1372; // MonsterSummonTagNotify
                case 1419: return 1435; // GetMailItemReq
                case 1425: return 1481; // GetAllMailResultNotify
                case 1427: return 1431; // GetAllMailReq
                case 1430: return 1498; // MailChangeNotify
                case 1439: return 1475; // GetAllMailRsp
                case 1443: return 1421; // DelMailReq
                case 1447: return 1490; // GetAuthkeyReq
                case 1448: return 1448; // ChangeMailStarNotify
                case 1456: return 1412; // ReadMailNotify
                case 1457: return 1499; // ClientNewMailNotify
                case 1461: return 1403; // DelMailRsp
                case 1478: return 1473; // GetAuthkeyRsp
                case 1499: return 1497; // GetAllMailNotify
                case 1500: return 1407; // GetMailItemRsp
                case 1519: return 1535; // DoGachaRsp
                case 1530: return 1598; // GetGachaInfoRsp
                case 1543: return 1521; // GachaWishRsp
                case 1547: return 1590; // GachaSimpleInfoNotify
                case 1556: return 1512; // DoGachaReq
                case 1561: return 1503; // GachaOpenWishNotify
                case 1579: return 1572; // GetGachaInfoReq
                case 1600: return 1507; // GachaWishReq
                case 1604: return 1694; // AvatarDieAnimationEndRsp
                case 1607: return 1633; // AvatarDataNotify
                case 1609: return 1645; // AvatarChangeCostumeRsp
                case 1610: return 1655; // AddNoGachaAvatarCardNotify
                case 1613: return 1698; // AvatarWearFlycloakRsp
                case 1615: return 1749; // AvatarTeamAllDataNotify
                case 1616: return 1687; // AddBackupAvatarTeamReq
                case 1617: return 1782; // AvatarFetterDataNotify
                case 1620: return 1647; // AvatarChangeAnimHashRsp
                case 1621: return 1648; // AvatarExpeditionAllDataRsp
                case 1622: return 1646; // SetUpAvatarTeamRsp
                case 1624: return 1684; // PersistentDungeonSwitchAvatarReq
                case 1625: return 1677; // AvatarGainCostumeNotify
                case 1632: return 1771; // AvatarExpeditionDataNotify
                case 1636: return 1737; // AvatarWearFlycloakReq
                case 1640: return 1623; // AvatarExpeditionGetRewardReq
                case 1642: return 1653; // AvatarFetterLevelRewardReq
                case 1645: return 1708; // ChangeMpTeamAvatarReq
                case 1646: return 1719; // AvatarExpeditionStartRsp
                case 1651: return 1748; // SpringUseReq
                case 1653: return 1770; // AvatarUpgradeReq
                case 1658: return 1683; // AvatarPromoteGetRewardRsp
                case 1665: return 1644; // AvatarChangeCostumeNotify
                case 1666: return 1729; // DelBackupAvatarTeamRsp
                case 1676: return 1656; // AvatarGainFlycloakNotify
                case 1677: return 1768; // PersistentDungeonSwitchAvatarRsp
                case 1682: return 1640; // ChangeAvatarReq
                case 1684: return 1696; // AvatarPromoteGetRewardReq
                case 1685: return 1722; // AvatarExpeditionAllDataReq
                case 1688: return 1750; // ItemRenameAvatarReq
                case 1695: return 1610; // AvatarDieAnimationEndReq
                case 1696: return 1666; // ChangeTeamNameRsp
                case 1697: return 1715; // AvatarExpeditionStartReq
                case 1698: return 1731; // DelBackupAvatarTeamReq
                case 1699: return 1607; // ChangeAvatarRsp
                case 1700: return 1635; // ItemRenameAvatarRsp
                case 1702: return 1726; // AvatarExpeditionCallBackRsp
                case 1706: return 1603; // ChangeTeamNameReq
                case 1707: return 1778; // AvatarChangeCostumeReq
                case 1708: return 1662; // AvatarEquipAffixStartNotify
                case 1710: return 1639; // AvatarPromoteRsp
                case 1713: return 1690; // SetUpAvatarTeamReq
                case 1715: return 1784; // AvatarExpeditionGetRewardRsp
                case 1717: return 1651; // AvatarChangeElementTypeRsp
                case 1728: return 1775; // SceneTeamUpdateNotify
                case 1730: return 1753; // ChangeMpTeamAvatarRsp
                case 1731: return 1664; // AvatarPromoteReq
                case 1738: return 1796; // ChooseCurAvatarTeamReq
                case 1739: return 1706; // AvatarTeamUpdateNotify
                case 1744: return 1800; // RefreshBackgroundAvatarRsp
                case 1753: return 1606; // AvatarFetterLevelRewardRsp
                case 1757: return 1769; // AvatarAddNotify
                case 1765: return 1743; // RefreshBackgroundAvatarReq
                case 1766: return 1693; // AvatarSatiationDataNotify
                case 1767: return 1711; // AvatarChangeAnimHashReq
                case 1769: return 1773; // AvatarDelNotify
                case 1772: return 1642; // SpringUseRsp
                case 1777: return 1752; // AvatarExpeditionCallBackReq
                case 1778: return 1661; // ChooseCurAvatarTeamRsp
                case 1779: return 1785; // AvatarChangeElementTypeReq
                case 1782: return 1735; // AddBackupAvatarTeamRsp
                case 1786: return 1681; // FocusAvatarRsp
                case 1790: return 1643; // AvatarFlycloakChangeNotify
                case 1792: return 1701; // AvatarUpgradeRsp
                case 1793: return 1654; // FocusAvatarReq
                case 1797: return 1680; // AvatarRenameInfoNotify
                case 1801: return 1833; // MpPlayPrepareNotify
                case 1802: return 1814; // MpPlayOwnerCheckReq
                case 1804: return 1850; // MpPlayGuestReplyInviteRsp
                case 1806: return 1801; // MpBlockNotify
                case 1808: return 1841; // PSPlayerApplyEnterMpReq
                case 1809: return 1837; // MpPlayOwnerStartInviteReq
                case 1810: return 1812; // MpPlayGuestReplyNotify
                case 1812: return 1844; // GetPlayerMpModeAvailabilityReq
                case 1815: return 1820; // PlayerSetOnlyMPWithPSPlayerReq
                case 1817: return 1822; // PlayerPreEnterMpNotify
                case 1818: return 1845; // PlayerSetOnlyMPWithPSPlayerRsp
                case 1821: return 1835; // MpPlayOwnerInviteNotify
                case 1822: return 1825; // PlayerApplyEnterMpRsp
                case 1827: return 1802; // PlayerApplyEnterMpResultReq
                case 1830: return 1823; // MpPlayOwnerStartInviteRsp
                case 1831: return 1831; // PlayerApplyEnterMpResultRsp
                case 1834: return 1849; // GetPlayerMpModeAvailabilityRsp
                case 1835: return 1807; // PlayerApplyEnterMpResultNotify
                case 1837: return 1848; // MpPlayGuestReplyInviteReq
                case 1839: return 1815; // MpPlayInviteResultNotify
                case 1841: return 1818; // PlayerApplyEnterMpReq
                case 1842: return 1826; // PlayerApplyEnterMpNotify
                case 1843: return 1847; // MpPlayOwnerCheckRsp
                case 1844: return 1829; // PlayerQuitFromMpNotify
                case 1845: return 1842; // PSPlayerApplyEnterMpRsp
                case 1850: return 1813; // MpPlayPrepareInterruptNotify
                case 1901: return 1910; // GetInvestigationMonsterRsp
                case 1902: return 1929; // PlayerInvestigationTargetNotify
                case 1903: return 1918; // TakeInvestigationTargetRewardReq
                case 1905: return 1916; // TakeInvestigationTargetRewardRsp
                case 1907: return 1922; // TakeInvestigationRewardRsp
                case 1908: return 1902; // InvestigationReadQuestDailyNotify
                case 1910: return 1906; // InvestigationMonsterUpdateNotify
                case 1915: return 1911; // PlayerInvestigationNotify
                case 1916: return 1928; // PlayerInvestigationAllInfoNotify
                case 1921: return 1915; // MarkTargetInvestigationMonsterNotify
                case 1924: return 1912; // TakeInvestigationRewardReq
                case 1926: return 1921; // InvestigationQuestDailyNotify
                case 1930: return 1901; // GetInvestigationMonsterReq
                case 1951: return 1983; // CoopCgShowNotify
                case 1952: return 1964; // StartCoopPointRsp
                case 1954: return 2000; // SaveCoopDialogReq
                case 1956: return 1951; // MainCoopFailNotify
                case 1958: return 1991; // CoopPointUpdateNotify
                case 1959: return 1987; // CancelCoopTaskRsp
                case 1960: return 1962; // SaveCoopDialogRsp
                case 1962: return 1994; // CoopCgUpdateNotify
                case 1965: return 1970; // UnlockCoopChapterReq
                case 1967: return 1972; // CoopChapterUpdateNotify
                case 1968: return 1995; // UnlockCoopChapterRsp
                case 1971: return 1985; // TakeCoopRewardRsp
                case 1972: return 1975; // SaveMainCoopReq
                case 1977: return 1952; // FinishMainCoopReq
                case 1980: return 1973; // TakeCoopRewardReq
                case 1981: return 1981; // FinishMainCoopRsp
                case 1984: return 1999; // CoopRewardUpdateNotify
                case 1985: return 1957; // SaveMainCoopRsp
                case 1987: return 1998; // CoopProgressUpdateNotify
                case 1989: return 1965; // SetCoopChapterViewedReq
                case 1991: return 1968; // MainCoopUpdateNotify
                case 1992: return 1976; // AllCoopInfoNotify
                case 1993: return 1997; // CancelCoopTaskReq
                case 1994: return 1979; // CoopDataNotify
                case 1995: return 1992; // StartCoopPointReq
                case 2000: return 1963; // SetCoopChapterViewedRsp
                case 2003: return 2177; // SeaLampTakeContributionRewardRsp
                case 2005: return 2049; // SetCurExpeditionChallengeIdRsp
                case 2006: return 2176; // SeaLampTakePhaseRewardReq
                case 2008: return 2136; // GetActivityScheduleReq
                case 2009: return 2045; // BlessingAcceptAllGivePicReq
                case 2010: return 2055; // BlessingAcceptGivePicRsp
                case 2011: return 2095; // GetActivityInfoReq
                case 2012: return 2071; // ActivitySaleChangeNotify
                case 2013: return 2098; // BlessingRedeemRewardRsp
                case 2015: return 2149; // ExpeditionTakeRewardReq
                case 2016: return 2087; // ExpeditionStartReq
                case 2018: return 2008; // ActivityCoinInfoNotify
                case 2019: return 2097; // TakeAsterSpecialRewardReq
                case 2021: return 2048; // TreasureMapMpChallengeNotify
                case 2022: return 2046; // EffigyChallengeResultNotify
                case 2023: return 2146; // AsterLargeInfoNotify
                case 2026: return 2110; // SalesmanTakeRewardRsp
                case 2027: return 2154; // ExpeditionChallengeEnterRegionNotify
                case 2028: return 2021; // SetCurExpeditionChallengeIdReq
                case 2030: return 2089; // FinishDeliveryNotify
                case 2032: return 2171; // TreasureMapCurrencyNotify
                case 2035: return 2065; // DragonSpineChapterProgressChangeNotify
                case 2036: return 2137; // BlessingRedeemRewardReq
                case 2042: return 2053; // BlessingGiveFriendPicRsp
                case 2043: return 2041; // GetActivityInfoRsp
                case 2044: return 2124; // SalesmanTakeSpecialRewardRsp
                case 2046: return 2119; // TreasureMapGuideTaskDoneNotify
                case 2049: return 2070; // GetAuthSalesmanInfoReq
                case 2051: return 2148; // RestartEffigyChallengeReq
                case 2052: return 2028; // ActivitySelectAvatarCardReq
                case 2055: return 2031; // AsterMidInfoNotify
                case 2056: return 2107; // GetActivityScheduleRsp
                case 2057: return 2138; // SalesmanDeliverItemReq
                case 2058: return 2083; // BlessingGetAllRecvPicRecordListRsp
                case 2059: return 2157; // ActivityPlayOpenAnimNotify
                case 2060: return 2134; // SelectAsterMidDifficultyReq
                case 2061: return 2052; // FleurFairReplayMiniGameRsp
                case 2063: return 2186; // TrialAvatarInDungeonIndexNotify
                case 2064: return 2092; // ServerAnnounceRevokeNotify
                case 2065: return 2044; // BlessingAcceptAllGivePicRsp
                case 2066: return 2129; // ExpeditionRecallRsp
                case 2067: return 2145; // SalesmanTakeSpecialRewardReq
                case 2069: return 2191; // SalesmanTakeRewardReq
                case 2070: return 2167; // FleurFairMusicGameStartReq
                case 2073: return 2038; // ActivityTakeWatcherRewardReq
                case 2074: return 2091; // ExpeditionChallengeFinishedNotify
                case 2075: return 2121; // TakeDeliveryDailyRewardReq
                case 2076: return 2056; // BlessingGetFriendPicListRsp
                case 2082: return 2040; // TakeEffigyRewardReq
                case 2084: return 2096; // BlessingGetAllRecvPicRecordListReq
                case 2085: return 2122; // TreasureMapRegionActiveNotify
                case 2086: return 2088; // DragonSpineCoinChangeNotify
                case 2087: return 2004; // GetAuthSalesmanInfoRsp
                case 2088: return 2150; // GetExpeditionAssistInfoListReq
                case 2089: return 2029; // LoadActivityTerrainNotify
                case 2090: return 2109; // ActivityTakeWatcherRewardBatchRsp
                case 2091: return 2016; // AsterProgressInfoNotify
                case 2097: return 2115; // TreasureMapBonusChallengeNotify
                case 2098: return 2131; // ExpeditionRecallReq
                case 2099: return 2007; // TakeEffigyRewardRsp
                case 2100: return 2035; // GetExpeditionAssistInfoListRsp
                case 2101: return 2180; // SelectAsterMidDifficultyRsp
                case 2103: return 2156; // ActivityUpdateWatcherNotify
                case 2105: return 2190; // SeaLampTakePhaseRewardRsp
                case 2107: return 2178; // BlessingRecvFriendPicNotify
                case 2108: return 2062; // BlessingGiveFriendPicReq
                case 2109: return 2034; // ActivityTakeWatcherRewardRsp
                case 2110: return 2039; // SelectEffigyChallengeConditionRsp
                case 2111: return 2194; // FleurFairMusicGameSettleReq
                case 2113: return 2090; // EffigyChallengeInfoNotify
                case 2114: return 2105; // SeaLampFlyLampNotify
                case 2116: return 2139; // SeaLampContributeItemRsp
                case 2119: return 2060; // ActivityInfoNotify
                case 2120: return 2025; // WaterSpritePhaseFinishNotify
                case 2121: return 2068; // AsterLittleInfoNotify
                case 2123: return 2022; // DragonSpineChapterOpenNotify
                case 2124: return 2073; // ActivityScheduleInfoNotify
                case 2127: return 2181; // FleurFairReplayMiniGameReq
                case 2129: return 2197; // ServerAnnounceNotify
                case 2131: return 2064; // SelectEffigyChallengeConditionReq
                case 2132: return 2193; // TakeAsterSpecialRewardRsp
                case 2133: return 2123; // SeaLampContributeItemReq
                case 2134: return 2013; // TrialAvatarFirstPassDungeonNotify
                case 2135: return 2032; // SeaLampPopularityNotify
                case 2136: return 2017; // FleurFairFallSettleNotify
                case 2138: return 2196; // TakeEffigyFirstPassRewardReq
                case 2140: return 2036; // AsterMiscInfoNotify
                case 2142: return 2118; // EnterTrialAvatarActivityDungeonReq
                case 2143: return 2195; // FlightActivitySettleNotify
                case 2146: return 2079; // FleurFairMusicGameStartRsp
                case 2147: return 2009; // ActivityBannerClearReq
                case 2149: return 2069; // DragonSpineChapterFinishNotify
                case 2151: return 2104; // SalesmanDeliverItemRsp
                case 2152: return 2037; // FlightActivityRestartReq
                case 2153: return 2006; // BlessingAcceptGivePicReq
                case 2154: return 2189; // ActivitySelectAvatarCardRsp
                case 2155: return 2130; // ReceivedTrialAvatarActivityRewardReq
                case 2156: return 2113; // FleurFairMusicGameSettleRsp
                case 2157: return 2169; // StartEffigyChallengeReq
                case 2158: return 2165; // FlightActivityRestartRsp
                case 2159: return 2099; // FleurFairBalloonSettleNotify
                case 2160: return 2155; // ActivityBannerNotify
                case 2161: return 2192; // SeaLampFlyLampRsp
                case 2164: return 2030; // ArenaChallengeFinishNotify
                case 2166: return 2093; // BlessingScanRsp
                case 2169: return 2173; // StartEffigyChallengeRsp
                case 2171: return 2125; // StartArenaChallengeLevelRsp
                case 2172: return 2042; // RestartEffigyChallengeRsp
                case 2174: return 2162; // TakeDeliveryDailyRewardRsp
                case 2175: return 2076; // ReceivedTrialAvatarActivityRewardRsp
                case 2176: return 2183; // EnterTrialAvatarActivityDungeonRsp
                case 2177: return 2152; // TreasureMapPreTaskDoneNotify
                case 2178: return 2061; // TakeEffigyFirstPassRewardRsp
                case 2179: return 2185; // TreasureMapRegionInfoNotify
                case 2182: return 2135; // ExpeditionStartRsp
                case 2184: return 2159; // ActivityTakeWatcherRewardBatchReq
                case 2186: return 2081; // BlessingScanReq
                case 2187: return 2199; // SeaLampFlyLampReq
                case 2188: return 2114; // SeaLampCoinNotify
                case 2190: return 2043; // BlessingGetFriendPicListReq
                case 2194: return 2140; // ActivityCondStateChangeNotify
                case 2195: return 2133; // AsterMidCampInfoNotify
                case 2196: return 2127; // StartArenaChallengeLevelReq
                case 2197: return 2080; // ExpeditionTakeRewardRsp
                case 2198: return 2163; // ActivityBannerClearRsp
                case 2199: return 2019; // SeaLampTakeContributionRewardReq
                case 2205: return 2294; // GetPushTipsRewardRsp
                case 2207: return 2293; // PushTipsReadFinishRsp
                case 2217: return 2227; // GetPushTipsRewardReq
                case 2219: return 2235; // WatcherEventTypeNotify
                case 2230: return 2298; // WatcherChangeNotify
                case 2237: return 2222; // PushTipsAllDataNotify
                case 2244: return 2204; // PushTipsReadFinishReq
                case 2256: return 2212; // WatcherEventNotify
                case 2279: return 2272; // WatcherAllDataNotify
                case 2289: return 2265; // PushTipsChangeNotify
                case 2300: return 2207; // WatcherEventStageNotify
                case 2304: return 2400; // GMShowNavMeshRsp
                case 2319: return 2335; // PathfindingPingNotify
                case 2320: return 2329; // GMShowObstacleRsp
                case 2323: return 2316; // NavMeshStatsNotify
                case 2330: return 2398; // QueryPathRsp
                case 2343: return 2321; // PathfindingEnterSceneRsp
                case 2356: return 2312; // ObstacleModifyNotify
                case 2363: return 2357; // GMShowNavMeshReq
                case 2379: return 2372; // QueryPathReq
                case 2398: return 2361; // GMShowObstacleReq
                case 2400: return 2307; // PathfindingEnterSceneReq
                case 2407: return 2493; // TowerGetFloorStarRewardRsp
                case 2410: return 2406; // TowerLevelStarCondNotify
                case 2419: return 2435; // TowerDailyRewardProgressChangeNotify
                case 2427: return 2431; // TowerEnterLevelReq
                case 2430: return 2498; // TowerFloorRecordChangeNotify
                case 2433: return 2495; // TowerLevelEndNotify
                case 2437: return 2422; // TowerSurrenderReq
                case 2439: return 2475; // TowerEnterLevelRsp
                case 2443: return 2421; // TowerTeamSelectReq
                case 2444: return 2404; // TowerGetFloorStarRewardReq
                case 2446: return 2450; // TowerRecordHandbookReq
                case 2447: return 2490; // TowerAllDataReq
                case 2448: return 2448; // TowerBuffSelectReq
                case 2456: return 2412; // TowerCurLevelRecordChangeNotify
                case 2461: return 2403; // TowerTeamSelectRsp
                case 2475: return 2443; // TowerRecordHandbookRsp
                case 2478: return 2473; // TowerAllDataRsp
                case 2479: return 2472; // TowerBriefDataNotify
                case 2480: return 2434; // TowerMiddleLevelChangeTeamNotify
                case 2489: return 2465; // TowerSurrenderRsp
                case 2499: return 2497; // TowerBuffSelectRsp
                case 2519: return 2535; // SignInInfoRsp
                case 2525: return 2581; // GetBonusActivityRewardReq
                case 2539: return 2575; // BonusActivityUpdateNotify
                case 2542: return 2505; // GetBonusActivityRewardRsp
                case 2543: return 2521; // GetSignInRewardRsp
                case 2548: return 2548; // BonusActivityInfoReq
                case 2556: return 2512; // SignInInfoReq
                case 2579: return 2572; // OpActivityStateNotify
                case 2599: return 2597; // BonusActivityInfoRsp
                case 2600: return 2507; // GetSignInRewardReq
                case 2602: return 2614; // BattlePassBuySuccNotify
                case 2608: return 2641; // SetBattlePassViewedReq
                case 2609: return 2637; // BuyBattlePassLevelRsp
                case 2612: return 2644; // GetBattlePassProductReq
                case 2617: return 2622; // TakeBattlePassMissionPointRsp
                case 2622: return 2625; // BattlePassMissionDelNotify
                case 2627: return 2602; // TakeBattlePassRewardReq
                case 2631: return 2631; // TakeBattlePassRewardRsp
                case 2634: return 2649; // GetBattlePassProductRsp
                case 2635: return 2607; // BattlePassCurScheduleUpdateNotify
                case 2641: return 2618; // BattlePassMissionUpdateNotify
                case 2642: return 2626; // BattlePassAllDataNotify
                case 2643: return 2647; // BuyBattlePassLevelReq
                case 2644: return 2629; // TakeBattlePassMissionPointReq
                case 2645: return 2642; // SetBattlePassViewedRsp
                case 2672: return 2675; // TakeAchievementRewardReq
                case 2677: return 2652; // TakeAchievementGoalRewardReq
                case 2681: return 2681; // TakeAchievementGoalRewardRsp
                case 2685: return 2657; // TakeAchievementRewardRsp
                case 2691: return 2668; // AchievementUpdateNotify
                case 2692: return 2676; // AchievementAllDataNotify
                case 2719: return 2735; // WorldOwnerBlossomBriefInfoNotify
                case 2730: return 2798; // GetBlossomBriefInfoListRsp
                case 2743: return 2721; // BlossomChestCreateNotify
                case 2756: return 2712; // BlossomBriefInfoNotify
                case 2761: return 2703; // OpenBlossomCircleCampGuideNotify
                case 2779: return 2772; // GetBlossomBriefInfoListReq
                case 2800: return 2707; // WorldOwnerBlossomScheduleInfoNotify
                case 2819: return 2835; // TakeCityReputationLevelRewardRsp
                case 2825: return 2881; // TakeCityReputationExploreRewardRsp
                case 2827: return 2831; // CancelCityReputationRequestRsp
                case 2830: return 2898; // GetCityReputationInfoRsp
                case 2839: return 2875; // GetCityReputationMapInfoReq
                case 2842: return 2805; // CityReputationDataNotify
                case 2843: return 2821; // TakeCityReputationParentQuestReq
                case 2847: return 2890; // AcceptCityReputationRequestReq
                case 2848: return 2848; // GetCityReputationMapInfoRsp
                case 2856: return 2812; // TakeCityReputationLevelRewardReq
                case 2857: return 2899; // CancelCityReputationRequestReq
                case 2861: return 2803; // TakeCityReputationParentQuestRsp
                case 2878: return 2873; // AcceptCityReputationRequestRsp
                case 2879: return 2872; // GetCityReputationInfoReq
                case 2899: return 2897; // TakeCityReputationExploreRewardReq
                case 2900: return 2807; // CityReputationLevelupNotify
                case 2901: return 2919; // TakeOfferingLevelRewardReq
                case 2902: return 2911; // TakeOfferingLevelRewardRsp
                case 2906: return 2908; // OfferingInteractRsp
                case 2911: return 2923; // PlayerOfferingDataNotify
                case 2915: return 2907; // PlayerOfferingReq
                case 2916: return 2917; // PlayerOfferingRsp
                case 2920: return 2918; // OfferingInteractReq
                case 3008: return 3235; // ForceDragAvatarNotify
                case 3009: return 3166; // SceneAudioNotify
                case 3010: return 3137; // GetScenePerformanceRsp
                case 3018: return 3019; // HitTreeNotify
                case 3034: return 3391; // GetWorldMpInfoReq
                case 3046: return 3426; // UnlockTransPointRsp
                case 3050: return 3039; // MonsterAIConfigHashNotify
                case 3056: return 3113; // CheckGroupReplacedReq
                case 3059: return 3129; // PlayerWorldSceneInfoListNotify
                case 3062: return 3475; // DeathZoneObserveNotify
                case 3064: return 3012; // SceneWeatherForecastRsp
                case 3065: return 3352; // ShowCommonTipsNotify
                case 3068: return 3345; // WidgetQuickHitTreeReq
                case 3079: return 3051; // PlayerEyePointStateNotify
                case 3083: return 3408; // LuaEnvironmentEffectNotify
                case 3087: return 3228; // PlayerChatRsp
                case 3094: return 3184; // PostEnterSceneRsp
                case 3099: return 3259; // RefreshEntityAuthNotify
                case 3106: return 3108; // GetMapAreaReq
                case 3115: return 3412; // SceneEntityUpdateNotify
                case 3119: return 3004; // StopReminderNotify
                case 3125: return 3031; // GuestBeginEnterSceneNotify
                case 3138: return 3344; // GroupUnloadNotify
                case 3150: return 3116; // WorldPlayerInfoNotify
                case 3192: return 3316; // EntityTagChangeNotify
                case 3196: return 3147; // DungeonEntryToBeExploreNotify
                case 3200: return 3035; // UnlockTransPointReq
                case 3204: return 3305; // ShowClientTutorialNotify
                case 3229: return 3144; // GuestPostEnterSceneNotify
                case 3237: return 3318; // DelScenePlayTeamEntityNotify
                case 3242: return 3295; // WorldChestOpenNotify
                case 3247: return 3017; // LeaveWorldNotify
                case 3250: return 3336; // WidgetQuickHitTreeRsp
                case 3256: return 3458; // AvatarFollowRouteNotify
                case 3258: return 3282; // ChangeWorldToSingleModeRsp
                case 3265: return 3010; // PlayerChatNotify
                case 3269: return 3487; // ClientLoadingCostumeVerificationNotify
                case 3272: return 3327; // GetMapMarkTipsRsp
                case 3273: return 3194; // CloseCommonTipsNotify
                case 3274: return 3323; // AreaPlayInfoNotify
                case 3275: return 3328; // GetMapAreaRsp
                case 3282: return 3466; // MarkMapReq
                case 3286: return 3312; // PostEnterSceneReq
                case 3287: return 3086; // ClientHashDebugNotify
                case 3296: return 3066; // ChangeWorldToSingleModeReq
                case 3300: return 3491; // ShowTemplateReminderNotify
                case 3305: return 3185; // PlayerChatReq
                case 3309: return 3496; // ChatHistoryNotify
                case 3310: return 3320; // GetWorldMpInfoRsp
                case 3318: return 3146; // SetEntityClientDataNotify
                case 3322: return 3283; // AllMarkPointNotify
                case 3332: return 3189; // EntityConfigHashNotify
                case 3337: return 3178; // EntityMoveRoomNotify
                case 3342: return 3160; // BeginCameraSceneLookWithTemplateNotify
                case 3346: return 3079; // MarkMapRsp
                case 3350: return 3110; // SceneWeatherForecastReq
                case 3364: return 3165; // GetDungeonEntryExploreConditionReq
                case 3368: return 3203; // SceneDataNotify
                case 3369: return 3005; // ShowClientGuideNotify
                case 3384: return 3410; // MonsterPointArrayRouteUpdateNotify
                case 3388: return 3274; // ScenePlayerBackgroundAvatarRefreshNotify
                case 3393: return 3333; // SyncScenePlayTeamEntityNotify
                case 3403: return 3419; // GetScenePerformanceReq
                case 3411: return 3152; // CheckGroupReplacedRsp
                case 3425: return 3269; // GetDungeonEntryExploreConditionRsp
                case 3436: return 3308; // WorldDataNotify
                case 3450: return 3367; // PlayerChatCDNotify
                case 3452: return 3387; // SceneEntitiesMoveCombineNotify
                case 3461: return 3006; // ChangeWorldToSingleModeNotify
                case 3468: return 3314; // LevelTagDataNotify
                case 3473: return 3463; // GetMapMarkTipsReq
                case 3483: return 3220; // UnfreezeGroupLimitNotify
                case 3485: return 3378; // MapAreaChangeNotify
                case 3489: return 3257; // GroupSuiteNotify
                case 3494: return 3145; // ForceDragBackTransferNotify
                case 3522: return 3525; // WorldRoutineTypeRefreshNotify
                case 3527: return 3502; // WorldRoutineTypeCloseNotify
                case 3535: return 3507; // WorldRoutineChangeNotify
                case 3541: return 3518; // WorldAllRoutineTypeNotify
                case 3542: return 3526; // PlayerRoutineDataNotify
                case 3919: return 3935; // MechanicusCoinNotify
                case 3925: return 3981; // MechanicusCandidateTeamCreateReq
                case 3927: return 3931; // EnterMechanicusDungeonReq
                case 3930: return 3998; // GetMechanicusInfoRsp
                case 3939: return 3975; // EnterMechanicusDungeonRsp
                case 3942: return 3905; // MechanicusCandidateTeamCreateRsp
                case 3943: return 3921; // MechanicusCloseNotify
                case 3947: return 3990; // MechanicusUnlockGearRsp
                case 3956: return 3912; // MechanicusSequenceOpenNotify
                case 3957: return 3999; // MechanicusLevelupGearRsp
                case 3961: return 3903; // MechanicusUnlockGearReq
                case 3978: return 3973; // MechanicusLevelupGearReq
                case 3979: return 3972; // GetMechanicusInfoReq
                case 4000: return 3907; // MechanicusOpenNotify
                case 4002: return 4020; // ReadSignatureAuditReq
                case 4003: return 4063; // RemoveBlacklistReq
                case 4004: return 4100; // ForceAddPlayerFriendRsp
                case 4005: return 4094; // GetAllUnlockNameCardRsp
                case 4007: return 4093; // SetNameCardRsp
                case 4008: return 4018; // GetPlayerAskFriendListReq
                case 4009: return 4066; // GetPlayerAskFriendListRsp
                case 4010: return 4006; // UnlockNameCardNotify
                case 4011: return 4042; // SetFriendRemarkNameReq
                case 4012: return 4064; // ReadSignatureAuditRsp
                case 4015: return 4049; // GetPlayerBlacklistReq
                case 4016: return 4039; // UpdatePS4FriendListNotify
                case 4017: return 4027; // GetAllUnlockNameCardReq
                case 4020: return 4029; // GetFriendShowNameCardInfoRsp
                case 4021: return 4091; // GetPlayerBlacklistRsp
                case 4022: return 4024; // PlayerReportReq
                case 4023: return 4016; // ProfilePictureChangeNotify
                case 4024: return 4058; // UpdatePlayerShowAvatarListRsp
                case 4025: return 4081; // SetPlayerSignatureReq
                case 4026: return 4089; // UpdatePS4FriendListReq
                case 4027: return 4031; // DeleteFriendReq
                case 4030: return 4098; // GetPlayerFriendListRsp
                case 4033: return 4095; // RemoveBlacklistRsp
                case 4034: return 4074; // TakeFirstShareRewardReq
                case 4036: return 4060; // PlayerSignatureAuditDataNotify
                case 4037: return 4022; // AddFriendNotify
                case 4039: return 4075; // DeleteFriendRsp
                case 4041: return 4014; // PlayerSignatureNotify
                case 4042: return 4005; // SetPlayerSignatureRsp
                case 4043: return 4021; // AskAddFriendRsp
                case 4044: return 4004; // SetNameCardReq
                case 4046: return 4050; // GetRecentMpPlayerListRsp
                case 4047: return 4090; // DealAddFriendRsp
                case 4048: return 4048; // SetPlayerBirthdayReq
                case 4049: return 4070; // GetFriendShowAvatarInfoReq
                case 4050: return 4030; // SetFriendRemarkNameRsp
                case 4052: return 4084; // SetChatEmojiCollectionReq
                case 4053: return 4067; // UpdatePlayerShowAvatarListReq
                case 4054: return 4019; // UpdatePlayerShowNameCardListRsp
                case 4057: return 4099; // GetPlayerSocialDetailRsp
                case 4061: return 4003; // DealAddFriendReq
                case 4063: return 4057; // ForceAddPlayerFriendReq
                case 4064: return 4046; // UpdatePS4BlockListReq
                case 4065: return 4032; // FriendInfoChangeNotify
                case 4066: return 4033; // GetChatEmojiCollectionRsp
                case 4067: return 4041; // UpdatePS4BlockListRsp
                case 4072: return 4026; // AddBlacklistRsp
                case 4073: return 4053; // DeleteFriendNotify
                case 4074: return 4080; // SetChatEmojiCollectionRsp
                case 4075: return 4043; // SocialDataNotify
                case 4076: return 4047; // SetPlayerHeadImageRsp
                case 4077: return 4059; // UpdatePS4FriendListRsp
                case 4078: return 4073; // GetPlayerSocialDetailReq
                case 4079: return 4072; // GetPlayerFriendListReq
                case 4080: return 4034; // GetRecentMpPlayerListReq
                case 4082: return 4056; // PlayerReportRsp
                case 4085: return 4040; // PSNBlackListNotify
                case 4087: return 4087; // PSNFriendListNotify
                case 4088: return 4068; // GetChatEmojiCollectionReq
                case 4089: return 4065; // AskAddFriendNotify
                case 4090: return 4082; // SetPlayerHeadImageReq
                case 4091: return 4017; // GetFriendShowAvatarInfoRsp
                case 4093: return 4002; // UpdatePlayerShowNameCardListReq
                case 4094: return 4088; // AddBlacklistReq
                case 4095: return 4076; // TakeFirstShareRewardRsp
                case 4097: return 4092; // SignatureAuditConfigNotify
                case 4098: return 4061; // GetFriendShowNameCardInfoReq
                case 4099: return 4097; // SetPlayerBirthdayRsp
                case 4100: return 4007; // AskAddFriendReq
                case 4112: return 4144; // TakeResinCardDailyRewardRsp
                case 4117: return 4122; // TakeResinCardDailyRewardReq
                case 4122: return 4125; // OrderFinishNotify
                case 4127: return 4102; // PlayerRechargeDataNotify
                case 4131: return 4131; // OrderDisplayNotify
                case 4134: return 4149; // ResinCardDataUpdateNotify
                case 4135: return 4107; // CardProductRewardNotify
                case 4141: return 4118; // RechargeRsp
                case 4142: return 4126; // RechargeReq
                case 4144: return 4129; // ReportTrackingIOInfoNotify
                case 4152: return 4164; // PlayerGetForceQuitBanInfoReq
                case 4158: return 4191; // PlayerGeneralMatchDismissNotify
                case 4159: return 4187; // ServerTryCancelGeneralMatchNotify
                case 4162: return 4194; // PlayerConfirmMatchRsp
                case 4165: return 4170; // PlayerMatchAgreedResultNotify
                case 4167: return 4172; // PlayerConfirmMatchReq
                case 4168: return 4195; // PlayerApplyEnterMpAfterMatchAgreedNotify
                case 4171: return 4185; // PlayerGCGMatchConfirmNotify
                case 4172: return 4175; // PlayerMatchInfoNotify
                case 4177: return 4152; // PlayerCancelMatchRsp
                case 4180: return 4173; // PlayerGCGMatchDismissNotify
                case 4181: return 4181; // PlayerMatchStopNotify
                case 4184: return 4199; // PlayerAllowEnterMpAfterAgreeMatchNotify
                case 4185: return 4157; // PlayerCancelMatchReq
                case 4191: return 4168; // PlayerStartMatchRsp
                case 4192: return 4176; // PlayerStartMatchReq
                case 4193: return 4197; // PlayerGetForceQuitBanInfoRsp
                case 4194: return 4179; // PlayerMatchSuccNotify
                case 4195: return 4192; // PlayerGeneralMatchConfirmNotify
                case 4201: return 4205; // CodexDataFullNotify
                case 4202: return 4209; // QueryCodexMonsterBeKilledNumRsp
                case 4203: return 4207; // CodexDataUpdateNotify
                case 4204: return 4203; // QueryCodexMonsterBeKilledNumReq
                case 4205: return 4206; // SetCodexPushtipsReadRsp
                case 4206: return 4202; // ViewCodexReq
                case 4209: return 4208; // SetCodexPushtipsReadReq
                case 4210: return 4201; // ViewCodexRsp
                case 4252: return 4264; // ClientCollectorDataNotify
                case 4254: return 4300; // TreasureMapDetectorDataNotify
                case 4255: return 4259; // SetWidgetSlotReq
                case 4257: return 4274; // WidgetGadgetDestroyNotify
                case 4258: return 4291; // WidgetReportReq
                case 4259: return 4287; // SkyCrystalDetectorDataUpdateNotify
                case 4261: return 4277; // SetWidgetSlotRsp
                case 4262: return 4294; // SetUpLunchBoxWidgetRsp
                case 4263: return 4261; // UseWidgetRetractGadgetRsp
                case 4264: return 4293; // UseWidgetCreateGadgetReq
                case 4265: return 4270; // QuickUseWidgetRsp
                case 4267: return 4272; // SetUpLunchBoxWidgetReq
                case 4268: return 4295; // WidgetCoolDownNotify
                case 4269: return 4255; // WidgetDoBagReq
                case 4270: return 4254; // GetWidgetSlotRsp
                case 4274: return 4253; // GetWidgetSlotReq
                case 4275: return 4286; // UseWidgetRetractGadgetReq
                case 4276: return 4266; // WidgetGadgetDataNotify
                case 4277: return 4252; // AnchorPointOpRsp
                case 4278: return 4267; // WidgetSlotChangeNotify
                case 4279: return 4256; // WidgetCaptureAnimalReq
                case 4284: return 4299; // QuickUseWidgetReq
                case 4285: return 4257; // AnchorPointOpReq
                case 4286: return 4271; // AllWidgetDataNotify
                case 4288: return 4284; // WidgetGadgetAllDataNotify
                case 4290: return 4258; // WidgetUseAttachAbilityGroupChangeNotify
                case 4292: return 4276; // AnchorPointDataNotify
                case 4293: return 4297; // OneoffGatherPointDetectorDataNotify
                case 4295: return 4292; // WidgetReportRsp
                case 4296: return 4289; // WidgetCaptureAnimalRsp
                case 4297: return 4280; // WidgetActiveChangeNotify
                case 4298: return 4290; // UseWidgetCreateGadgetRsp
                case 4299: return 4296; // WidgetDoBagRsp
                case 4308: return 4341; // HuntingGiveUpReq
                case 4312: return 4344; // HuntingRevealFinalNotify
                case 4315: return 4320; // HuntingFailNotify
                case 4317: return 4322; // HuntingRevealClueNotify
                case 4318: return 4345; // HuntingOngoingNotify
                case 4322: return 4325; // GetCityHuntingOfferReq
                case 4327: return 4302; // GetHuntingOfferRewardReq
                case 4331: return 4331; // GetHuntingOfferRewardRsp
                case 4334: return 4349; // HuntingSuccessNotify
                case 4335: return 4307; // GetCityHuntingOfferRsp
                case 4341: return 4318; // TakeHuntingOfferRsp
                case 4342: return 4326; // TakeHuntingOfferReq
                case 4344: return 4329; // HuntingStartNotify
                case 4345: return 4342; // HuntingGiveUpRsp
                case 4369: return 4385; // ScenePlayOwnerStartInviteReq
                case 4375: return 4431; // ScenePlayBattleInfoListNotify
                case 4377: return 4381; // ScenePlayInfoListNotify
                case 4380: return 4448; // ScenePlayOwnerCheckReq
                case 4389: return 4425; // ScenePlayBattleInterruptNotify
                case 4392: return 4355; // ScenePlayOutofRegionNotify
                case 4393: return 4371; // ScenePlayOwnerInviteNotify
                case 4397: return 4440; // ScenePlayGuestReplyInviteRsp
                case 4398: return 4398; // ScenePlayBattleResultNotify
                case 4406: return 4362; // ScenePlayOwnerCheckRsp
                case 4407: return 4449; // ScenePlayInviteResultNotify
                case 4411: return 4353; // ScenePlayGuestReplyInviteReq
                case 4428: return 4423; // ScenePlayGuestReplyNotify
                case 4429: return 4422; // ScenePlayBattleInfoNotify
                case 4449: return 4447; // ScenePlayBattleUidOpNotify
                case 4450: return 4357; // ScenePlayOwnerStartInviteRsp
                case 4451: return 4674; // HomeSceneInitFinishReq
                case 4456: return 4524; // HomeChooseModuleReq
                case 4457: return 4557; // GetHomeLevelUpRewardReq
                case 4460: return 4701; // HomePlantInfoRsp
                case 4462: return 4738; // HomePreviewBlueprintRsp
                case 4468: return 4641; // HomeUpdatePictureFrameInfoRsp
                case 4472: return 4554; // HomeSetBlueprintFriendOptionReq
                case 4475: return 4887; // HomeLimitedShopInfoNotify
                case 4478: return 4865; // FurnitureMakeHelpReq
                case 4486: return 4533; // PlayerApplyEnterHomeNotify
                case 4491: return 4798; // HomeSetBlueprintSlotOptionReq
                case 4492: return 4546; // HomeLimitedShopGoodsListRsp
                case 4495: return 4878; // HomePictureFrameInfoNotify
                case 4498: return 4662; // HomeGetBlueprintSlotInfoRsp
                case 4501: return 4502; // HomeDeleteBlueprintReq
                case 4504: return 4782; // FurnitureMakeRsp
                case 4506: return 4772; // TakeFurnitureMakeReq
                case 4507: return 4756; // FurnitureMakeHelpRsp
                case 4512: return 4593; // HomeSearchBlueprintRsp
                case 4518: return 4872; // HomeChangeBgmNotify
                case 4521: return 4768; // HomeResourceTakeFetterExpReq
                case 4525: return 4605; // HomeClearGroupRecordRsp
                case 4526: return 4743; // SetFriendEnterHomeOptionRsp
                case 4527: return 4528; // HomeSceneJumpReq
                case 4531: return 4505; // HomeSceneInitFinishRsp
                case 4532: return 4454; // UnlockedFurnitureSuiteDataNotify
                case 4533: return 4510; // HomeUpdateArrangementInfoReq
                case 4535: return 4453; // HomeAvtarAllFinishRewardNotify
                case 4537: return 4552; // HomeLimitedShopGoodsListReq
                case 4538: return 4498; // FurnitureCurModuleArrangeCountNotify
                case 4539: return 4619; // HomeCreateBlueprintReq
                case 4542: return 4706; // PlayerApplyEnterHomeResultRsp
                case 4545: return 4586; // HomeDeleteBlueprintRsp
                case 4551: return 4596; // HomeChangeModuleRsp
                case 4557: return 4599; // HomePriorCheckNotify
                case 4559: return 4809; // HomeChangeModuleReq
                case 4562: return 4817; // HomeAvatarSummonEventRsp
                case 4567: return 4678; // HomeGetFishFarmingInfoRsp
                case 4574: return 4760; // HomeLimitedShopBuyGoodsReq
                case 4580: return 4659; // GetHomeExchangeWoodInfoRsp
                case 4581: return 4633; // FurnitureMakeStartReq
                case 4582: return 4857; // HomeUpdateFishFarmingInfoRsp
                case 4583: return 4615; // HomeEnterEditModeFinishRsp
                case 4601: return 4848; // HomeGetArrangementInfoReq
                case 4603: return 4668; // HomeSaveArrangementNoChangeRsp
                case 4604: return 4811; // HomeBalloonGallerySettleNotify
                case 4606: return 4540; // HomeUpdateScenePointFishFarmingInfoRsp
                case 4607: return 4645; // HomeResourceTakeFetterExpRsp
                case 4613: return 4726; // HomeTransferReq
                case 4615: return 4604; // HomeSetBlueprintFriendOptionRsp
                case 4619: return 4527; // HomePlantWeedRsp
                case 4621: return 4786; // HomeSetBlueprintSlotOptionRsp
                case 4622: return 4885; // HomeBasicInfoNotify
                case 4629: return 4647; // HomePlantInfoReq
                case 4630: return 4750; // HomeLimitedShopBuyGoodsRsp
                case 4638: return 4648; // HomeChooseModuleRsp
                case 4646: return 4693; // PlayerApplyEnterHomeResultReq
                case 4647: return 4698; // HomeSceneJumpRsp
                case 4648: return 4482; // TryEnterHomeReq
                case 4649: return 4705; // HomeGetOnlineStatusRsp
                case 4652: return 4511; // HomeUpdateScenePointFishFarmingInfoReq
                case 4655: return 4597; // GetPlayerHomeCompInfoReq
                case 4657: return 4691; // HomeKickPlayerRsp
                case 4661: return 4559; // HomeChangeEditModeRsp
                case 4670: return 4808; // HomeAvatarSummonAllEventNotify
                case 4672: return 4704; // HomeSaveArrangementNoChangeReq
                case 4674: return 4560; // HomeModuleUnlockNotify
                case 4676: return 4683; // FurnitureMakeCancelRsp
                case 4679: return 4543; // HomeBlockNotify
                case 4684: return 4870; // HomeKickPlayerReq
                case 4688: return 4584; // HomeGetBlueprintSlotInfoReq
                case 4693: return 4821; // HomeModuleSeenRsp
                case 4694: return 4556; // HomePlantSeedRsp
                case 4704: return 4688; // HomeAvatarTalkReq
                case 4705: return 4889; // HomeSearchBlueprintReq
                case 4711: return 4616; // HomeTransferRsp
                case 4713: return 4833; // HomeAvatarRewardEventGetRsp
                case 4716: return 4846; // UnlockedFurnitureFormulaDataNotify
                case 4718: return 4464; // HomeAvatarTalkRsp
                case 4719: return 4564; // HomeChangeEditModeReq
                case 4720: return 4639; // HomePreChangeEditModeNotify
                case 4723: return 4583; // HomeSeekFurnitureGalleryScoreNotify
                case 4724: return 4656; // PlayerQuitFromHomeNotify
                case 4726: return 4555; // FurnitureMakeCancelReq
                case 4730: return 4711; // GetFurnitureCurModuleArrangeCountReq
                case 4734: return 4654; // HomeBalloonGalleryScoreNotify
                case 4736: return 4558; // HomeChangeBgmReq
                case 4739: return 4796; // HomeLimitedShopInfoRsp
                case 4743: return 4655; // HomeGetBasicInfoReq
                case 4745: return 4478; // HomePreviewBlueprintReq
                case 4749: return 4628; // OtherPlayerEnterHomeNotify
                case 4754: return 4551; // HomeAvatarRewardEventGetReq
                case 4756: return 4523; // HomeGetGroupRecordReq
                case 4757: return 4896; // HomeAvatarTalkFinishInfoNotify
                case 4762: return 4892; // HomeResourceNotify
                case 4763: return 4699; // HomeComfortInfoNotify
                case 4764: return 4486; // HomeUpdatePictureFrameInfoReq
                case 4766: return 4578; // FurnitureMakeBeHelpedNotify
                case 4767: return 4544; // HomeUpdateFishFarmingInfoReq
                case 4768: return 4804; // HomePlantSeedReq
                case 4769: return 4496; // HomeEditCustomFurnitureRsp
                case 4775: return 4748; // HomeAvatarCostumeChangeNotify
                case 4776: return 4757; // HomeUpdateArrangementInfoRsp
                case 4777: return 4473; // GetHomeExchangeWoodInfoReq
                case 4778: return 4724; // HomeEditCustomFurnitureReq
                case 4779: return 4541; // HomeResourceTakeHomeCoinRsp
                case 4790: return 4790; // HomeLimitedShopInfoChangeNotify
                case 4793: return 4468; // PlayerApplyEnterHomeResultNotify
                case 4796: return 4653; // TryEnterHomeRsp
                case 4798: return 4741; // HomeAvatarAllFinishRewardNotify
                case 4800: return 4479; // HomeResourceTakeHomeCoinReq
                case 4802: return 4477; // FurnitureMakeReq
                case 4803: return 4769; // TakeFurnitureMakeRsp
                case 4804: return 4629; // HomeAvatarSummonFinishReq
                case 4806: return 4606; // HomeCreateBlueprintRsp
                case 4807: return 4805; // HomeRacingGallerySettleNotify
                case 4808: return 4576; // HomeExchangeWoodReq
                case 4813: return 4765; // HomeBlueprintInfoNotify
                case 4814: return 4696; // HomeAvatarSummonFinishRsp
                case 4815: return 4825; // HomeLimitedShopInfoReq
                case 4818: return 4880; // PlayerHomeCompInfoNotify
                case 4823: return 4759; // HomeClearGroupRecordReq
                case 4824: return 4538; // HomeGetGroupRecordRsp
                case 4834: return 4547; // HomeScenePointFishFarmingInfoNotify
                case 4835: return 4476; // HomeGetFishFarmingInfoReq
                case 4841: return 4608; // HomeAllUnlockedBgmIdListNotify
                case 4842: return 4677; // HomeFishFarmingInfoNotify
                case 4848: return 4549; // HomePlantFieldNotify
                case 4849: return 4852; // HomeAvatarRewardEventNotify
                case 4850: return 4841; // FurnitureMakeFinishNotify
                case 4853: return 4494; // SetFriendEnterHomeOptionReq
                case 4856: return 4820; // HomeGetOnlineStatusReq
                case 4857: return 4603; // GetHomeLevelUpRewardRsp
                case 4859: return 4530; // JoinHomeWorldFailNotify
                case 4861: return 4499; // HomeModuleSeenReq
                case 4865: return 4537; // HomeEnterEditModeFinishReq
                case 4866: return 4640; // HomePlantWeedReq
                case 4868: return 4474; // HomeMarkPointNotify
                case 4873: return 4587; // HomePlantInfoNotify
                case 4877: return 4729; // FurnitureMakeStartRsp
                case 4878: return 4844; // HomeGetArrangementInfoRsp
                case 4882: return 4898; // FurnitureMakeInfoChangeNotify
                case 4885: return 4622; // HomeExchangeWoodRsp
                case 4888: return 4712; // HomeCustomFurnitureInfoNotify
                case 4894: return 4806; // HomeAvatarSummonEventReq
                case 4895: return 4488; // HomeChangeBgmRsp
                case 4899: return 4847; // HomeNewUnlockedBgmIdListNotify
                case 4975: return 5031; // ChatChannelInfoNotify
                case 4977: return 4981; // ReadPrivateChatRsp
                case 4980: return 5048; // PrivateChatRsp
                case 4989: return 5025; // ChatChannelUpdateNotify
                case 4993: return 4971; // PullPrivateChatReq
                case 4997: return 5040; // PullRecentChatReq
                case 4998: return 4998; // ChatChannelDataNotify
                case 5006: return 4962; // PrivateChatNotify
                case 5007: return 5049; // ReadPrivateChatReq
                case 5011: return 4953; // PullPrivateChatRsp
                case 5028: return 5023; // PullRecentChatRsp
                case 5029: return 5022; // PrivateChatReq
                case 5049: return 5047; // ChatChannelShieldNotify
                case 5052: return 5064; // TakeReunionMissionRewardRsp
                case 5054: return 5100; // ReunionDailyRefreshNotify
                case 5058: return 5091; // UpdateReunionWatcherNotify
                case 5059: return 5087; // GetReunionPrivilegeInfoRsp
                case 5062: return 5094; // GetReunionMissionInfoReq
                case 5065: return 5070; // TakeReunionWatcherRewardReq
                case 5067: return 5072; // TakeReunionSignInRewardRsp
                case 5068: return 5095; // TakeReunionWatcherRewardRsp
                case 5071: return 5085; // ReunionActivateNotify
                case 5072: return 5075; // TakeReunionFirstGiftRewardReq
                case 5077: return 5052; // GetReunionSignInInfoReq
                case 5080: return 5073; // ReunionSettleNotify
                case 5081: return 5081; // GetReunionSignInInfoRsp
                case 5084: return 5099; // GetReunionMissionInfoRsp
                case 5085: return 5057; // TakeReunionFirstGiftRewardRsp
                case 5087: return 5098; // ReunionPrivilegeChangeNotify
                case 5091: return 5068; // ReunionBriefInfoRsp
                case 5092: return 5076; // ReunionBriefInfoReq
                case 5093: return 5097; // GetReunionPrivilegeInfoReq
                case 5094: return 5079; // TakeReunionSignInRewardReq
                case 5095: return 5092; // TakeReunionMissionRewardReq
                case 5119: return 5135; // OpActivityUpdateNotify
                case 5130: return 5198; // GetOpActivityInfoRsp
                case 5156: return 5112; // OpActivityDataNotify
                case 5179: return 5172; // GetOpActivityInfoReq
                case 5212: return 5244; // MiracleRingDestroyNotify
                case 5217: return 5222; // MiracleRingDeliverItemRsp
                case 5222: return 5225; // MiracleRingDataNotify
                case 5227: return 5202; // MiracleRingTakeRewardRsp
                case 5231: return 5231; // MiracleRingDropResultNotify
                case 5235: return 5207; // MiracleRingTakeRewardReq
                case 5241: return 5218; // UseMiracleRingRsp
                case 5242: return 5226; // UseMiracleRingReq
                case 5244: return 5229; // MiracleRingDeliverItemReq
                case 5302: return 5320; // GlobalBuildingInfoNotify
                case 5311: return 5342; // FleurFairFinishGalleryStageNotify
                case 5312: return 5364; // IrodoriChessPlayerInfoNotify
                case 5314: return 5354; // BrickBreakerSetChangingRsp
                case 5322: return 5324; // FleurFairBuffEnergyNotify
                case 5324: return 5358; // HideAndSeekSetReadyReq
                case 5325: return 5381; // MultistagePlayFinishStageRsp
                case 5326: return 5389; // ChessManualRefreshCardsReq
                case 5327: return 5331; // InBattleMechanicusConfirmCardReq
                case 5329: return 5325; // BrickBreakerSelectSkillReq
                case 5330: return 5398; // MultistagePlayFinishStageReq
                case 5331: return 5338; // IrodoriChessLeftMonsterNotify
                case 5332: return 5377; // BrickBreakerSetReadyRsp
                case 5336: return 5360; // ChessLeftMonstersNotify
                case 5339: return 5375; // InBattleMechanicusConfirmCardRsp
                case 5341: return 5314; // ChessEscapedMonstersNotify
                case 5342: return 5305; // InBattleMechanicusSettleNotify
                case 5343: return 5321; // InBattleMechanicusLeftMonsterNotify
                case 5345: return 5355; // MultistagePlayEndNotify
                case 5347: return 5390; // InBattleMechanicusPickCardReq
                case 5348: return 5348; // InBattleMechanicusConfirmCardNotify
                case 5349: return 5370; // HideAndSeekSetReadyRsp
                case 5350: return 5330; // HideAndSeekSelectAvatarReq
                case 5351: return 5309; // BrickBreakerPlayerSetSkillNotify
                case 5352: return 5384; // ChessPickCardRsp
                case 5353: return 5367; // HideAndSeekSelectAvatarRsp
                case 5354: return 5319; // HideAndSeekPlayerSetAvatarNotify
                case 5357: return 5399; // InBattleMechanicusPickCardNotify
                case 5358: return 5336; // BrickBreakerSetChangingReq
                case 5359: return 5385; // BrickBreakerSelectAvatarRsp
                case 5360: return 5313; // MultistagePlaySettleNotify
                case 5361: return 5303; // InBattleMechanicusBuildingPointsNotify
                case 5362: return 5308; // BrickBreakerPlayerSetAvatarNotify
                case 5365: return 5332; // ChessPlayerInfoNotify
                case 5366: return 5333; // ChessPickCardReq
                case 5368: return 5337; // BrickBreakerSelectAvatarReq
                case 5370: return 5383; // BrickBreakerPlayerSetChangingNotify
                case 5371: return 5352; // BrickBreakerSetReadyReq
                case 5374: return 5380; // ChessPickCardNotify
                case 5377: return 5359; // ChessManualRefreshCardsRsp
                case 5378: return 5373; // InBattleMechanicusPickCardRsp
                case 5379: return 5372; // MultistagePlayInfoNotify
                case 5382: return 5356; // FleurFairStageSettleNotify
                case 5386: return 5378; // BrickBreakerSelectSkillRsp
                case 5391: return 5317; // HideAndSeekSettleNotify
                case 5392: return 5379; // MultistagePlayStageEndNotify
                case 5393: return 5302; // HideAndSeekPlayerReadyNotify
                case 5396: return 5345; // BrickBreakerPlayerReadyNotify
                case 5397: return 5392; // ChessSelectedCardsNotify
                case 5399: return 5397; // InBattleMechanicusCardResultNotify
                case 5400: return 5307; // InBattleMechanicusEscapeMonsterNotify
                case 5419: return 5435; // DraftOwnerStartInviteRsp
                case 5427: return 5431; // DraftGuestReplyTwiceConfirmReq
                case 5439: return 5475; // DraftGuestReplyTwiceConfirmRsp
                case 5443: return 5421; // DraftGuestReplyInviteReq
                case 5447: return 5490; // DraftGuestReplyInviteNotify
                case 5448: return 5448; // DraftTwiceConfirmResultNotify
                case 5456: return 5412; // DraftOwnerStartInviteReq
                case 5457: return 5499; // DraftOwnerTwiceConfirmNotify
                case 5461: return 5403; // DraftGuestReplyInviteRsp
                case 5478: return 5473; // DraftInviteResultNotify
                case 5499: return 5497; // DraftGuestReplyTwiceConfirmNotify
                case 5500: return 5407; // DraftOwnerInviteNotify
                case 5503: return 5563; // WindFieldGalleryChallengeInfoNotify
                case 5505: return 5594; // GalleryWillStartCountdownNotify
                case 5507: return 5593; // BackRebornGalleryReq
                case 5510: return 5506; // FungusCaptureSettleNotify
                case 5516: return 5539; // GalleryCrystalLinkBuffInfoNotify
                case 5517: return 5527; // BackRebornGalleryRsp
                case 5519: return 5535; // GalleryStopNotify
                case 5525: return 5581; // SceneGalleryInfoNotify
                case 5527: return 5531; // GalleryBulletHitNotify
                case 5530: return 5598; // GalleryBalloonShootNotify
                case 5533: return 5595; // FungusFighterTrainingInfoNotify
                case 5537: return 5522; // GalleryIslandPartyDownHillInfoNotify
                case 5539: return 5575; // GalleryBrokenFloorFallNotify
                case 5542: return 5505; // GalleryBounceConjuringHitNotify
                case 5543: return 5521; // GalleryFallScoreNotify
                case 5544: return 5504; // IslandPartySailInfoNotify
                case 5546: return 5550; // CoinCollectGallerySettleNotify
                case 5547: return 5590; // GetAllSceneGalleryInfoRsp
                case 5548: return 5548; // InterruptGalleryReq
                case 5556: return 5512; // GalleryBalloonScoreNotify
                case 5557: return 5599; // GalleryPreStartNotify
                case 5561: return 5503; // GetAllSceneGalleryInfoReq
                case 5572: return 5526; // WindFieldGalleryInfoNotify
                case 5573: return 5553; // HomeGalleryInPlayingNotify
                case 5576: return 5547; // GalleryCrystalLinkKillMonsterNotify
                case 5578: return 5573; // GalleryFlowerCatchNotify
                case 5579: return 5572; // GalleryStartNotify
                case 5580: return 5534; // HideAndSeekPlayerCapturedNotify
                case 5589: return 5565; // IslandPartyRaftInfoNotify
                case 5590: return 5582; // GallerySumoKillMonsterNotify
                case 5594: return 5588; // InstableSprayGalleryInfoNotify
                case 5599: return 5597; // InterruptGalleryRsp
                case 5600: return 5507; // GalleryFallCatchNotify
                case 5622: return 5625; // TakeRegionSearchRewardReq
                case 5627: return 5602; // GetRegionSearchReq
                case 5635: return 5607; // TakeRegionSearchRewardRsp
                case 5641: return 5618; // RegionSearchChangeRegionNotify
                case 5642: return 5626; // RegionSearchNotify
                case 5672: return 5675; // H5ActivityIdsNotify
                case 5677: return 5652; // SetH5ActivityRedDotTimestampRsp
                case 5685: return 5657; // SetH5ActivityRedDotTimestampReq
                case 5691: return 5668; // GetAllH5ActivityInfoReq
                case 5692: return 5676; // GetAllH5ActivityInfoRsp
                case 5741: return 5718; // ServerMessageNotify
                case 5742: return 5726; // NormalUidOpNotify
                case 5772: return 5775; // GroupLinkDeleteNotify
                case 5785: return 5757; // GroupLinkMarkUpdateNotify
                case 5791: return 5768; // GroupLinkChangeNotify
                case 5792: return 5776; // GroupLinkAllNotify
                case 5802: return 5814; // ExitFishingReq
                case 5808: return 5841; // FishBattleEndReq
                case 5809: return 5837; // FishAttractNotify
                case 5812: return 5844; // FishBiteReq
                case 5815: return 5820; // FishBattleBeginReq
                case 5817: return 5822; // FishEscapeNotify
                case 5818: return 5845; // FishBattleBeginRsp
                case 5821: return 5835; // PlayerFishingDataNotify
                case 5822: return 5825; // StartFishingReq
                case 5827: return 5802; // FishCastRodReq
                case 5830: return 5823; // FishBaitGoneNotify
                case 5831: return 5831; // FishCastRodRsp
                case 5834: return 5849; // FishBiteRsp
                case 5835: return 5807; // StartFishingRsp
                case 5837: return 5848; // FishPoolDataNotify
                case 5841: return 5818; // EnterFishingRsp
                case 5842: return 5826; // EnterFishingReq
                case 5843: return 5847; // ExitFishingRsp
                case 5844: return 5829; // FishChosenNotify
                case 5845: return 5842; // FishBattleEndRsp
                case 5907: return 5960; // WidgetUpdateExtraCDReq
                case 5908: return 6033; // FireworksReformDataNotify
                case 5910: return 5995; // RemotePlayerWidgetNotify
                case 5917: return 5928; // FireworksLaunchDataNotify
                case 5932: return 6092; // AllWidgetBackgroundActiveStateNotify
                case 5936: return 6057; // LaunchFireworksRsp
                case 5952: return 5942; // WidgetWeatherWizardDataNotify
                case 5955: return 6060; // ChangeWidgetBackgroundActiveStateRsp
                case 5959: return 5907; // ChangeWidgetBackgroundActiveStateReq
                case 5977: return 6090; // LaunchFireworksReq
                case 6062: return 5929; // ReformFireworksRsp
                case 6074: return 6036; // ReformFireworksReq
                case 6076: return 6056; // WidgetUpdateExtraCDRsp
                case 6119: return 6135; // ToTheMoonEnterSceneReq
                case 6130: return 6198; // ToTheMoonQueryPathRsp
                case 6143: return 6121; // ToTheMoonAddObstacleReq
                case 6147: return 6190; // ToTheMoonRemoveObstacleReq
                case 6156: return 6112; // ToTheMoonPingNotify
                case 6157: return 6199; // ToTheMoonObstaclesModifyNotify
                case 6161: return 6103; // ToTheMoonAddObstacleRsp
                case 6178: return 6173; // ToTheMoonRemoveObstacleRsp
                case 6179: return 6172; // ToTheMoonQueryPathReq
                case 6200: return 6107; // ToTheMoonEnterSceneRsp
                case 6201: return 6233; // SearchCustomDungeonReq
                case 6202: return 6214; // PublishCustomDungeonRsp
                case 6203: return 6210; // LikeCustomDungeonReq
                case 6204: return 6250; // GetStoreCustomDungeonReq
                case 6205: return 6209; // GetCustomDungeonReq
                case 6206: return 6201; // StoreCustomDungeonRsp
                case 6208: return 6241; // TryCustomDungeonRsp
                case 6209: return 6237; // ExitCustomDungeonTryRsp
                case 6210: return 6212; // GetStoreCustomDungeonRsp
                case 6211: return 6227; // GetCustomDungeonRsp
                case 6212: return 6244; // ChangeCustomDungeonRoomRsp
                case 6213: return 6211; // OutStuckCustomDungeonReq
                case 6214: return 6243; // ReplayCustomDungeonReq
                case 6215: return 6220; // RemoveCustomDungeonRsp
                case 6217: return 6222; // ChangeCustomDungeonRoomReq
                case 6218: return 6245; // TryCustomDungeonReq
                case 6220: return 6204; // BackPlayCustomDungeonOfficialRsp
                case 6221: return 6235; // GetRecommendCustomDungeonReq
                case 6222: return 6225; // SaveCustomDungeonRoomReq
                case 6224: return 6203; // BackPlayCustomDungeonOfficialReq
                case 6225: return 6236; // CustomDungeonBattleRecordNotify
                case 6228: return 6217; // CustomDungeonRecoverNotify
                case 6230: return 6223; // CustomDungeonUpdateNotify
                case 6233: return 6219; // LikeCustomDungeonRsp
                case 6234: return 6249; // RemoveCustomDungeonReq
                case 6235: return 6207; // SaveCustomDungeonRoomRsp
                case 6236: return 6221; // CustomDungeonOfficialNotify
                case 6237: return 6248; // GetRecommendCustomDungeonRsp
                case 6238: return 6234; // OutStuckCustomDungeonRsp
                case 6239: return 6215; // SearchCustomDungeonRsp
                case 6241: return 6218; // EnterCustomDungeonRsp
                case 6242: return 6226; // EnterCustomDungeonReq
                case 6243: return 6247; // ExitCustomDungeonTryReq
                case 6245: return 6242; // PublishCustomDungeonReq
                case 6248: return 6240; // ReplayCustomDungeonRsp
                case 6250: return 6213; // StoreCustomDungeonReq
                case 6272: return 6275; // PlayerDeathZoneNotify
                case 6291: return 6268; // DeathZoneInfoNotify
                case 6292: return 6276; // RegionalPlayInfoNotify
                case 6302: return 6314; // CheckUgcStateRsp
                case 6308: return 6341; // UgcNotify
                case 6312: return 6344; // PublishUgcReq
                case 6315: return 6320; // CheckUgcUpdateReq
                case 6317: return 6322; // SaveUgcRsp
                case 6318: return 6345; // CheckUgcUpdateRsp
                case 6322: return 6325; // GetUgcBriefInfoReq
                case 6334: return 6349; // PublishUgcRsp
                case 6335: return 6307; // GetUgcBriefInfoRsp
                case 6341: return 6318; // GetUgcRsp
                case 6342: return 6326; // GetUgcReq
                case 6344: return 6329; // SaveUgcReq
                case 6345: return 6342; // CheckUgcStateReq
                case 6365: return 6370; // CataLogFinishedGlobalWatcherAllDataNotify
                case 6368: return 6395; // CataLogNewFinishedGlobalWatcherNotify
                case 6391: return 6368; // AddAranaraCollectionNotify
                case 6392: return 6376; // AranaraCollectionDataNotify
                case 6408: return 6536; // CoinCollectPrepareStageNotify
                case 7001: return 7581; // GCGDSTakeCardProficiencyRewardReq
                case 7004: return 7629; // GCGLevelChallengeFinishNotify
                case 7010: return 7169; // GCGDSChangeCardFaceReq
                case 7011: return 7044; // GCGDSChangeCardBackRsp
                case 7015: return 7729; // GCGBackToDuelReq
                case 7027: return 7328; // GCGTCInviteRsp
                case 7032: return 7730; // GCGApplyInviteBattleReq
                case 7034: return 7237; // GCGAskDuelReq
                case 7035: return 7506; // GCGClientSettleReq
                case 7036: return 7444; // GCGDSChangeFieldRsp
                case 7039: return 7416; // GCGBackToDuelRsp
                case 7058: return 7615; // GCGWeekChallengeInfoNotify
                case 7066: return 7851; // GCGDSCardFaceUpdateNotify
                case 7067: return 7524; // GCGDSDeleteDeckRsp
                case 7071: return 7932; // GCGDebugReplayNotify
                case 7078: return 7265; // GCGDSCardBackUnlockNotify
                case 7110: return 7735; // GCGSettleOptionRsp
                case 7135: return 7839; // GCGDSBanCardNotify
                case 7183: return 7055; // GCGLevelChallengeNotify
                case 7202: return 7783; // GCGInviteGuestBattleReq
                case 7226: return 7666; // GCGGameMaxNotify
                case 7244: return 7358; // GCGDSCardNumChangeNotify
                case 7248: return 7136; // GCGWorldPlayerGCGStateRsp
                case 7257: return 7131; // GCGDSChangeCurDeckReq
                case 7267: return 7290; // GCGTavernNpcInfoNotify
                case 7268: return 7011; // GCGTCTavernInfoNotify
                case 7270: return 7268; // GCGChallengeUpdateNotify
                case 7285: return 7600; // GCGOperationRsp
                case 7299: return 7516; // GCGMessagePackNotify
                case 7341: return 7922; // GCGTCInviteReq
                case 7343: return 7736; // GCGGrowthLevelNotify
                case 7348: return 7684; // GCGInitFinishReq
                case 7356: return 7294; // GCGTCTavernChallengeDataNotify
                case 7369: return 7433; // GCGInitFinishRsp
                case 7370: return 7204; // GCGWorldChallengeUnlockNotify
                case 7375: return 7206; // GCGWorldPlayerGCGStateReq
                case 7427: return 7732; // GCGDSDeckUnlockNotify
                case 7448: return 7692; // GCGInviteBattleNotify
                case 7459: return 7269; // GCGDSDeckSaveRsp
                case 7463: return 7432; // GCGDSChangeDeckNameReq
                case 7486: return 7051; // GCGGrowthLevelTakeRewardReq
                case 7532: return 7105; // GCGClientSettleRsp
                case 7549: return 7331; // GCGDSChangeCardFaceRsp
                case 7562: return 7769; // GCGSettleNotify
                case 7564: return 7869; // GCGAskDuelRsp
                case 7576: return 7224; // GCGHeartBeatNotify
                case 7586: return 7876; // GCGResourceStateNotify
                case 7600: return 7124; // GCGSettleOptionReq
                case 7602: return 7670; // GCGGrowthLevelTakeRewardRsp
                case 7617: return 7916; // GCGDSChangeDeckNameRsp
                case 7658: return 7239; // GCGGameCreateFailReasonNotify
                case 7659: return 7503; // GCGSkillPreviewNotify
                case 7664: return 7107; // GCGOperationReq
                case 7680: return 7292; // GCGDSChangeCardBackReq
                case 7713: return 7104; // GCGDSDeckSaveReq
                case 7718: return 7889; // GCGDSTakeCardProficiencyRewardRsp
                case 7727: return 7619; // GCGStartChallengeByCheckRewardRsp
                case 7739: return 7319; // GCGBasicDataNotify
                case 7751: return 7305; // GCGDSDeckUpdateNotify
                case 7754: return 7304; // GCGApplyInviteBattleRsp
                case 7767: return 7049; // GCGDSCardFaceUnlockNotify
                case 7769: return 7796; // GCGDSCurDeckChangeNotify
                case 7788: return 7541; // GCGDSChangeFieldReq
                case 7821: return 7988; // GCGDSDeleteDeckReq
                case 7824: return 7539; // GCGGameBriefDataNotify
                case 7850: return 7122; // GCGDSDataNotify
                case 7852: return 7073; // GCGBossChallengeUpdateNotify
                case 7858: return 7509; // GCGSkillPreviewAskReq
                case 7860: return 7333; // GCGDSFieldUnlockNotify
                case 7877: return 7409; // GCGSkillPreviewAskRsp
                case 7907: return 7184; // GCGTCTavernChallengeUpdateNotify
                case 7908: return 7301; // GCGDSChangeCurDeckRsp
                case 7934: return 7477; // GCGGrowthLevelRewardNotify
                case 7964: return 7595; // GCGStartChallengeReq
                case 7969: return 7680; // GCGDSCardProficiencyNotify
                case 7982: return 7778; // GCGStartChallengeByCheckRewardReq
                case 7984: return 7820; // GCGApplyInviteBattleNotify
                case 7993: return 7648; // GCGLevelChallengeDeleteNotify
                case 7997: return 7251; // GCGInviteGuestBattleRsp
                case 7999: return 7763; // GCGStartChallengeRsp
                case 8007: return 8145; // ActivityReadPushTipsReq
                case 8008: return 8718; // MichiaeMatsuriInteractStatueReq
                case 8014: return 8607; // WinterCampTakeExploreRewardReq
                case 8015: return 8729; // ChannelerSlabOneOffDungeonInfoNotify
                case 8021: return 8357; // WinterCampGetCanGiveFriendItemRsp
                case 8022: return 8313; // SumoSaveTeamReq
                case 8029: return 8982; // ActivityDisableTransferPointInteractionNotify
                case 8034: return 8237; // ChannelerSlabTakeoffBuffRsp
                case 8038: return 8207; // ClearRoguelikeCurseNotify
                case 8039: return 8416; // ChannelerSlabSaveAssistInfoReq
                case 8043: return 8043; // ActivityTakeAllScoreRewardRsp
                case 8047: return 8502; // ActivityAcceptGiveGiftRsp
                case 8048: return 8893; // MistTrialGetChallengeMissionReq
                case 8049: return 8114; // EchoShellTakeRewardReq
                case 8050: return 8061; // IrodoriMasterGalleryCgEndNotify
                case 8057: return 8925; // RoguelikeCardGachaNotify
                case 8061: return 8343; // RogueDiaryReviveAvatarRsp
                case 8062: return 8183; // HideAndSeekSelectSkillReq
                case 8065: return 8279; // RefreshRoguelikeDungeonCardReq
                case 8066: return 8851; // SetLimitOptimizationNotify
                case 8071: return 8932; // ChannelerSlabSaveAssistInfoRsp
                case 8073: return 8346; // SummerTimeV2RestartDungeonReq
                case 8076: return 8880; // IrodoriFillPoetryRsp
                case 8084: return 8641; // RogueDiaryRepairInfoNotify
                case 8093: return 8347; // RogueDungeonPlayerCellChangeNotify
                case 8096: return 8597; // RogueDiaryDungeonInfoNotify
                case 8101: return 8078; // PlantFlowerHaveRecvFlowerNotify
                case 8102: return 8572; // WinterCampGiveFriendItemReq
                case 8104: return 8777; // LanternRiteTakeSkinRewardRsp
                case 8111: return 8410; // SummerTimeSprintBoatRestartReq
                case 8116: return 8373; // MistTrialSettleNotify
                case 8118: return 8733; // ActivityHaveRecvGiftNotify
                case 8122: return 8227; // BartenderFinishLevelReq
                case 8125: return 8127; // ResetRogueDiaryPlayReq
                case 8127: return 8971; // ActivityTakeScoreRewardReq
                case 8132: return 8126; // PlantFlowerGetFriendFlowerWishListReq
                case 8133: return 8065; // TriggerRoguelikeRuneRsp
                case 8136: return 8825; // MichiaeMatsuriDarkPressureLevelUpdateNotify
                case 8142: return 8402; // BartenderStartLevelRsp
                case 8144: return 8472; // DoRoguelikeDungeonCardGachaRsp
                case 8146: return 8036; // StartRogueNormalCellChallengeRsp
                case 8150: return 8449; // MichiaeMatsuriInteractStatueRsp
                case 8152: return 8352; // EnterRogueDiaryDungeonRsp
                case 8153: return 8870; // SummerTimeV2BoatSettleNotify
                case 8157: return 8144; // WinterCampEditSnowmanCombinationReq
                case 8162: return 8372; // ActivityTakeAllScoreRewardReq
                case 8166: return 8054; // MichiaeMatsuriStartDarkChallengeReq
                case 8167: return 8466; // CommonPlayerTipsNotify
                case 8171: return 8657; // LanternRiteDoFireworksReformRsp
                case 8175: return 8947; // RogueHealAvatarsReq
                case 8177: return 8022; // CrystalLinkRestartDungeonReq
                case 8178: return 8233; // ActivityGiveFriendGiftReq
                case 8179: return 8325; // CrystalLinkEnterDungeonReq
                case 8182: return 8552; // RoguelikeTakeStageFirstPassRewardRsp
                case 8193: return 8508; // MistTrialGetChallengeMissionRsp
                case 8194: return 8342; // WinterCampTriathlonSettleNotify
                case 8200: return 8518; // LanternRiteStartFireworksReformReq
                case 8201: return 8525; // SumoSwitchTeamRsp
                case 8203: return 8726; // MichiaeMatsuriRemoveChestMarkNotify
                case 8208: return 8937; // WinterCampGetFriendWishListRsp
                case 8210: return 8927; // RoguelikeRefreshCardCostUpdateNotify
                case 8213: return 8045; // LunaRiteTakeSacrificeRewardReq
                case 8215: return 8080; // LunaRiteSacrificeRsp
                case 8216: return 8326; // MusicGameStartRsp
                case 8220: return 8419; // StartRogueDiaryPlayReq
                case 8225: return 8004; // SummerTimeV2RestartBoatGalleryRsp
                case 8226: return 8666; // MistTrialSelectAvatarAndEnterDungeonReq
                case 8229: return 8374; // PlantFlowerGetRecvFlowerListRsp
                case 8230: return 8462; // BartenderGetFormulaReq
                case 8234: return 8903; // TryInterruptRogueDiaryDungeonRsp
                case 8238: return 8546; // EnterIrodoriChessDungeonRsp
                case 8240: return 8808; // PlantFlowerAcceptAllGiveFlowerReq
                case 8241: return 8919; // GachaActivityUpdateElemNotify
                case 8243: return 8165; // IrodoriMasterStartGalleryReq
                case 8247: return 8205; // StartRogueNormalCellChallengeReq
                case 8249: return 8442; // BartenderCancelOrderReq
                case 8250: return 8093; // BartenderFinishLevelRsp
                case 8252: return 8949; // RogueHealAvatarsRsp
                case 8254: return 8837; // BartenderCancelOrderRsp
                case 8265: return 8797; // EchoShellTakeRewardRsp
                case 8269: return 8334; // RetryCurRogueDiaryDungeonRsp
                case 8270: return 8268; // ChannelerSlabOneOffDungeonInfoRsp
                case 8273: return 8766; // PlantFlowerGetCanGiveFriendFlowerRsp
                case 8275: return 8795; // RogueResumeDungeonReq
                case 8276: return 8214; // SumoRestartDungeonRsp
                case 8279: return 8159; // StartRogueDiaryRoomReq
                case 8282: return 8151; // UpgradeRoguelikeShikigamiReq
                case 8285: return 8600; // ChannelerSlabWearBuffRsp
                case 8286: return 8745; // ChannelerSlabCheckEnterLoopDungeonReq
                case 8288: return 8281; // WinterCampSetWishListRsp
                case 8289: return 8430; // DigActivityChangeGadgetStateRsp
                case 8293: return 8592; // EnterChessDungeonRsp
                case 8296: return 8681; // TreasureMapHostInfoNotify
                case 8297: return 8013; // SumoEnterDungeonNotify
                case 8299: return 8516; // ChannelerSlabTakeoffBuffReq
                case 8300: return 8383; // PlantFlowerAcceptGiveFlowerReq
                case 8302: return 8178; // QuickOpenActivityReq
                case 8303: return 8758; // ViewLanternProjectionLevelTipsReq
                case 8310: return 8153; // WinterCampTakeBattleRewardRsp
                case 8311: return 8748; // ReserveRogueDiaryAvatarReq
                case 8313: return 8888; // PlantFlowerAcceptAllGiveFlowerRsp
                case 8314: return 8966; // UpgradeRoguelikeShikigamiRsp
                case 8316: return 8614; // GachaActivityCreateRobotReq
                case 8318: return 8523; // MichiaeMatsuriGainCrystalExpUpdateNotify
                case 8320: return 8135; // MistTrialDungeonFailNotify
                case 8323: return 8978; // WinterCampTakeExploreRewardRsp
                case 8324: return 8910; // PlantFlowerSetFlowerWishRsp
                case 8329: return 8017; // ActivitySetGiftWishReq
                case 8330: return 8559; // ActivityGetCanGiveFriendGiftReq
                case 8331: return 8377; // PotionResetChallengeReq
                case 8332: return 8989; // ResumeRogueDiaryDungeonRsp
                case 8342: return 8257; // GachaActivityNextStageReq
                case 8348: return 8684; // ChannelerSlabLoopDungeonTakeScoreRewardReq
                case 8354: return 8768; // GachaActivityTakeRewardRsp
                case 8355: return 8253; // ActivityGetFriendGiftWishListRsp
                case 8357: return 8306; // EquipRoguelikeRuneReq
                case 8359: return 8028; // RefreshRogueDiaryCardRsp
                case 8360: return 8673; // MusicGameSettleRsp
                case 8369: return 8433; // ChannelerSlabLoopDungeonTakeScoreRewardRsp
                case 8372: return 8464; // DigActivityChangeGadgetStateReq
                case 8373: return 8696; // ActivityGiveFriendGiftRsp
                case 8374: return 8848; // ActivityGetCanGiveFriendGiftRsp
                case 8379: return 8791; // MichiaeMatsuriStartDarkChallengeRsp
                case 8380: return 8753; // WinterCampSetWishListReq
                case 8381: return 8772; // SpiceActivityProcessFoodRsp
                case 8382: return 8213; // LunaRiteAreaFinishNotify
                case 8394: return 8765; // LunaRiteHintPointRsp
                case 8395: return 8921; // PhotoActivityFinishReq
                case 8396: return 8843; // PlantFlowerEditFlowerCombinationReq
                case 8398: return 8826; // LanternRiteTakeSkinRewardReq
                case 8399: return 8201; // RogueSwitchAvatarReq
                case 8408: return 8858; // CrystalLinkDungeonInfoNotify
                case 8409: return 8057; // IrodoriChessUnequipCardReq
                case 8414: return 8933; // LanternRiteEndFireworksReformRsp
                case 8415: return 8756; // BartenderLevelProgressNotify
                case 8416: return 8240; // GachaActivityResetRsp
                case 8418: return 8513; // ActivityPushTipsInfoNotify
                case 8420: return 8547; // PlantFlowerSetFlowerWishReq
                case 8426: return 8555; // RoguelikeResourceBonusPropUpdateNotify
                case 8427: return 8732; // StartBuoyantCombatGalleryReq
                case 8434: return 8291; // SumoDungeonSettleNotify
                case 8435: return 8231; // SalvagePreventSettleNotify
                case 8437: return 8639; // RoguelikeEffectViewRsp
                case 8438: return 8617; // TryInterruptRogueDiaryDungeonReq
                case 8440: return 8353; // GiveUpRoguelikeDungeonCardReq
                case 8442: return 8660; // RoguelikeGiveUpReq
                case 8443: return 8964; // WinterCampGetCanGiveFriendItemReq
                case 8445: return 8915; // RogueSwitchAvatarRsp
                case 8446: return 8771; // BartenderCancelLevelReq
                case 8451: return 8651; // SummerTimeSprintBoatSettleNotify
                case 8453: return 8944; // BlitzRushParkourRestartRsp
                case 8454: return 8833; // IrodoriEditFlowerCombinationRsp
                case 8455: return 8465; // LunaRiteGroupBundleRegisterNotify
                case 8464: return 8780; // FishingGallerySettleNotify
                case 8466: return 8356; // SummerTimeSprintBoatRestartRsp
                case 8468: return 8569; // WinterCampTriathlonRestartRsp
                case 8481: return 8924; // TanukiTravelFinishGuideQuestNotify
                case 8483: return 8363; // RogueFinishRepairReq
                case 8484: return 8401; // WinterCampTakeBattleRewardReq
                case 8485: return 8242; // StartRogueEliteCellChallengeReq
                case 8487: return 8362; // TryEnterNextRogueDiaryDungeonRsp
                case 8492: return 8062; // PotionRestartDungeonRsp
                case 8493: return 8938; // SalvagePreventRestartRsp
                case 8494: return 8610; // GachaActivityCreateRobotRsp
                case 8495: return 8381; // IrodoriMasterStartGalleryRsp
                case 8498: return 8589; // ChannelerSlabLoopDungeonTakeFirstPassRewardReq
                case 8499: return 8574; // ActivityReadPushTipsRsp
                case 8501: return 8533; // HideAndSeekChooseMapRsp
                case 8503: return 8535; // RogueFinishRepairRsp
                case 8508: return 8781; // SummerTimeFloatSignalUpdateNotify
                case 8516: return 8387; // WinterCampAcceptGiveItemReq
                case 8517: return 8226; // LanternRiteDoFireworksReformReq
                case 8520: return 8396; // SalvageEscortRestartReq
                case 8523: return 8216; // SpiceActivityProcessFoodReq
                case 8524: return 8844; // WinterCampTriathlonRestartReq
                case 8525: return 8602; // RogueDiaryCoinAddNotify
                case 8526: return 8081; // ChannelerSlabEnterLoopDungeonRsp
                case 8527: return 8583; // ActivityTakeScoreRewardRsp
                case 8529: return 8085; // SelectRoguelikeDungeonCardReq
                case 8531: return 8421; // RoguelikeTakeStageFirstPassRewardReq
                case 8537: return 8817; // IrodoriChessUnequipCardRsp
                case 8538: return 9000; // WinterCampAcceptAllGiveItemReq
                case 8540: return 8163; // GachaActivityResetReq
                case 8544: return 8222; // RoguelikeEffectDataNotify
                case 8545: return 8716; // PlantFlowerGetCanGiveFriendFlowerReq
                case 8553: return 8959; // SalvageEscortRestartRsp
                case 8554: return 8567; // PlantFlowerAcceptGiveFlowerRsp
                case 8559: return 8386; // PlantFlowerGiveFriendFlowerRsp
                case 8560: return 8218; // ViewLanternProjectionTipsReq
                case 8564: return 8869; // ChannelerSlabEnterLoopDungeonReq
                case 8567: return 8640; // SumoLeaveDungeonNotify
                case 8575: return 8273; // PotionRestartDungeonReq
                case 8576: return 8224; // ChannelerSlabLoopDungeonChallengeInfoNotify
                case 8579: return 8688; // PotionSaveDungeonResultRsp
                case 8581: return 8072; // MichiaeMatsuriRemoveChallengeMarkNotify
                case 8590: return 8507; // BartenderStartLevelReq
                case 8592: return 8717; // EnterIrodoriChessDungeonReq
                case 8605: return 8528; // RoguelikeEffectViewReq
                case 8610: return 8935; // SumoSetNoSwitchPunishTimeNotify
                case 8611: return 8968; // PlantFlowerTakeSeedRewardReq
                case 8620: return 8459; // UpdateSalvageBundleMarkRsp
                case 8623: return 8590; // ViewLanternProjectionTipsRsp
                case 8627: return 8943; // EnterRogueDiaryDungeonReq
                case 8628: return 8147; // CrystalLinkEnterDungeonRsp
                case 8629: return 8973; // RoguelikeRuneRecordUpdateNotify
                case 8631: return 8452; // ChannelerSlabCheckEnterLoopDungeonRsp
                case 8632: return 8345; // MichiaeMatsuriUnlockCrystalSkillReq
                case 8642: return 8806; // ActivityGetFriendGiftWishListReq
                case 8644: return 8901; // FindHilichurlFinishSecondQuestNotify
                case 8650: return 8703; // MichiaeMatsuriStartBossChallengeReq
                case 8652: return 8862; // LanternRiteStartFireworksReformRsp
                case 8653: return 8084; // BounceConjuringSettleNotify
                case 8656: return 8447; // GetRogueDairyRepairInfoRsp
                case 8657: return 8652; // EnterRoguelikeDungeonNotify
                case 8658: return 8239; // MistTrialSelectAvatarAndEnterDungeonRsp
                case 8659: return 8503; // ChannelerSlabLoopDungeonSelectConditionReq
                case 8660: return 8514; // RogueDiaryTiredAvatarNotify
                case 8662: return 8270; // PlantFlowerGetRecvFlowerListReq
                case 8664: return 8107; // ChannelerSlabWearBuffReq
                case 8672: return 8192; // PotionSaveDungeonResultReq
                case 8674: return 8560; // PlantFlowerGetSeedInfoReq
                case 8677: return 8882; // QuickOpenActivityRsp
                case 8678: return 8038; // RogueDiaryReviveAvatarReq
                case 8679: return 8482; // PotionEnterDungeonRsp
                case 8682: return 8511; // PlantFlowerGetFriendFlowerWishListRsp
                case 8684: return 8788; // PlantFlowerEditFlowerCombinationRsp
                case 8685: return 8860; // PlantFlowerTakeSeedRewardRsp
                case 8686: return 8996; // SummerTimeV2RestartDungeonRsp
                case 8692: return 8203; // ChannelerSlabStageOneoffDungeonNotify
                case 8696: return 8398; // RetryCurRogueDiaryDungeonReq
                case 8698: return 8686; // BartenderCancelLevelRsp
                case 8701: return 8077; // SummerTimeFloatSignalPositionNotify
                case 8704: return 8838; // ResumeRogueDiaryDungeonReq
                case 8706: return 8450; // GachaActivityPercentNotify
                case 8717: return 8805; // LunaRiteSacrificeReq
                case 8719: return 8407; // SpiceActivityGivingRecordNotify
                case 8720: return 8138; // SelectRoguelikeDungeonCardRsp
                case 8725: return 8612; // SumoRestartDungeonReq
                case 8726: return 8895; // RogueDiaryDungeonSettleNotify
                case 8730: return 8014; // GetRogueDairyRepairInfoReq
                case 8731: return 8626; // WinterCampAcceptAllGiveItemRsp
                case 8735: return 8264; // WinterCampGiveFriendItemRsp
                case 8738: return 8351; // SumoSwitchTeamReq
                case 8739: return 8319; // SumoSaveTeamRsp
                case 8740: return 8148; // DoRoguelikeDungeonCardGachaReq
                case 8741: return 8119; // CrystalLinkRestartDungeonRsp
                case 8744: return 8193; // SumoSelectTeamAndEnterDungeonRsp
                case 8751: return 8305; // BuoyantCombatSettleNotify
                case 8757: return 8554; // ActivitySetGiftWishRsp
                case 8759: return 8512; // HideAndSeekChooseMapReq
                case 8762: return 8497; // GiveUpRoguelikeDungeonCardRsp
                case 8763: return 8787; // LunaRiteHintPointRemoveNotify
                case 8764: return 8946; // WinterCampGetFriendWishListReq
                case 8766: return 8561; // IrodoriChessEquipCardReq
                case 8768: return 8324; // RoguelikeMistClearNotify
                case 8771: return 8132; // ActivityAcceptAllGiveGiftRsp
                case 8772: return 8647; // RogueResumeDungeonRsp
                case 8777: return 8531; // PotionEnterDungeonNotify
                case 8784: return 8186; // LuminanceStoneChallengeSettleNotify
                case 8791: return 8280; // TryEnterNextRogueDiaryDungeonReq
                case 8792: return 8340; // IrodoriMasterGallerySettleNotify
                case 8794: return 8143; // WinterCampGetRecvItemListReq
                case 8796: return 8367; // SalvagePreventRestartReq
                case 8798: return 8499; // SalvageEscortSettleNotify
                case 8804: return 8067; // PotionResetChallengeRsp
                case 8806: return 8793; // StartRogueDiaryRoomRsp
                case 8811: return 8195; // LunaRiteHintPointReq
                case 8815: return 8705; // EquipRoguelikeRuneRsp
                case 8820: return 8406; // MusicGameStartReq
                case 8822: return 8463; // TriggerRoguelikeRuneReq
                case 8824: return 8539; // ChannelerSlabLoopDungeonTakeFirstPassRewardRsp
                case 8827: return 8095; // ActivityAcceptGiveGiftReq
                case 8835: return 8608; // IrodoriEditFlowerCombinationReq
                case 8838: return 8096; // SpiceActivityFinishMakeSpiceReq
                case 8839: return 8259; // DisableRoguelikeTrapNotify
                case 8840: return 8026; // IrodoriScanEntityRsp
                case 8841: return 8088; // HideAndSeekSelectSkillRsp
                case 8844: return 8120; // ActivityGetRecvGiftListRsp
                case 8847: return 8854; // PhotoActivityFinishRsp
                case 8851: return 8642; // RogueCellUpdateNotify
                case 8853: return 8930; // GachaActivityTakeRewardReq
                case 8855: return 8191; // EnterChessDungeonReq
                case 8857: return 8734; // ChannelerSlabStageActiveChallengeIndexNotify
                case 8858: return 8509; // ChannelerSlabLoopDungeonSelectConditionRsp
                case 8868: return 8991; // RefreshRogueDiaryCardReq
                case 8870: return 8125; // BartenderCompleteOrderRsp
                case 8871: return 8109; // DigActivityMarkPointChangeNotify
                case 8874: return 8588; // MichiaeMatsuriUnlockCrystalSkillRsp
                case 8877: return 8409; // ChannelerSlabOneOffDungeonInfoReq
                case 8878: return 8154; // WinterCampStageInfoChangeNotify
                case 8880: return 8414; // BartenderCompleteOrderReq
                case 8881: return 8385; // StartRogueDiaryPlayRsp
                case 8884: return 8308; // IrodoriChessEquipCardRsp
                case 8885: return 8476; // SummerTimeV2RestartBoatGalleryReq
                case 8891: return 8150; // EchoShellUpdateNotify
                case 8893: return 8659; // FindHilichurlAcceptQuestNotify
                case 8895: return 8397; // LunaRiteTakeSacrificeRewardRsp
                case 8900: return 8113; // ActivityAcceptAllGiveGiftReq
                case 8901: return 8799; // ReserveRogueDiaryAvatarRsp
                case 8903: return 8066; // MistTrialGetDungeonExhibitionDataRsp
                case 8905: return 8139; // RoguelikeGiveUpRsp
                case 8906: return 8967; // UpdateSalvageBundleMarkReq
                case 8910: return 8538; // RoguelikeSelectAvatarAndEnterDungeonRsp
                case 8912: return 8764; // PlantFlowerGetSeedInfoRsp
                case 8914: return 8918; // GachaActivityNextStageRsp
                case 8926: return 8129; // IrodoriFillPoetryReq
                case 8930: return 8846; // PlantFlowerGiveFriendFlowerReq
                case 8931: return 8767; // IrodoriScanEntityReq
                case 8932: return 8704; // FinishLanternProjectionReq
                case 8936: return 8277; // LanternRiteEndFireworksReformReq
                case 8943: return 8948; // ResetRogueDiaryPlayRsp
                case 8945: return 8261; // PotionEnterDungeonReq
                case 8946: return 8481; // SpiceActivityFinishMakeSpiceRsp
                case 8951: return 8142; // WinterCampEditSnowmanCombinationRsp
                case 8952: return 8580; // WinterCampRecvItemNotify
                case 8953: return 8426; // MichiaeMatsuriStartBossChallengeRsp
                case 8957: return 8423; // WinterCampGetRecvItemListRsp
                case 8960: return 8149; // WinterCampRaceScoreNotify
                case 8962: return 8411; // ViewLanternProjectionLevelTipsRsp
                case 8963: return 8983; // PhotoActivityClientViewRsp
                case 8965: return 8412; // TriggerRoguelikeCurseNotify
                case 8966: return 8185; // WinterCampAcceptGiveItemRsp
                case 8967: return 8958; // StartRogueEliteCellChallengeRsp
                case 8969: return 8680; // StartBuoyantCombatGalleryRsp
                case 8971: return 8713; // FinishLanternProjectionRsp
                case 8975: return 8842; // BartenderGetFormulaRsp
                case 8978: return 8215; // SumoSelectTeamAndEnterDungeonReq
                case 8983: return 8740; // MistTrialGetDungeonExhibitionDataReq
                case 8986: return 8653; // BlitzRushParkourRestartReq
                case 8988: return 8457; // RoguelikeSelectAvatarAndEnterDungeonReq
                case 8994: return 8349; // RefreshRoguelikeDungeonCardRsp
                case 8995: return 8725; // ActivityGetRecvGiftListReq
                case 8998: return 8892; // MusicGameSettleReq
                case 9000: return 8709; // PhotoActivityClientViewReq
                case 9079: return 9072; // AllShareCDDataNotify
                case 20011: return 23388; // GearActivityStartPlayPictureRsp
                case 20021: return 22704; // SingleRestartBrickBreakerReq
                case 20056: return 21880; // GravenInnocenceRaceRestartRsp
                case 20087: return 22391; // MuqadasPotionRestartDungeonReq
                case 20232: return 22591; // BrickBreakerTwiceStartRsp
                case 20236: return 21834; // GearActivityFinishPlayGearReq
                case 20380: return 20754; // TreasureSeelieCollectOrbsNotify
                case 20453: return 21851; // GearActivityFinishPlayPictureRsp
                case 20454: return 20086; // VintagePresentFinishNotify
                case 20562: return 22934; // CoinCollectInterruptPlayReq
                case 20567: return 24674; // FungusFighterRuntimeDataNotify
                case 20579: return 22890; // FungusFighterRestartTrainingDungeonRsp
                case 20589: return 23467; // GearActivityStartPlayGearReq
                case 20706: return 24712; // WindFieldRestartDungeonRsp
                case 20712: return 20622; // SingleStartBrickBreakerRsp
                case 20749: return 22991; // FungusFighterClearTrainingRuntimeDataRsp
                case 20776: return 21800; // GearActivityFinishPlayGearRsp
                case 20780: return 21208; // MuqadasPotionRestartDungeonRsp
                case 20791: return 21008; // EnterFungusFighterPlotDungeonRsp
                case 20883: return 23532; // FungusCultivateRsp
                case 20941: return 23462; // VintageMarketFinishStorePlayRsp
                case 21015: return 20302; // EndCoinCollectPlaySingleModeRsp
                case 21069: return 23489; // EffigyChallengeV2EnterDungeonReq
                case 21089: return 23428; // FungusFighterUseBackupFungusRsp
                case 21131: return 23141; // VintageMarketDeliverItemReq
                case 21293: return 24522; // EffigyChallengeV2RestartDungeonReq
                case 21298: return 24860; // VintageMarketStoreChooseStrategyRsp
                case 21366: return 24081; // MuqadasPotionCaptureWeaknessRsp
                case 21382: return 22367; // RestartCoinCollectPlaySingleModeReq
                case 21400: return 24142; // VintagePresentFinishNoify
                case 21512: return 21961; // InstableSprayLevelFinishNotify
                case 21588: return 20993; // VintageDecorateBoothRsp
                case 21624: return 21248; // VintageMarketStoreChooseStrategyReq
                case 21649: return 21780; // VintageHuntingStartGalleryReq
                case 21667: return 21214; // CoinCollectChooseSkillReq
                case 21806: return 24152; // InstableSpraySwitchTeamRsp
                case 21834: return 21700; // VintageMarketStoreViewStrategyReq
                case 21839: return 22830; // VintageCampStageFinishNotify
                case 21889: return 24312; // InstableSprayEnterDungeonReq
                case 21911: return 20676; // VintageMarketFinishStorePlayReq
                case 22024: return 24917; // EffigyChallengeV2EnterDungeonRsp
                case 22064: return 23147; // VintageMarketDividendFinishNotify
                case 22068: return 21951; // VintageHuntingStartGalleryRsp
                case 22075: return 21266; // FungusFighterUseBackupFungusReq
                case 22216: return 20066; // FungusRenameRsp
                case 22269: return 22112; // SingleRestartBrickBreakerRsp
                case 22325: return 20324; // SceneGalleryVintageHuntingSettleNotify
                case 22367: return 20626; // VintageMarketStoreUnlockSlotReq
                case 22391: return 21750; // GravenInnocencePhotoFinishReq
                case 22418: return 23948; // GravenInnocencePhotoFinishRsp
                case 22424: return 21294; // CoinCollectCheckDoubleStartPlayReq
                case 22447: return 22864; // VintageMarketStartStorePlayReq
                case 22498: return 22006; // FungusRenameReq
                case 22524: return 24857; // InstableSpraySwitchTeamReq
                case 22577: return 23864; // GravenInnocencePhotoReminderNotify
                case 22650: return 21804; // MuqadasPotionActivityEnterDungeonRsp
                case 22725: return 23678; // InstableSprayRestartDungeonReq
                case 22734: return 20005; // MuqadasPotionDungeonSettleNotify
                case 22772: return 24602; // MuqadasPotionActivityEnterDungeonReq
                case 22876: return 21593; // EnterFungusFighterTrainingDungeonRsp
                case 22881: return 21814; // VintageMarketStoreViewStrategyRsp
                case 22958: return 20846; // VintageDecorateBoothReq
                case 23017: return 22130; // VintageMarketStartStorePlayRsp
                case 23067: return 22882; // GravenInnocenceRaceRestartReq
                case 23071: return 21718; // CoinCollectPrepareReq
                case 23128: return 23133; // CharAmusementSettleNotify
                case 23294: return 24828; // RestartCoinCollectPlaySingleModeRsp
                case 23309: return 21570; // FungusFighterTrainingSelectFungusRsp
                case 23327: return 20733; // VintageMarketStoreUnlockSlotRsp
                case 23400: return 20702; // GravenInnocenceEditCarveCombinationRsp
                case 23416: return 24700; // CoinCollectChooseSkillRsp
                case 23467: return 23167; // EffigyChallengeV2RestartDungeonRsp
                case 23475: return 23931; // FungusFighterTrainingGallerySettleNotify
                case 23545: return 21749; // FungusCultivateReq
                case 23589: return 22509; // CoinCollectInterruptPlayRsp
                case 23617: return 24923; // InstableSprayRestartDungeonRsp
                case 23618: return 22448; // EffigyChallengeV2ChooseSkillRsp
                case 23663: return 23113; // SingleStartBrickBreakerReq
                case 23748: return 21269; // EffigyChallengeV2ChooseSkillReq
                case 23763: return 22181; // VintageMarketDeliverItemRsp
                case 23768: return 23053; // EnterFungusFighterPlotDungeonReq
                case 23793: return 21054; // GearActivityFinishPlayPictureReq
                case 23817: return 20930; // CoinCollectPrepareRsp
                case 23886: return 24616; // BrickBreakerSettleNotify
                case 23920: return 22174; // FungusFighterPlotInfoNotify
                case 23953: return 21025; // GearActivityStartPlayGearRsp
                case 23963: return 23216; // EndCoinCollectPlaySingleModeReq
                case 23992: return 23860; // EnterFungusFighterTrainingDungeonReq
                case 24124: return 21244; // CoinCollectCheckDoubleStartPlayRsp
                case 24127: return 24601; // IslandPartySettleNotify
                case 24150: return 23107; // GravenInnocenceEditCarveCombinationReq
                case 24162: return 20011; // MuqadasPotionCaptureWeaknessReq
                case 24249: return 23903; // FungusFighterTrainingSelectFungusReq
                case 24267: return 24137; // FungusFighterClearTrainingRuntimeDataReq
                case 24273: return 23980; // FungusFighterRestartTrainingDungeonReq
                case 24309: return 20731; // WindFieldRestartDungeonReq
                case 24329: return 24244; // VintageCampGroupBundleRegisterNotify
                case 24427: return 20681; // GravenInnocenceRaceSettleNotify
                case 24458: return 23381; // InstableSprayEnterDungeonRsp
                case 24700: return 24028; // BrickBreakerTwiceStartReq
                case 24761: return 22835; // EffigyChallengeV2DungeonInfoNotify
                case 24781: return 24201; // VintageMarketNpcEventFinishNotify
                case 24959: return 20667; // BrickBreakerQuitRsp
                case 24968: return 24550; // GearActivityStartPlayPictureReq
                case 24991: return 20137; // BrickBreakerQuitReq
                default: throw new NotSupportedException("The input New CmdId is unknown.");
            }
        }
        // DON'T INSERT ANY CODE HERE
        public static uint OldShiftToNew(uint Oldcmdid, ReadOnlySpan<byte> head)
        {
            switch (Oldcmdid)
            {
                case 4: return 44; // ClientBulletCreateNotify
                case 5: return 42; // UnionCmdNotify
                case 7: return 100; // PingReq
                case 12: return 56; // GmTalkRsp
                case 21: return 43; // PingRsp
                case 22: return 37; // WorldPlayerRTTNotify
                case 27: return 17; // ChangeServerGlobalValueNotify
                case 31: return 27; // ServerLogNotify
                case 35: return 19; // ShowMessageNotify
                case 39: return 16; // CheckSegmentCRCNotify
                case 47: return 76; // GetOnlinePlayerInfoRsp
                case 53: return 73; // CheckSegmentCRCReq
                case 65: return 89; // EchoNotify
                case 72: return 79; // KeepAliveNotify
                case 73: return 78; // GetOnlinePlayerListRsp
                case 75: return 39; // ClientReconnectNotify
                case 81: return 25; // ClientReportNotify
                case 82: return 90; // GetOnlinePlayerInfoReq
                case 88: return 94; // LastPacketPrintNotify
                case 90: return 47; // GetOnlinePlayerListReq
                case 93: return 7; // UpdateRedPointNotify
                case 94: return 5; // GmTalkNotify
                case 97: return 99; // RobotPushPlayerDataNotify
                case 98: return 30; // GmTalkReq
                case 99: return 57; // ServerTimeNotify
                case 101: // DON'T MODIFY THIS LINE - request special handle
                    try
                    {
                    #if PACKET_HEAD_PROTO_DEFINED
                    var packetHead = OldProtos.PacketHead.Parser.ParseFrom(head);
                    if (packetHead == null) return NewProtos.AskCmdId.GetCmdIdFromProtoname("ExclusiveRuleNotify");
                    if (packetHead.EnetChannelId == 2) return NewProtos.AskCmdId.GetCmdIdFromProtoname("DebugNotify");
                    else
                    #endif
                    return NewProtos.AskCmdId.GetCmdIdFromProtoname("ExclusiveRuleNotify");
                    }
                    catch (NotSupportedException ex)
                    {
                    throw new NotSupportedException("The target cmdid is unknown.", ex);
                    }
                    // DON'T MODIFY THIS LINE - end special handle
                case 102: return 193; // WorldOwnerDailyTaskNotify
                case 103: return 161; // PlayerLogoutNotify
                case 104: return 144; // SetOpenStateRsp
                case 105: return 142; // SetPlayerBornDataReq
                case 106: return 110; // CookRecipeDataNotify
                case 107: return 200; // PlayerLogoutReq
                case 108: return 162; // PlayerNicknameAuditDataNotify
                case 109: return 151; // PlayerNicknameNotify
                case 111: return 101; // DailyTaskFilterCityReq
                case 112: return 156; // PlayerLoginReq
                case 114: return 141; // ClientLockGameTimeNotify
                case 116: return 123; // GivingRecordNotify
                case 117: return 191; // DailyTaskScoreRewardNotify
                case 118: return 108; // ItemGivingRsp
                case 119: return 154; // AddRandTaskInfoNotify
                case 120: return 102; // GetNextResourceInfoRsp
                case 121: return 143; // PlayerLogoutRsp
                case 122: return 137; // SetPlayerNameRsp
                case 123: return 113; // GetGameplayRecommendationRsp
                case 124: return 122; // PlayerSetPauseReq
                case 125: return 129; // PlayerCompoundMaterialBoostRsp
                case 126: return 172; // PlayerRandomCookReq
                case 127: return 117; // OpenStateChangeNotify
                case 128: return 106; // CompoundUnlockNotify
                case 129: return 120; // TakePlayerLevelRewardReq
                case 130: return 150; // PlayerSetLanguageRsp
                case 131: return 127; // PlayerGameTimeNotify
                case 132: return 165; // PlayerInjectFixNotify
                case 133: return 166; // PlayerLuaShellNotify
                case 134: return 180; // CookGradeDataNotify
                case 135: return 119; // PlayerLoginRsp
                case 137: return 168; // ReadNicknameAuditRsp
                case 138: return 131; // AdjustWorldLevelRsp
                case 139: return 116; // PlayerPropChangeNotify
                case 140: return 185; // ItemGivingReq
                case 141: return 167; // GetCompoundDataReq
                case 142: return 111; // PlayerSetLanguageReq
                case 143: return 175; // PlayerCompoundMaterialRsp
                case 144: return 138; // DailyTaskFilterCityRsp
                case 145: return 196; // TakeBackGivingItemRsp
                case 146: return 164; // CompoundDataNotify
                case 147: return 176; // DoSetPlayerBornDataNotify
                case 148: return 148; // ClientTriggerEventNotify
                case 149: return 115; // GetCompoundDataRsp
                case 150: return 146; // PlayerCompoundMaterialReq
                case 151: return 155; // GetGameplayRecommendationReq
                case 152: return 171; // NicknameAuditConfigNotify
                case 153: return 173; // SetPlayerNameReq
                case 156: return 182; // PlayerSetPauseRsp
                case 157: return 163; // TakePlayerLevelRewardRsp
                case 158: return 124; // DailyTaskDataNotify
                case 159: return 177; // PlayerForceExitRsp
                case 160: return 136; // TaskVarNotify
                case 161: return 198; // RemoveRandTaskInfoNotify
                case 163: return 103; // PlayerRandomCookRsp
                case 164: return 112; // AdjustWorldLevelReq
                case 165: return 189; // SetOpenStateReq
                case 166: return 109; // PlayerCookArgsReq
                case 167: return 153; // DataResVersionNotify
                case 168: return 188; // PlayerCookArgsRsp
                case 170: return 149; // DailyTaskProgressNotify
                case 171: return 128; // TakeBackGivingItemReq
                case 172: return 179; // GetPlayerTokenReq
                case 173: return 178; // ChangeGameTimeReq
                case 174: return 134; // TakeCompoundOutputReq
                case 175: return 139; // PlayerPropNotify
                case 176: return 195; // TakeCompoundOutputRsp
                case 177: return 132; // ReadNicknameAuditReq
                case 178: return 186; // PlayerGameTimeByLuaNotify
                case 180: return 174; // AntiAddictNotify
                case 181: return 125; // SetPlayerPropRsp
                case 182: return 190; // SetPlayerBornDataRsp
                case 184: return 152; // ServerDisconnectClientNotify
                case 185: return 159; // PlayerCompoundMaterialBoostReq
                case 186: return 169; // DailyTaskUnlockedCitiesNotify
                case 187: return 187; // GivingRecordChangeNotify
                case 188: return 194; // PlayerCookRsp
                case 189: return 126; // PlayerForceExitReq
                case 190: return 147; // PlayerDataNotify
                case 191: return 121; // PlayerTimeNotify
                case 192: return 197; // GetNextResourceInfoReq
                case 193: return 107; // OpenStateUpdateNotify
                case 194: return 105; // PlayerCookReq
                case 195: return 133; // CookDataNotify
                case 197: return 199; // SetPlayerPropReq
                case 198: return 130; // GetPlayerTokenRsp
                case 199: return 157; // ChangeGameTimeRsp
                case 200: return 104; // PlayerLevelRewardUpdateNotify
                case 201: return 218; // BackMyWorldRsp
                case 202: return 293; // MarkEntityInMinMapNotify
                case 203: return 261; // SceneEntityDisappearNotify
                case 204: return 244; // GetSceneAreaRsp
                case 205: return 242; // EnterTransPointRegionNotify
                case 206: return 210; // SceneForceUnlockNotify
                case 207: return 300; // SceneInitFinishRsp
                case 208: return 262; // EnterSceneReadyReq
                case 209: return 251; // EnterSceneReadyRsp
                case 210: return 240; // ExecuteGadgetLuaRsp
                case 211: return 201; // SceneKickPlayerNotify
                case 212: return 256; // LeaveSceneRsp
                case 213: return 260; // ClientScriptEventNotify
                case 214: return 241; // PlayerEnterSceneInfoNotify
                case 215: return 281; // CutSceneEndNotify
                case 216: return 223; // LevelupCityReq
                case 217: return 291; // EndCameraSceneLookNotify
                case 218: return 208; // PlatformStartRouteNotify
                case 219: return 254; // UnmarkEntityInMinMapNotify
                case 220: return 202; // JoinPlayerSceneRsp
                case 221: return 243; // SceneEntityAppearNotify
                case 222: return 237; // EntityJumpNotify
                case 223: return 213; // AddSeenMonsterNotify
                case 224: return 222; // ClientTransmitRsp
                case 225: return 229; // WorldPlayerReviveReq
                case 226: return 272; // SceneCreateEntityRsp
                case 227: return 217; // SceneEntityDrownReq
                case 228: return 206; // SeeMonsterReq
                case 230: return 250; // SceneAreaWeatherNotify
                case 231: return 227; // SceneAvatarStaminaStepRsp
                case 232: return 265; // SealBattleProgressNotify
                case 233: return 266; // ScenePlayerSoundNotify
                case 234: return 280; // SceneForceLockNotify
                case 235: return 219; // SceneInitFinishReq
                case 236: return 258; // JoinPlayerFailNotify
                case 237: return 268; // EnterSceneDoneRsp
                case 238: return 231; // SceneKickPlayerRsp
                case 239: return 216; // SceneTransToPointReq
                case 240: return 285; // SceneRouteChangeNotify
                case 241: return 267; // GetAreaExplorePointReq
                case 242: return 211; // ExitSceneWeatherAreaNotify
                case 243: return 275; // EnterWorldAreaRsp
                case 244: return 238; // HitClientTrivialNotify
                case 245: return 296; // SceneTimeNotify
                case 247: return 276; // ScenePointUnlockNotify
                case 248: return 248; // ScenePlayerLocationNotify
                case 249: return 215; // GetAreaExplorePointRsp
                case 250: return 246; // EnterWorldAreaReq
                case 251: return 255; // SeeMonsterRsp
                case 252: return 271; // EnterScenePeerNotify
                case 253: return 273; // SceneTransToPointRsp
                case 254: return 214; // SetSceneWeatherAreaReq
                case 255: return 245; // SceneEntitiesMovesRsp
                case 256: return 282; // EnterSceneWeatherAreaNotify
                case 257: return 263; // ExecuteGroupTriggerReq
                case 258: return 224; // WorldPlayerLocationNotify
                case 259: return 277; // SealBattleEndNotify
                case 260: return 236; // ClientPauseNotify
                case 262: return 284; // CutSceneFinishNotify
                case 263: return 203; // SceneDestroyEntityReq
                case 264: return 212; // SceneKickPlayerReq
                case 265: return 289; // GetSceneAreaReq
                case 266: return 209; // PlatformStopRouteNotify
                case 267: return 253; // ScenePlayerInfoNotify
                case 268: return 288; // PlatformChangeRouteNotify
                case 269: return 235; // ExecuteGadgetLuaReq
                case 270: return 249; // BeginCameraSceneLookNotify
                case 271: return 228; // AllSeenMonsterNotify
                case 272: return 279; // PlayerEnterSceneNotify
                case 273: return 278; // SceneEntityMoveRsp
                case 274: return 234; // EntityForceSyncReq
                case 275: return 239; // SceneEntityMoveNotify
                case 276: return 295; // EntityForceSyncRsp
                case 277: return 232; // EnterSceneDoneReq
                case 278: return 286; // WorldPlayerReviveRsp
                case 279: return 292; // SceneEntitiesMovesReq
                case 280: return 274; // PersonalSceneJumpRsp
                case 281: return 225; // GetScenePointRsp
                case 282: return 290; // ExitTransPointRegionNotify
                case 283: return 270; // SetSceneWeatherAreaRsp
                case 284: return 252; // PersonalSceneJumpReq
                case 285: return 259; // WorldPlayerDieNotify
                case 286: return 269; // BackMyWorldReq
                case 287: return 287; // LevelupCityRsp
                case 288: return 294; // SceneCreateEntityReq
                case 289: return 226; // SealBattleBeginNotify
                case 290: return 247; // SceneEntityMoveReq
                case 291: return 221; // ClientTransmitReq
                case 292: return 297; // JoinPlayerSceneReq
                case 293: return 207; // SceneAreaUnlockNotify
                case 294: return 205; // SceneEntityDrownRsp
                case 295: return 233; // SceneDestroyEntityRsp
                case 296: return 283; // CutSceneBeginNotify
                case 297: return 299; // GetScenePointReq
                case 298: return 230; // LeaveSceneReq
                case 299: return 257; // SceneAvatarStaminaStepReq
                case 300: return 204; // ExecuteGroupTriggerRsp
                case 302: return 393; // DelTeamEntityNotify
                case 303: return 361; // EvtFaceToEntityNotify
                case 304: return 344; // EvtAvatarEnterFocusNotify
                case 307: return 400; // EvtCreateGadgetNotify
                case 312: return 356; // HostPlayerNotify
                case 316: return 323; // LuaSetOptionNotify
                case 317: return 391; // SyncTeamEntityNotify
                case 318: return 308; // EvtAvatarLockChairReq
                case 319: return 354; // CombatInvocationsNotify
                case 321: return 343; // EvtDestroyGadgetNotify
                case 324: return 322; // EvtAvatarSitDownNotify
                case 326: return 372; // AvatarBuffDelNotify
                case 327: return 317; // EvtAvatarUpdateFocusNotify
                case 329: return 320; // EvtAiSyncCombatThreatInfoNotify
                case 330: return 350; // CreateMassiveEntityRsp
                case 331: return 327; // EvtAnimatorStateChangedNotify
                case 333: return 366; // EvtBeingHealedNotify
                case 334: return 380; // AvatarEnterElementViewNotify
                case 335: return 319; // EvtDoSkillSuccNotify
                case 340: return 385; // EntityAiKillSelfNotify
                case 342: return 311; // CreateMassiveEntityReq
                case 343: return 375; // EvtEntityRenderersChangedNotify
                case 346: return 364; // EvtBeingHitsCombineNotify
                case 348: return 348; // EvtBulletHitNotify
                case 350: return 346; // TriggerCreateGadgetToEquipPartNotify
                case 356: return 382; // EvtAvatarStandUpNotify
                case 357: return 363; // MassiveEntityElementOpBatchNotify
                case 358: return 324; // DestroyMassiveEntityNotify
                case 361: return 398; // ServerBuffChangeNotify
                case 363: return 303; // MonsterAlertChangeNotify
                case 365: return 389; // EvtBulletMoveNotify
                case 366: return 309; // EvtAvatarLockChairRsp
                case 367: return 353; // CreateMassiveEntityNotify
                case 368: return 388; // ReportFightAntiCheatNotify
                case 370: return 349; // MassiveEntityStateChangedNotify
                case 372: return 379; // EvtBeingHitNotify
                case 373: return 378; // EvtCostStaminaNotify
                case 374: return 334; // AnimatorForceSetAirMoveNotify
                case 375: return 339; // EvtRushMoveNotify
                case 376: return 395; // EvtAiSyncSkillCdNotify
                case 381: return 325; // EvtEntityStartDieEndNotify
                case 384: return 352; // EvtLocalGadgetOwnerLeaveSceneNotify
                case 387: return 387; // EvtDestroyServerGadgetNotify
                case 388: return 394; // AvatarBuffAddNotify
                case 390: return 347; // EvtFaceToDirNotify
                case 393: return 307; // EvtAvatarExitFocusNotify
                case 394: return 305; // EntityAuthorityChangeNotify
                case 395: return 333; // MonsterForceAlertNotify
                case 397: return 399; // EvtBulletDeactiveNotify
                case 398: return 330; // EvtAnimatorParameterNotify
                case 399: return 357; // EvtSetAttackTargetNotify
                case 400: return 304; // EntityAiSyncNotify
                case 402: return 493; // ParentQuestInferenceDataNotify
                case 403: return 461; // AddQuestContentProgressRsp
                case 404: return 444; // BargainStartNotify
                case 405: return 442; // ChapterStateNotify
                case 406: return 410; // ServerCondMeetQuestListUpdateNotify
                case 407: return 500; // FinishedParentQuestUpdateNotify
                case 412: return 456; // QuestDelNotify
                case 416: return 423; // SubmitInferenceWordRsp
                case 417: return 491; // GetParentQuestVideoKeyRsp
                case 419: return 454; // InterpretInferenceWordReq
                case 421: return 443; // AddQuestContentProgressReq
                case 422: return 437; // QuestDestroyNpcReq
                case 424: return 422; // CancelFinishParentQuestNotify
                case 426: return 472; // GetBargainDataRsp
                case 427: return 417; // BargainOfferPriceRsp
                case 429: return 420; // AssociateInferenceWordReq
                case 430: return 450; // NpcTalkStateNotify
                case 431: return 427; // QuestCreateEntityRsp
                case 434: return 480; // QuestGlobalVarNotify
                case 435: return 419; // FinishedParentQuestNotify
                case 439: return 416; // QuestUpdateQuestVarRsp
                case 440: return 485; // QuestRenameAvatarRsp
                case 441: return 467; // RedeemLegendaryKeyRsp
                case 442: return 411; // PersonalLineNewUnlockNotify
                case 443: return 475; // QuestTransmitRsp
                case 446: return 464; // RedeemLegendaryKeyReq
                case 447: return 476; // QuestUpdateQuestVarReq
                case 448: return 448; // QuestDestroyEntityRsp
                case 449: return 415; // UnlockPersonalLineReq
                case 450: return 446; // QuestTransmitReq
                case 453: return 473; // QuestUpdateQuestVarNotify
                case 456: return 482; // QuestUpdateQuestTimeVarNotify
                case 457: return 463; // AssociateInferenceWordRsp
                case 458: return 424; // GetQuestLackingResourceRsp
                case 461: return 498; // InterpretInferenceWordRsp
                case 463: return 403; // GetAllActivatedBargainDataReq
                case 465: return 489; // QuestDestroyNpcRsp
                case 467: return 453; // GetQuestLackingResourceReq
                case 470: return 449; // GetParentQuestVideoKeyReq
                case 472: return 479; // QuestListNotify
                case 473: return 478; // GetQuestTalkHistoryRsp
                case 474: return 434; // PersonalLineAllDataReq
                case 475: return 439; // QuestDestroyEntityReq
                case 476: return 495; // PersonalLineAllDataRsp
                case 482: return 490; // QuestProgressUpdateNotify
                case 487: return 487; // QuestRenameAvatarReq
                case 488: return 494; // GetBargainDataReq
                case 490: return 447; // GetQuestTalkHistoryReq
                case 491: return 421; // UnlockPersonalLineRsp
                case 493: return 407; // BargainOfferPriceReq
                case 494: return 405; // BargainTerminateNotify
                case 495: return 433; // GetAllActivatedBargainDataRsp
                case 498: return 430; // QuestListUpdateNotify
                case 499: return 457; // QuestCreateEntityReq
                case 500: return 404; // SubmitInferenceWordReq
                case 503: return 561; // MeetNpcReq
                case 507: return 600; // GetSceneNpcPositionRsp
                case 521: return 543; // MetNpcIdListNotify
                case 535: return 519; // GetSceneNpcPositionReq
                case 572: return 579; // NpcTalkReq
                case 573: return 578; // FinishedTalkIdListNotify
                case 590: return 547; // MeetNpcRsp
                case 598: return 530; // NpcTalkRsp
                case 602: return 693; // BuyResinReq
                case 604: return 644; // ReliquaryUpgradeReq
                case 605: return 642; // TakeoffEquipReq
                case 606: return 610; // WeaponAwakenRsp
                case 607: return 700; // ItemAddHintNotify
                case 611: return 601; // ReliquaryDecomposeRsp
                case 612: return 656; // StoreItemChangeNotify
                case 614: return 641; // ClosedItemNotify
                case 616: return 623; // McoinExchangeHcoinReq
                case 618: return 608; // DestroyMaterialRsp
                case 619: return 654; // BuyResinRsp
                case 620: return 602; // SetIsAutoUnlockSpecificEquipReq
                case 622: return 637; // WeaponPromoteReq
                case 624: return 622; // ForgeQueueManipulateReq
                case 626: return 672; // AvatarCardChangeRsp
                case 627: return 617; // ReliquaryPromoteReq
                case 629: return 620; // TakeMaterialDeleteReturnReq
                case 631: return 627; // DropItemRsp
                case 632: return 665; // CombineFormulaDataNotify
                case 633: return 666; // CalcWeaponUpgradeReturnItemsReq
                case 634: return 680; // ItemCdGroupTimeNotify
                case 635: return 619; // StoreItemDelNotify
                case 638: return 631; // ReliquaryDecomposeReq
                case 639: return 616; // WeaponUpgradeReq
                case 640: return 685; // DestroyMaterialReq
                case 641: return 667; // ForgeGetQueueDataRsp
                case 642: return 611; // ResinChangeNotify
                case 643: return 675; // CombineReq
                case 644: return 638; // ReliquaryFilterStateSaveNotify
                case 646: return 664; // ForgeGetQueueDataReq
                case 647: return 676; // AvatarEquipChangeNotify
                case 649: return 615; // ForgeStartReq
                case 650: return 646; // DropHintNotify
                case 653: return 673; // WeaponUpgradeRsp
                case 656: return 682; // ForgeQueueManipulateRsp
                case 657: return 663; // TakeMaterialDeleteReturnRsp
                case 659: return 677; // CombineDataNotify
                case 661: return 698; // MaterialDeleteReturnNotify
                case 663: return 603; // GrantRewardNotify
                case 664: return 612; // SetIsAutoUnlockSpecificEquipRsp
                case 665: return 689; // WeaponPromoteRsp
                case 666: return 609; // SetEquipLockStateReq
                case 668: return 688; // SetEquipLockStateRsp
                case 672: return 679; // PlayerStoreNotify
                case 673: return 678; // UseItemRsp
                case 674: return 634; // CombineRsp
                case 676: return 695; // ForgeQueueDataNotify
                case 680: return 674; // ForgeDataNotify
                case 681: return 625; // WearEquipRsp
                case 682: return 690; // TakeoffEquipRsp
                case 684: return 652; // CalcWeaponUpgradeReturnItemsRsp
                case 686: return 669; // ReliquaryFilterStateNotify
                case 687: return 687; // McoinExchangeHcoinRsp
                case 688: return 694; // AvatarCardChangeReq
                case 689: return 626; // ForgeFormulaDataNotify
                case 690: return 647; // UseItemReq
                case 691: return 621; // ForgeStartRsp
                case 692: return 697; // CheckAddItemExceedLimitNotify
                case 693: return 607; // ReliquaryUpgradeRsp
                case 694: return 605; // ReliquaryPromoteRsp
                case 695: return 633; // WeaponAwakenReq
                case 697: return 699; // WearEquipReq
                case 698: return 630; // StoreWeightLimitNotify
                case 699: return 657; // DropItemReq
                case 700: return 604; // MaterialDeleteUpdateNotify
                case 703: return 761; // GetActivityShopSheetInfoReq
                case 707: return 800; // GetShopmallDataReq
                case 712: return 756; // BuyGoodsReq
                case 721: return 743; // GetShopmallDataRsp
                case 735: return 719; // BuyGoodsRsp
                case 772: return 779; // GetShopReq
                case 773: return 778; // BatchBuyGoodsReq
                case 790: return 747; // GetActivityShopSheetInfoRsp
                case 798: return 730; // GetShopRsp
                case 799: return 757; // BatchBuyGoodsRsp
                case 803: return 861; // BossChestActivateNotify
                case 804: return 844; // VehicleInteractRsp
                case 805: return 842; // FoundationReq
                case 806: return 810; // LiveEndNotify
                case 807: return 900; // SelectWorktopOptionReq
                case 812: return 856; // GadgetStateNotify
                case 821: return 843; // SelectWorktopOptionRsp
                case 822: return 837; // GadgetChainLevelChangeNotify
                case 826: return 872; // LiveStartNotify
                case 827: return 817; // CreateVehicleRsp
                case 831: return 827; // GadgetPlayDataNotify
                case 834: return 880; // VehicleStaminaNotify
                case 835: return 819; // WorktopOptionNotify
                case 839: return 816; // GadgetTalkChangeNotify
                case 841: return 867; // DeshretObeliskChestInfoNotify
                case 843: return 875; // GadgetChangeLevelTagReq
                case 846: return 864; // NightCrowGadgetObservationMatchRsp
                case 847: return 876; // FoundationNotify
                case 848: return 848; // GadgetGeneralRewardInfoNotify
                case 850: return 846; // GadgetCustomTreeInfoNotify
                case 853: return 873; // GadgetChainLevelUpdateNotify
                case 863: return 803; // ProjectorOptionReq
                case 865: return 889; // VehicleInteractReq
                case 872: return 879; // GadgetInteractReq
                case 873: return 878; // GadgetPlayStartNotify
                case 874: return 834; // GadgetChangeLevelTagRsp
                case 875: return 839; // GadgetPlayUidOpNotify
                case 876: return 895; // NightCrowGadgetObservationMatchReq
                case 881: return 825; // UpdateAbilityCreatedMovingPlatformNotify
                case 882: return 890; // FoundationRsp
                case 888: return 894; // RequestLiveInfoRsp
                case 890: return 847; // BlossomChestInfoNotify
                case 893: return 807; // CreateVehicleReq
                case 894: return 805; // RequestLiveInfoReq
                case 895: return 833; // ProjectorOptionRsp
                case 897: return 899; // GadgetAutoPickDropInfoNotify
                case 898: return 830; // GadgetInteractRsp
                case 899: return 857; // GadgetPlayStopNotify
                case 902: return 993; // DungeonInterruptChallengeRsp
                case 903: return 961; // DungeonWayPointNotify
                case 904: return 944; // DungeonGetStatueDropRsp
                case 905: return 942; // DungeonPlayerDieRsp
                case 906: return 910; // DungeonCandidateTeamCreateRsp
                case 907: return 1000; // PlayerQuitDungeonReq
                case 912: return 956; // PlayerEnterDungeonReq
                case 916: return 923; // DungeonRestartInviteReplyRsp
                case 917: return 991; // DungeonInterruptChallengeReq
                case 918: return 908; // DungeonCandidateTeamSetChangingAvatarReq
                case 919: return 954; // InteractDailyDungeonInfoNotify
                case 921: return 943; // PlayerQuitDungeonRsp
                case 922: return 937; // DungeonFollowNotify
                case 924: return 922; // DungeonCandidateTeamSetReadyRsp
                case 926: return 972; // DungeonCandidateTeamPlayerLeaveNotify
                case 927: return 917; // DungeonCandidateTeamInfoNotify
                case 929: return 920; // DungeonRestartRsp
                case 930: return 950; // GetDailyDungeonEntryInfoReq
                case 931: return 927; // DungeonPlayerDieNotify
                case 933: return 966; // DungeonReviseLevelNotify
                case 934: return 980; // DungeonCandidateTeamInviteReq
                case 935: return 919; // PlayerEnterDungeonRsp
                case 939: return 916; // DungeonChallengeFinishNotify
                case 940: return 985; // DungeonRestartResultNotify
                case 941: return 967; // DungeonCandidateTeamReplyInviteReq
                case 942: return 911; // DungeonCandidateTeamChangeAvatarRsp
                case 943: return 975; // DungeonCandidateTeamKickReq
                case 946: return 964; // DungeonCandidateTeamLeaveRsp
                case 947: return 976; // DungeonChallengeBeginNotify
                case 948: return 948; // DungeonDieOptionRsp
                case 949: return 915; // DungeonCandidateTeamReplyInviteRsp
                case 950: return 946; // DungeonCandidateTeamInviteRsp
                case 953: return 973; // ChallengeDataNotify
                case 956: return 982; // DungeonCandidateTeamChangeAvatarReq
                case 957: return 963; // DungeonRestartInviteNotify
                case 958: return 924; // DungeonSlipRevivePointActivateReq
                case 961: return 998; // DungeonRestartReq
                case 963: return 903; // DungeonCandidateTeamDismissNotify
                case 965: return 989; // DungeonGetStatueDropReq
                case 966: return 909; // DungeonCandidateTeamSetChangingAvatarRsp
                case 967: return 953; // GetDailyDungeonEntryInfoRsp
                case 968: return 988; // MistTrialFloorLevelNotify
                case 970: return 949; // DungeonSlipRevivePointActivateRsp
                case 972: return 979; // DungeonEntryInfoReq
                case 973: return 978; // DungeonWayPointActivateRsp
                case 974: return 934; // DungeonCandidateTeamKickRsp
                case 975: return 939; // DungeonDieOptionReq
                case 976: return 995; // DungeonCandidateTeamLeaveReq
                case 981: return 925; // DungeonPlayerDieReq
                case 982: return 990; // DungeonDataNotify
                case 987: return 987; // DungeonRestartInviteReplyNotify
                case 988: return 994; // DungeonCandidateTeamRefuseNotify
                case 990: return 947; // DungeonWayPointActivateReq
                case 991: return 921; // DungeonCandidateTeamSetReadyReq
                case 993: return 907; // ChallengeRecordNotify
                case 994: return 905; // DungeonCandidateTeamInviteNotify
                case 995: return 933; // DungeonCandidateTeamCreateReq
                case 997: return 999; // DungeonShowReminderNotify
                case 998: return 930; // DungeonEntryInfoRsp
                case 999: return 957; // DungeonSettleNotify
                case 1000: return 904; // DungeonRestartInviteReplyReq
                case 1003: return 1061; // AvatarSkillMaxChargeCountNotify
                case 1005: return 1042; // CanUseSkillNotify
                case 1007: return 1100; // BigTalentPointConvertReq
                case 1012: return 1056; // AvatarUnlockTalentNotify
                case 1021: return 1043; // BigTalentPointConvertRsp
                case 1031: return 1027; // ProudSkillChangeNotify
                case 1035: return 1019; // AvatarSkillDepotChangeNotify
                case 1048: return 1048; // AvatarSkillUpgradeRsp
                case 1072: return 1079; // UnlockAvatarTalentReq
                case 1073: return 1078; // ProudSkillUpgradeReq
                case 1075: return 1039; // AvatarSkillUpgradeReq
                case 1081: return 1025; // ProudSkillExtraLevelNotify
                case 1082: return 1090; // TeamResonanceChangeNotify
                case 1090: return 1047; // AvatarSkillInfoNotify
                case 1097: return 1099; // AvatarSkillChangeNotify
                case 1098: return 1030; // UnlockAvatarTalentRsp
                case 1099: return 1057; // ProudSkillUpgradeRsp
                case 1103: return 1161; // ClientAbilitiesInitFinishCombineNotify
                case 1105: return 1142; // ServerCombatEndNotify
                case 1107: return 1200; // AbilityInvocationFailNotify
                case 1112: return 1156; // ClientAbilityInitBeginNotify
                case 1131: return 1127; // AbilityChangeNotify
                case 1135: return 1119; // ClientAbilityInitFinishNotify
                case 1147: return 1176; // PerformOperationNotify
                case 1148: return 1148; // ServerUpdateGlobalValueNotify
                case 1172: return 1179; // AbilityInvocationFixedNotify
                case 1175: return 1139; // ClientAbilityChangeNotify
                case 1181: return 1125; // ClientAIStateNotify
                case 1182: return 1190; // ClientRemoveCombatEndModifierNotify
                case 1197: return 1199; // ServerGlobalValueChangeNotify
                case 1198: return 1130; // AbilityInvocationsNotify
                case 1199: return 1157; // WindSeedClientNotify
                case 1203: return 1261; // EntityFightPropChangeReasonNotify
                case 1207: return 1300; // AvatarFightPropNotify
                case 1212: return 1256; // EntityFightPropNotify
                case 1221: return 1243; // AvatarFightPropUpdateNotify
                case 1231: return 1227; // AvatarPropNotify
                case 1235: return 1219; // EntityFightPropUpdateNotify
                case 1272: return 1279; // EntityPropNotify
                case 1273: return 1278; // AvatarPropChangeReasonNotify
                case 1275: return 1239; // MarkNewNotify
                case 1290: return 1247; // AvatarLifeStateChangeNotify
                case 1298: return 1230; // LifeStateChangeNotify
                case 1299: return 1257; // PlayerPropChangeReasonNotify
                case 1372: return 1379; // MonsterSummonTagNotify
                case 1403: return 1461; // DelMailRsp
                case 1407: return 1500; // GetMailItemRsp
                case 1412: return 1456; // ReadMailNotify
                case 1421: return 1443; // DelMailReq
                case 1431: return 1427; // GetAllMailReq
                case 1435: return 1419; // GetMailItemReq
                case 1448: return 1448; // ChangeMailStarNotify
                case 1473: return 1478; // GetAuthkeyRsp
                case 1475: return 1439; // GetAllMailRsp
                case 1481: return 1425; // GetAllMailResultNotify
                case 1490: return 1447; // GetAuthkeyReq
                case 1497: return 1499; // GetAllMailNotify
                case 1498: return 1430; // MailChangeNotify
                case 1499: return 1457; // ClientNewMailNotify
                case 1503: return 1561; // GachaOpenWishNotify
                case 1507: return 1600; // GachaWishReq
                case 1512: return 1556; // DoGachaReq
                case 1521: return 1543; // GachaWishRsp
                case 1535: return 1519; // DoGachaRsp
                case 1572: return 1579; // GetGachaInfoReq
                case 1590: return 1547; // GachaSimpleInfoNotify
                case 1598: return 1530; // GetGachaInfoRsp
                case 1603: return 1706; // ChangeTeamNameReq
                case 1606: return 1753; // AvatarFetterLevelRewardRsp
                case 1607: return 1699; // ChangeAvatarRsp
                case 1610: return 1695; // AvatarDieAnimationEndReq
                case 1623: return 1640; // AvatarExpeditionGetRewardReq
                case 1633: return 1607; // AvatarDataNotify
                case 1635: return 1700; // ItemRenameAvatarRsp
                case 1639: return 1710; // AvatarPromoteRsp
                case 1640: return 1682; // ChangeAvatarReq
                case 1642: return 1772; // SpringUseRsp
                case 1643: return 1790; // AvatarFlycloakChangeNotify
                case 1644: return 1665; // AvatarChangeCostumeNotify
                case 1645: return 1609; // AvatarChangeCostumeRsp
                case 1646: return 1622; // SetUpAvatarTeamRsp
                case 1647: return 1620; // AvatarChangeAnimHashRsp
                case 1648: return 1621; // AvatarExpeditionAllDataRsp
                case 1651: return 1717; // AvatarChangeElementTypeRsp
                case 1653: return 1642; // AvatarFetterLevelRewardReq
                case 1654: return 1793; // FocusAvatarReq
                case 1655: return 1610; // AddNoGachaAvatarCardNotify
                case 1656: return 1676; // AvatarGainFlycloakNotify
                case 1661: return 1778; // ChooseCurAvatarTeamRsp
                case 1662: return 1708; // AvatarEquipAffixStartNotify
                case 1664: return 1731; // AvatarPromoteReq
                case 1666: return 1696; // ChangeTeamNameRsp
                case 1677: return 1625; // AvatarGainCostumeNotify
                case 1680: return 1797; // AvatarRenameInfoNotify
                case 1681: return 1786; // FocusAvatarRsp
                case 1683: return 1658; // AvatarPromoteGetRewardRsp
                case 1684: return 1624; // PersistentDungeonSwitchAvatarReq
                case 1687: return 1616; // AddBackupAvatarTeamReq
                case 1690: return 1713; // SetUpAvatarTeamReq
                case 1693: return 1766; // AvatarSatiationDataNotify
                case 1694: return 1604; // AvatarDieAnimationEndRsp
                case 1696: return 1684; // AvatarPromoteGetRewardReq
                case 1698: return 1613; // AvatarWearFlycloakRsp
                case 1701: return 1792; // AvatarUpgradeRsp
                case 1706: return 1739; // AvatarTeamUpdateNotify
                case 1708: return 1645; // ChangeMpTeamAvatarReq
                case 1711: return 1767; // AvatarChangeAnimHashReq
                case 1715: return 1697; // AvatarExpeditionStartReq
                case 1719: return 1646; // AvatarExpeditionStartRsp
                case 1722: return 1685; // AvatarExpeditionAllDataReq
                case 1726: return 1702; // AvatarExpeditionCallBackRsp
                case 1729: return 1666; // DelBackupAvatarTeamRsp
                case 1731: return 1698; // DelBackupAvatarTeamReq
                case 1735: return 1782; // AddBackupAvatarTeamRsp
                case 1737: return 1636; // AvatarWearFlycloakReq
                case 1743: return 1765; // RefreshBackgroundAvatarReq
                case 1748: return 1651; // SpringUseReq
                case 1749: return 1615; // AvatarTeamAllDataNotify
                case 1750: return 1688; // ItemRenameAvatarReq
                case 1752: return 1777; // AvatarExpeditionCallBackReq
                case 1753: return 1730; // ChangeMpTeamAvatarRsp
                case 1768: return 1677; // PersistentDungeonSwitchAvatarRsp
                case 1769: return 1757; // AvatarAddNotify
                case 1770: return 1653; // AvatarUpgradeReq
                case 1771: return 1632; // AvatarExpeditionDataNotify
                case 1773: return 1769; // AvatarDelNotify
                case 1775: return 1728; // SceneTeamUpdateNotify
                case 1778: return 1707; // AvatarChangeCostumeReq
                case 1782: return 1617; // AvatarFetterDataNotify
                case 1784: return 1715; // AvatarExpeditionGetRewardRsp
                case 1785: return 1779; // AvatarChangeElementTypeReq
                case 1796: return 1738; // ChooseCurAvatarTeamReq
                case 1800: return 1744; // RefreshBackgroundAvatarRsp
                case 1801: return 1806; // MpBlockNotify
                case 1802: return 1827; // PlayerApplyEnterMpResultReq
                case 1807: return 1835; // PlayerApplyEnterMpResultNotify
                case 1812: return 1810; // MpPlayGuestReplyNotify
                case 1813: return 1850; // MpPlayPrepareInterruptNotify
                case 1814: return 1802; // MpPlayOwnerCheckReq
                case 1815: return 1839; // MpPlayInviteResultNotify
                case 1818: return 1841; // PlayerApplyEnterMpReq
                case 1820: return 1815; // PlayerSetOnlyMPWithPSPlayerReq
                case 1822: return 1817; // PlayerPreEnterMpNotify
                case 1823: return 1830; // MpPlayOwnerStartInviteRsp
                case 1825: return 1822; // PlayerApplyEnterMpRsp
                case 1826: return 1842; // PlayerApplyEnterMpNotify
                case 1829: return 1844; // PlayerQuitFromMpNotify
                case 1831: return 1831; // PlayerApplyEnterMpResultRsp
                case 1833: return 1801; // MpPlayPrepareNotify
                case 1835: return 1821; // MpPlayOwnerInviteNotify
                case 1837: return 1809; // MpPlayOwnerStartInviteReq
                case 1841: return 1808; // PSPlayerApplyEnterMpReq
                case 1842: return 1845; // PSPlayerApplyEnterMpRsp
                case 1844: return 1812; // GetPlayerMpModeAvailabilityReq
                case 1845: return 1818; // PlayerSetOnlyMPWithPSPlayerRsp
                case 1847: return 1843; // MpPlayOwnerCheckRsp
                case 1848: return 1837; // MpPlayGuestReplyInviteReq
                case 1849: return 1834; // GetPlayerMpModeAvailabilityRsp
                case 1850: return 1804; // MpPlayGuestReplyInviteRsp
                case 1901: return 1930; // GetInvestigationMonsterReq
                case 1902: return 1908; // InvestigationReadQuestDailyNotify
                case 1906: return 1910; // InvestigationMonsterUpdateNotify
                case 1910: return 1901; // GetInvestigationMonsterRsp
                case 1911: return 1915; // PlayerInvestigationNotify
                case 1912: return 1924; // TakeInvestigationRewardReq
                case 1915: return 1921; // MarkTargetInvestigationMonsterNotify
                case 1916: return 1905; // TakeInvestigationTargetRewardRsp
                case 1918: return 1903; // TakeInvestigationTargetRewardReq
                case 1921: return 1926; // InvestigationQuestDailyNotify
                case 1922: return 1907; // TakeInvestigationRewardRsp
                case 1928: return 1916; // PlayerInvestigationAllInfoNotify
                case 1929: return 1902; // PlayerInvestigationTargetNotify
                case 1951: return 1956; // MainCoopFailNotify
                case 1952: return 1977; // FinishMainCoopReq
                case 1957: return 1985; // SaveMainCoopRsp
                case 1962: return 1960; // SaveCoopDialogRsp
                case 1963: return 2000; // SetCoopChapterViewedRsp
                case 1964: return 1952; // StartCoopPointRsp
                case 1965: return 1989; // SetCoopChapterViewedReq
                case 1968: return 1991; // MainCoopUpdateNotify
                case 1970: return 1965; // UnlockCoopChapterReq
                case 1972: return 1967; // CoopChapterUpdateNotify
                case 1973: return 1980; // TakeCoopRewardReq
                case 1975: return 1972; // SaveMainCoopReq
                case 1976: return 1992; // AllCoopInfoNotify
                case 1979: return 1994; // CoopDataNotify
                case 1981: return 1981; // FinishMainCoopRsp
                case 1983: return 1951; // CoopCgShowNotify
                case 1985: return 1971; // TakeCoopRewardRsp
                case 1987: return 1959; // CancelCoopTaskRsp
                case 1991: return 1958; // CoopPointUpdateNotify
                case 1992: return 1995; // StartCoopPointReq
                case 1994: return 1962; // CoopCgUpdateNotify
                case 1995: return 1968; // UnlockCoopChapterRsp
                case 1997: return 1993; // CancelCoopTaskReq
                case 1998: return 1987; // CoopProgressUpdateNotify
                case 1999: return 1984; // CoopRewardUpdateNotify
                case 2000: return 1954; // SaveCoopDialogReq
                case 2004: return 2087; // GetAuthSalesmanInfoRsp
                case 2006: return 2153; // BlessingAcceptGivePicReq
                case 2007: return 2099; // TakeEffigyRewardRsp
                case 2008: return 2018; // ActivityCoinInfoNotify
                case 2009: return 2147; // ActivityBannerClearReq
                case 2013: return 2134; // TrialAvatarFirstPassDungeonNotify
                case 2016: return 2091; // AsterProgressInfoNotify
                case 2017: return 2136; // FleurFairFallSettleNotify
                case 2019: return 2199; // SeaLampTakeContributionRewardReq
                case 2021: return 2028; // SetCurExpeditionChallengeIdReq
                case 2022: return 2123; // DragonSpineChapterOpenNotify
                case 2025: return 2120; // WaterSpritePhaseFinishNotify
                case 2028: return 2052; // ActivitySelectAvatarCardReq
                case 2029: return 2089; // LoadActivityTerrainNotify
                case 2030: return 2164; // ArenaChallengeFinishNotify
                case 2031: return 2055; // AsterMidInfoNotify
                case 2032: return 2135; // SeaLampPopularityNotify
                case 2034: return 2109; // ActivityTakeWatcherRewardRsp
                case 2035: return 2100; // GetExpeditionAssistInfoListRsp
                case 2036: return 2140; // AsterMiscInfoNotify
                case 2037: return 2152; // FlightActivityRestartReq
                case 2038: return 2073; // ActivityTakeWatcherRewardReq
                case 2039: return 2110; // SelectEffigyChallengeConditionRsp
                case 2040: return 2082; // TakeEffigyRewardReq
                case 2041: return 2043; // GetActivityInfoRsp
                case 2042: return 2172; // RestartEffigyChallengeRsp
                case 2043: return 2190; // BlessingGetFriendPicListReq
                case 2044: return 2065; // BlessingAcceptAllGivePicRsp
                case 2045: return 2009; // BlessingAcceptAllGivePicReq
                case 2046: return 2022; // EffigyChallengeResultNotify
                case 2048: return 2021; // TreasureMapMpChallengeNotify
                case 2049: return 2005; // SetCurExpeditionChallengeIdRsp
                case 2052: return 2061; // FleurFairReplayMiniGameRsp
                case 2053: return 2042; // BlessingGiveFriendPicRsp
                case 2055: return 2010; // BlessingAcceptGivePicRsp
                case 2056: return 2076; // BlessingGetFriendPicListRsp
                case 2060: return 2119; // ActivityInfoNotify
                case 2061: return 2178; // TakeEffigyFirstPassRewardRsp
                case 2062: return 2108; // BlessingGiveFriendPicReq
                case 2064: return 2131; // SelectEffigyChallengeConditionReq
                case 2065: return 2035; // DragonSpineChapterProgressChangeNotify
                case 2068: return 2121; // AsterLittleInfoNotify
                case 2069: return 2149; // DragonSpineChapterFinishNotify
                case 2070: return 2049; // GetAuthSalesmanInfoReq
                case 2071: return 2012; // ActivitySaleChangeNotify
                case 2073: return 2124; // ActivityScheduleInfoNotify
                case 2076: return 2175; // ReceivedTrialAvatarActivityRewardRsp
                case 2079: return 2146; // FleurFairMusicGameStartRsp
                case 2080: return 2197; // ExpeditionTakeRewardRsp
                case 2081: return 2186; // BlessingScanReq
                case 2083: return 2058; // BlessingGetAllRecvPicRecordListRsp
                case 2087: return 2016; // ExpeditionStartReq
                case 2088: return 2086; // DragonSpineCoinChangeNotify
                case 2089: return 2030; // FinishDeliveryNotify
                case 2090: return 2113; // EffigyChallengeInfoNotify
                case 2091: return 2074; // ExpeditionChallengeFinishedNotify
                case 2092: return 2064; // ServerAnnounceRevokeNotify
                case 2093: return 2166; // BlessingScanRsp
                case 2095: return 2011; // GetActivityInfoReq
                case 2096: return 2084; // BlessingGetAllRecvPicRecordListReq
                case 2097: return 2019; // TakeAsterSpecialRewardReq
                case 2098: return 2013; // BlessingRedeemRewardRsp
                case 2099: return 2159; // FleurFairBalloonSettleNotify
                case 2104: return 2151; // SalesmanDeliverItemRsp
                case 2105: return 2114; // SeaLampFlyLampNotify
                case 2107: return 2056; // GetActivityScheduleRsp
                case 2109: return 2090; // ActivityTakeWatcherRewardBatchRsp
                case 2110: return 2026; // SalesmanTakeRewardRsp
                case 2113: return 2156; // FleurFairMusicGameSettleRsp
                case 2114: return 2188; // SeaLampCoinNotify
                case 2115: return 2097; // TreasureMapBonusChallengeNotify
                case 2118: return 2142; // EnterTrialAvatarActivityDungeonReq
                case 2119: return 2046; // TreasureMapGuideTaskDoneNotify
                case 2121: return 2075; // TakeDeliveryDailyRewardReq
                case 2122: return 2085; // TreasureMapRegionActiveNotify
                case 2123: return 2133; // SeaLampContributeItemReq
                case 2124: return 2044; // SalesmanTakeSpecialRewardRsp
                case 2125: return 2171; // StartArenaChallengeLevelRsp
                case 2127: return 2196; // StartArenaChallengeLevelReq
                case 2129: return 2066; // ExpeditionRecallRsp
                case 2130: return 2155; // ReceivedTrialAvatarActivityRewardReq
                case 2131: return 2098; // ExpeditionRecallReq
                case 2133: return 2195; // AsterMidCampInfoNotify
                case 2134: return 2060; // SelectAsterMidDifficultyReq
                case 2135: return 2182; // ExpeditionStartRsp
                case 2136: return 2008; // GetActivityScheduleReq
                case 2137: return 2036; // BlessingRedeemRewardReq
                case 2138: return 2057; // SalesmanDeliverItemReq
                case 2139: return 2116; // SeaLampContributeItemRsp
                case 2140: return 2194; // ActivityCondStateChangeNotify
                case 2145: return 2067; // SalesmanTakeSpecialRewardReq
                case 2146: return 2023; // AsterLargeInfoNotify
                case 2148: return 2051; // RestartEffigyChallengeReq
                case 2149: return 2015; // ExpeditionTakeRewardReq
                case 2150: return 2088; // GetExpeditionAssistInfoListReq
                case 2152: return 2177; // TreasureMapPreTaskDoneNotify
                case 2154: return 2027; // ExpeditionChallengeEnterRegionNotify
                case 2155: return 2160; // ActivityBannerNotify
                case 2156: return 2103; // ActivityUpdateWatcherNotify
                case 2157: return 2059; // ActivityPlayOpenAnimNotify
                case 2159: return 2184; // ActivityTakeWatcherRewardBatchReq
                case 2162: return 2174; // TakeDeliveryDailyRewardRsp
                case 2163: return 2198; // ActivityBannerClearRsp
                case 2165: return 2158; // FlightActivityRestartRsp
                case 2167: return 2070; // FleurFairMusicGameStartReq
                case 2169: return 2157; // StartEffigyChallengeReq
                case 2171: return 2032; // TreasureMapCurrencyNotify
                case 2173: return 2169; // StartEffigyChallengeRsp
                case 2176: return 2006; // SeaLampTakePhaseRewardReq
                case 2177: return 2003; // SeaLampTakeContributionRewardRsp
                case 2178: return 2107; // BlessingRecvFriendPicNotify
                case 2180: return 2101; // SelectAsterMidDifficultyRsp
                case 2181: return 2127; // FleurFairReplayMiniGameReq
                case 2183: return 2176; // EnterTrialAvatarActivityDungeonRsp
                case 2185: return 2179; // TreasureMapRegionInfoNotify
                case 2186: return 2063; // TrialAvatarInDungeonIndexNotify
                case 2189: return 2154; // ActivitySelectAvatarCardRsp
                case 2190: return 2105; // SeaLampTakePhaseRewardRsp
                case 2191: return 2069; // SalesmanTakeRewardReq
                case 2192: return 2161; // SeaLampFlyLampRsp
                case 2193: return 2132; // TakeAsterSpecialRewardRsp
                case 2194: return 2111; // FleurFairMusicGameSettleReq
                case 2195: return 2143; // FlightActivitySettleNotify
                case 2196: return 2138; // TakeEffigyFirstPassRewardReq
                case 2197: return 2129; // ServerAnnounceNotify
                case 2199: return 2187; // SeaLampFlyLampReq
                case 2204: return 2244; // PushTipsReadFinishReq
                case 2207: return 2300; // WatcherEventStageNotify
                case 2212: return 2256; // WatcherEventNotify
                case 2222: return 2237; // PushTipsAllDataNotify
                case 2227: return 2217; // GetPushTipsRewardReq
                case 2235: return 2219; // WatcherEventTypeNotify
                case 2265: return 2289; // PushTipsChangeNotify
                case 2272: return 2279; // WatcherAllDataNotify
                case 2293: return 2207; // PushTipsReadFinishRsp
                case 2294: return 2205; // GetPushTipsRewardRsp
                case 2298: return 2230; // WatcherChangeNotify
                case 2307: return 2400; // PathfindingEnterSceneReq
                case 2312: return 2356; // ObstacleModifyNotify
                case 2316: return 2323; // NavMeshStatsNotify
                case 2321: return 2343; // PathfindingEnterSceneRsp
                case 2329: return 2320; // GMShowObstacleRsp
                case 2335: return 2319; // PathfindingPingNotify
                case 2357: return 2363; // GMShowNavMeshReq
                case 2361: return 2398; // GMShowObstacleReq
                case 2372: return 2379; // QueryPathReq
                case 2398: return 2330; // QueryPathRsp
                case 2400: return 2304; // GMShowNavMeshRsp
                case 2403: return 2461; // TowerTeamSelectRsp
                case 2404: return 2444; // TowerGetFloorStarRewardReq
                case 2406: return 2410; // TowerLevelStarCondNotify
                case 2412: return 2456; // TowerCurLevelRecordChangeNotify
                case 2421: return 2443; // TowerTeamSelectReq
                case 2422: return 2437; // TowerSurrenderReq
                case 2431: return 2427; // TowerEnterLevelReq
                case 2434: return 2480; // TowerMiddleLevelChangeTeamNotify
                case 2435: return 2419; // TowerDailyRewardProgressChangeNotify
                case 2443: return 2475; // TowerRecordHandbookRsp
                case 2448: return 2448; // TowerBuffSelectReq
                case 2450: return 2446; // TowerRecordHandbookReq
                case 2465: return 2489; // TowerSurrenderRsp
                case 2472: return 2479; // TowerBriefDataNotify
                case 2473: return 2478; // TowerAllDataRsp
                case 2475: return 2439; // TowerEnterLevelRsp
                case 2490: return 2447; // TowerAllDataReq
                case 2493: return 2407; // TowerGetFloorStarRewardRsp
                case 2495: return 2433; // TowerLevelEndNotify
                case 2497: return 2499; // TowerBuffSelectRsp
                case 2498: return 2430; // TowerFloorRecordChangeNotify
                case 2505: return 2542; // GetBonusActivityRewardRsp
                case 2507: return 2600; // GetSignInRewardReq
                case 2512: return 2556; // SignInInfoReq
                case 2521: return 2543; // GetSignInRewardRsp
                case 2535: return 2519; // SignInInfoRsp
                case 2548: return 2548; // BonusActivityInfoReq
                case 2572: return 2579; // OpActivityStateNotify
                case 2575: return 2539; // BonusActivityUpdateNotify
                case 2581: return 2525; // GetBonusActivityRewardReq
                case 2597: return 2599; // BonusActivityInfoRsp
                case 2602: return 2627; // TakeBattlePassRewardReq
                case 2607: return 2635; // BattlePassCurScheduleUpdateNotify
                case 2614: return 2602; // BattlePassBuySuccNotify
                case 2618: return 2641; // BattlePassMissionUpdateNotify
                case 2622: return 2617; // TakeBattlePassMissionPointRsp
                case 2625: return 2622; // BattlePassMissionDelNotify
                case 2626: return 2642; // BattlePassAllDataNotify
                case 2629: return 2644; // TakeBattlePassMissionPointReq
                case 2631: return 2631; // TakeBattlePassRewardRsp
                case 2637: return 2609; // BuyBattlePassLevelRsp
                case 2641: return 2608; // SetBattlePassViewedReq
                case 2642: return 2645; // SetBattlePassViewedRsp
                case 2644: return 2612; // GetBattlePassProductReq
                case 2647: return 2643; // BuyBattlePassLevelReq
                case 2649: return 2634; // GetBattlePassProductRsp
                case 2652: return 2677; // TakeAchievementGoalRewardReq
                case 2657: return 2685; // TakeAchievementRewardRsp
                case 2668: return 2691; // AchievementUpdateNotify
                case 2675: return 2672; // TakeAchievementRewardReq
                case 2676: return 2692; // AchievementAllDataNotify
                case 2681: return 2681; // TakeAchievementGoalRewardRsp
                case 2703: return 2761; // OpenBlossomCircleCampGuideNotify
                case 2707: return 2800; // WorldOwnerBlossomScheduleInfoNotify
                case 2712: return 2756; // BlossomBriefInfoNotify
                case 2721: return 2743; // BlossomChestCreateNotify
                case 2735: return 2719; // WorldOwnerBlossomBriefInfoNotify
                case 2772: return 2779; // GetBlossomBriefInfoListReq
                case 2798: return 2730; // GetBlossomBriefInfoListRsp
                case 2803: return 2861; // TakeCityReputationParentQuestRsp
                case 2805: return 2842; // CityReputationDataNotify
                case 2807: return 2900; // CityReputationLevelupNotify
                case 2812: return 2856; // TakeCityReputationLevelRewardReq
                case 2821: return 2843; // TakeCityReputationParentQuestReq
                case 2831: return 2827; // CancelCityReputationRequestRsp
                case 2835: return 2819; // TakeCityReputationLevelRewardRsp
                case 2848: return 2848; // GetCityReputationMapInfoRsp
                case 2872: return 2879; // GetCityReputationInfoReq
                case 2873: return 2878; // AcceptCityReputationRequestRsp
                case 2875: return 2839; // GetCityReputationMapInfoReq
                case 2881: return 2825; // TakeCityReputationExploreRewardRsp
                case 2890: return 2847; // AcceptCityReputationRequestReq
                case 2897: return 2899; // TakeCityReputationExploreRewardReq
                case 2898: return 2830; // GetCityReputationInfoRsp
                case 2899: return 2857; // CancelCityReputationRequestReq
                case 2907: return 2915; // PlayerOfferingReq
                case 2908: return 2906; // OfferingInteractRsp
                case 2911: return 2902; // TakeOfferingLevelRewardRsp
                case 2917: return 2916; // PlayerOfferingRsp
                case 2918: return 2920; // OfferingInteractReq
                case 2919: return 2901; // TakeOfferingLevelRewardReq
                case 2923: return 2911; // PlayerOfferingDataNotify
                case 3004: return 3119; // StopReminderNotify
                case 3005: return 3369; // ShowClientGuideNotify
                case 3006: return 3461; // ChangeWorldToSingleModeNotify
                case 3010: return 3265; // PlayerChatNotify
                case 3012: return 3064; // SceneWeatherForecastRsp
                case 3017: return 3247; // LeaveWorldNotify
                case 3019: return 3018; // HitTreeNotify
                case 3031: return 3125; // GuestBeginEnterSceneNotify
                case 3035: return 3200; // UnlockTransPointReq
                case 3039: return 3050; // MonsterAIConfigHashNotify
                case 3051: return 3079; // PlayerEyePointStateNotify
                case 3066: return 3296; // ChangeWorldToSingleModeReq
                case 3079: return 3346; // MarkMapRsp
                case 3086: return 3287; // ClientHashDebugNotify
                case 3108: return 3106; // GetMapAreaReq
                case 3110: return 3350; // SceneWeatherForecastReq
                case 3113: return 3056; // CheckGroupReplacedReq
                case 3116: return 3150; // WorldPlayerInfoNotify
                case 3129: return 3059; // PlayerWorldSceneInfoListNotify
                case 3137: return 3010; // GetScenePerformanceRsp
                case 3144: return 3229; // GuestPostEnterSceneNotify
                case 3145: return 3494; // ForceDragBackTransferNotify
                case 3146: return 3318; // SetEntityClientDataNotify
                case 3147: return 3196; // DungeonEntryToBeExploreNotify
                case 3152: return 3411; // CheckGroupReplacedRsp
                case 3160: return 3342; // BeginCameraSceneLookWithTemplateNotify
                case 3165: return 3364; // GetDungeonEntryExploreConditionReq
                case 3166: return 3009; // SceneAudioNotify
                case 3178: return 3337; // EntityMoveRoomNotify
                case 3184: return 3094; // PostEnterSceneRsp
                case 3185: return 3305; // PlayerChatReq
                case 3189: return 3332; // EntityConfigHashNotify
                case 3194: return 3273; // CloseCommonTipsNotify
                case 3203: return 3368; // SceneDataNotify
                case 3220: return 3483; // UnfreezeGroupLimitNotify
                case 3228: return 3087; // PlayerChatRsp
                case 3235: return 3008; // ForceDragAvatarNotify
                case 3257: return 3489; // GroupSuiteNotify
                case 3259: return 3099; // RefreshEntityAuthNotify
                case 3269: return 3425; // GetDungeonEntryExploreConditionRsp
                case 3274: return 3388; // ScenePlayerBackgroundAvatarRefreshNotify
                case 3282: return 3258; // ChangeWorldToSingleModeRsp
                case 3283: return 3322; // AllMarkPointNotify
                case 3295: return 3242; // WorldChestOpenNotify
                case 3305: return 3204; // ShowClientTutorialNotify
                case 3308: return 3436; // WorldDataNotify
                case 3312: return 3286; // PostEnterSceneReq
                case 3314: return 3468; // LevelTagDataNotify
                case 3316: return 3192; // EntityTagChangeNotify
                case 3318: return 3237; // DelScenePlayTeamEntityNotify
                case 3320: return 3310; // GetWorldMpInfoRsp
                case 3323: return 3274; // AreaPlayInfoNotify
                case 3327: return 3272; // GetMapMarkTipsRsp
                case 3328: return 3275; // GetMapAreaRsp
                case 3333: return 3393; // SyncScenePlayTeamEntityNotify
                case 3336: return 3250; // WidgetQuickHitTreeRsp
                case 3344: return 3138; // GroupUnloadNotify
                case 3345: return 3068; // WidgetQuickHitTreeReq
                case 3352: return 3065; // ShowCommonTipsNotify
                case 3367: return 3450; // PlayerChatCDNotify
                case 3378: return 3485; // MapAreaChangeNotify
                case 3387: return 3452; // SceneEntitiesMoveCombineNotify
                case 3391: return 3034; // GetWorldMpInfoReq
                case 3408: return 3083; // LuaEnvironmentEffectNotify
                case 3410: return 3384; // MonsterPointArrayRouteUpdateNotify
                case 3412: return 3115; // SceneEntityUpdateNotify
                case 3419: return 3403; // GetScenePerformanceReq
                case 3426: return 3046; // UnlockTransPointRsp
                case 3458: return 3256; // AvatarFollowRouteNotify
                case 3463: return 3473; // GetMapMarkTipsReq
                case 3466: return 3282; // MarkMapReq
                case 3475: return 3062; // DeathZoneObserveNotify
                case 3487: return 3269; // ClientLoadingCostumeVerificationNotify
                case 3491: return 3300; // ShowTemplateReminderNotify
                case 3496: return 3309; // ChatHistoryNotify
                case 3502: return 3527; // WorldRoutineTypeCloseNotify
                case 3507: return 3535; // WorldRoutineChangeNotify
                case 3518: return 3541; // WorldAllRoutineTypeNotify
                case 3525: return 3522; // WorldRoutineTypeRefreshNotify
                case 3526: return 3542; // PlayerRoutineDataNotify
                case 3903: return 3961; // MechanicusUnlockGearReq
                case 3905: return 3942; // MechanicusCandidateTeamCreateRsp
                case 3907: return 4000; // MechanicusOpenNotify
                case 3912: return 3956; // MechanicusSequenceOpenNotify
                case 3921: return 3943; // MechanicusCloseNotify
                case 3931: return 3927; // EnterMechanicusDungeonReq
                case 3935: return 3919; // MechanicusCoinNotify
                case 3972: return 3979; // GetMechanicusInfoReq
                case 3973: return 3978; // MechanicusLevelupGearReq
                case 3975: return 3939; // EnterMechanicusDungeonRsp
                case 3981: return 3925; // MechanicusCandidateTeamCreateReq
                case 3990: return 3947; // MechanicusUnlockGearRsp
                case 3998: return 3930; // GetMechanicusInfoRsp
                case 3999: return 3957; // MechanicusLevelupGearRsp
                case 4002: return 4093; // UpdatePlayerShowNameCardListReq
                case 4003: return 4061; // DealAddFriendReq
                case 4004: return 4044; // SetNameCardReq
                case 4005: return 4042; // SetPlayerSignatureRsp
                case 4006: return 4010; // UnlockNameCardNotify
                case 4007: return 4100; // AskAddFriendReq
                case 4014: return 4041; // PlayerSignatureNotify
                case 4016: return 4023; // ProfilePictureChangeNotify
                case 4017: return 4091; // GetFriendShowAvatarInfoRsp
                case 4018: return 4008; // GetPlayerAskFriendListReq
                case 4019: return 4054; // UpdatePlayerShowNameCardListRsp
                case 4020: return 4002; // ReadSignatureAuditReq
                case 4021: return 4043; // AskAddFriendRsp
                case 4022: return 4037; // AddFriendNotify
                case 4024: return 4022; // PlayerReportReq
                case 4026: return 4072; // AddBlacklistRsp
                case 4027: return 4017; // GetAllUnlockNameCardReq
                case 4029: return 4020; // GetFriendShowNameCardInfoRsp
                case 4030: return 4050; // SetFriendRemarkNameRsp
                case 4031: return 4027; // DeleteFriendReq
                case 4032: return 4065; // FriendInfoChangeNotify
                case 4033: return 4066; // GetChatEmojiCollectionRsp
                case 4034: return 4080; // GetRecentMpPlayerListReq
                case 4039: return 4016; // UpdatePS4FriendListNotify
                case 4040: return 4085; // PSNBlackListNotify
                case 4041: return 4067; // UpdatePS4BlockListRsp
                case 4042: return 4011; // SetFriendRemarkNameReq
                case 4043: return 4075; // SocialDataNotify
                case 4046: return 4064; // UpdatePS4BlockListReq
                case 4047: return 4076; // SetPlayerHeadImageRsp
                case 4048: return 4048; // SetPlayerBirthdayReq
                case 4049: return 4015; // GetPlayerBlacklistReq
                case 4050: return 4046; // GetRecentMpPlayerListRsp
                case 4053: return 4073; // DeleteFriendNotify
                case 4056: return 4082; // PlayerReportRsp
                case 4057: return 4063; // ForceAddPlayerFriendReq
                case 4058: return 4024; // UpdatePlayerShowAvatarListRsp
                case 4059: return 4077; // UpdatePS4FriendListRsp
                case 4060: return 4036; // PlayerSignatureAuditDataNotify
                case 4061: return 4098; // GetFriendShowNameCardInfoReq
                case 4063: return 4003; // RemoveBlacklistReq
                case 4064: return 4012; // ReadSignatureAuditRsp
                case 4065: return 4089; // AskAddFriendNotify
                case 4066: return 4009; // GetPlayerAskFriendListRsp
                case 4067: return 4053; // UpdatePlayerShowAvatarListReq
                case 4068: return 4088; // GetChatEmojiCollectionReq
                case 4070: return 4049; // GetFriendShowAvatarInfoReq
                case 4072: return 4079; // GetPlayerFriendListReq
                case 4073: return 4078; // GetPlayerSocialDetailReq
                case 4074: return 4034; // TakeFirstShareRewardReq
                case 4075: return 4039; // DeleteFriendRsp
                case 4076: return 4095; // TakeFirstShareRewardRsp
                case 4080: return 4074; // SetChatEmojiCollectionRsp
                case 4081: return 4025; // SetPlayerSignatureReq
                case 4082: return 4090; // SetPlayerHeadImageReq
                case 4084: return 4052; // SetChatEmojiCollectionReq
                case 4087: return 4087; // PSNFriendListNotify
                case 4088: return 4094; // AddBlacklistReq
                case 4089: return 4026; // UpdatePS4FriendListReq
                case 4090: return 4047; // DealAddFriendRsp
                case 4091: return 4021; // GetPlayerBlacklistRsp
                case 4092: return 4097; // SignatureAuditConfigNotify
                case 4093: return 4007; // SetNameCardRsp
                case 4094: return 4005; // GetAllUnlockNameCardRsp
                case 4095: return 4033; // RemoveBlacklistRsp
                case 4097: return 4099; // SetPlayerBirthdayRsp
                case 4098: return 4030; // GetPlayerFriendListRsp
                case 4099: return 4057; // GetPlayerSocialDetailRsp
                case 4100: return 4004; // ForceAddPlayerFriendRsp
                case 4102: return 4127; // PlayerRechargeDataNotify
                case 4107: return 4135; // CardProductRewardNotify
                case 4118: return 4141; // RechargeRsp
                case 4122: return 4117; // TakeResinCardDailyRewardReq
                case 4125: return 4122; // OrderFinishNotify
                case 4126: return 4142; // RechargeReq
                case 4129: return 4144; // ReportTrackingIOInfoNotify
                case 4131: return 4131; // OrderDisplayNotify
                case 4144: return 4112; // TakeResinCardDailyRewardRsp
                case 4149: return 4134; // ResinCardDataUpdateNotify
                case 4152: return 4177; // PlayerCancelMatchRsp
                case 4157: return 4185; // PlayerCancelMatchReq
                case 4164: return 4152; // PlayerGetForceQuitBanInfoReq
                case 4168: return 4191; // PlayerStartMatchRsp
                case 4170: return 4165; // PlayerMatchAgreedResultNotify
                case 4172: return 4167; // PlayerConfirmMatchReq
                case 4173: return 4180; // PlayerGCGMatchDismissNotify
                case 4175: return 4172; // PlayerMatchInfoNotify
                case 4176: return 4192; // PlayerStartMatchReq
                case 4179: return 4194; // PlayerMatchSuccNotify
                case 4181: return 4181; // PlayerMatchStopNotify
                case 4185: return 4171; // PlayerGCGMatchConfirmNotify
                case 4187: return 4159; // ServerTryCancelGeneralMatchNotify
                case 4191: return 4158; // PlayerGeneralMatchDismissNotify
                case 4192: return 4195; // PlayerGeneralMatchConfirmNotify
                case 4194: return 4162; // PlayerConfirmMatchRsp
                case 4195: return 4168; // PlayerApplyEnterMpAfterMatchAgreedNotify
                case 4197: return 4193; // PlayerGetForceQuitBanInfoRsp
                case 4199: return 4184; // PlayerAllowEnterMpAfterAgreeMatchNotify
                case 4201: return 4210; // ViewCodexRsp
                case 4202: return 4206; // ViewCodexReq
                case 4203: return 4204; // QueryCodexMonsterBeKilledNumReq
                case 4205: return 4201; // CodexDataFullNotify
                case 4206: return 4205; // SetCodexPushtipsReadRsp
                case 4207: return 4203; // CodexDataUpdateNotify
                case 4208: return 4209; // SetCodexPushtipsReadReq
                case 4209: return 4202; // QueryCodexMonsterBeKilledNumRsp
                case 4252: return 4277; // AnchorPointOpRsp
                case 4253: return 4274; // GetWidgetSlotReq
                case 4254: return 4270; // GetWidgetSlotRsp
                case 4255: return 4269; // WidgetDoBagReq
                case 4256: return 4279; // WidgetCaptureAnimalReq
                case 4257: return 4285; // AnchorPointOpReq
                case 4258: return 4290; // WidgetUseAttachAbilityGroupChangeNotify
                case 4259: return 4255; // SetWidgetSlotReq
                case 4261: return 4263; // UseWidgetRetractGadgetRsp
                case 4264: return 4252; // ClientCollectorDataNotify
                case 4266: return 4276; // WidgetGadgetDataNotify
                case 4267: return 4278; // WidgetSlotChangeNotify
                case 4270: return 4265; // QuickUseWidgetRsp
                case 4271: return 4286; // AllWidgetDataNotify
                case 4272: return 4267; // SetUpLunchBoxWidgetReq
                case 4274: return 4257; // WidgetGadgetDestroyNotify
                case 4276: return 4292; // AnchorPointDataNotify
                case 4277: return 4261; // SetWidgetSlotRsp
                case 4280: return 4297; // WidgetActiveChangeNotify
                case 4284: return 4288; // WidgetGadgetAllDataNotify
                case 4286: return 4275; // UseWidgetRetractGadgetReq
                case 4287: return 4259; // SkyCrystalDetectorDataUpdateNotify
                case 4289: return 4296; // WidgetCaptureAnimalRsp
                case 4290: return 4298; // UseWidgetCreateGadgetRsp
                case 4291: return 4258; // WidgetReportReq
                case 4292: return 4295; // WidgetReportRsp
                case 4293: return 4264; // UseWidgetCreateGadgetReq
                case 4294: return 4262; // SetUpLunchBoxWidgetRsp
                case 4295: return 4268; // WidgetCoolDownNotify
                case 4296: return 4299; // WidgetDoBagRsp
                case 4297: return 4293; // OneoffGatherPointDetectorDataNotify
                case 4299: return 4284; // QuickUseWidgetReq
                case 4300: return 4254; // TreasureMapDetectorDataNotify
                case 4302: return 4327; // GetHuntingOfferRewardReq
                case 4307: return 4335; // GetCityHuntingOfferRsp
                case 4318: return 4341; // TakeHuntingOfferRsp
                case 4320: return 4315; // HuntingFailNotify
                case 4322: return 4317; // HuntingRevealClueNotify
                case 4325: return 4322; // GetCityHuntingOfferReq
                case 4326: return 4342; // TakeHuntingOfferReq
                case 4329: return 4344; // HuntingStartNotify
                case 4331: return 4331; // GetHuntingOfferRewardRsp
                case 4341: return 4308; // HuntingGiveUpReq
                case 4342: return 4345; // HuntingGiveUpRsp
                case 4344: return 4312; // HuntingRevealFinalNotify
                case 4345: return 4318; // HuntingOngoingNotify
                case 4349: return 4334; // HuntingSuccessNotify
                case 4353: return 4411; // ScenePlayGuestReplyInviteReq
                case 4355: return 4392; // ScenePlayOutofRegionNotify
                case 4357: return 4450; // ScenePlayOwnerStartInviteRsp
                case 4362: return 4406; // ScenePlayOwnerCheckRsp
                case 4371: return 4393; // ScenePlayOwnerInviteNotify
                case 4381: return 4377; // ScenePlayInfoListNotify
                case 4385: return 4369; // ScenePlayOwnerStartInviteReq
                case 4398: return 4398; // ScenePlayBattleResultNotify
                case 4422: return 4429; // ScenePlayBattleInfoNotify
                case 4423: return 4428; // ScenePlayGuestReplyNotify
                case 4425: return 4389; // ScenePlayBattleInterruptNotify
                case 4431: return 4375; // ScenePlayBattleInfoListNotify
                case 4440: return 4397; // ScenePlayGuestReplyInviteRsp
                case 4447: return 4449; // ScenePlayBattleUidOpNotify
                case 4448: return 4380; // ScenePlayOwnerCheckReq
                case 4449: return 4407; // ScenePlayInviteResultNotify
                case 4453: return 4535; // HomeAvtarAllFinishRewardNotify
                case 4454: return 4532; // UnlockedFurnitureSuiteDataNotify
                case 4464: return 4718; // HomeAvatarTalkRsp
                case 4468: return 4793; // PlayerApplyEnterHomeResultNotify
                case 4473: return 4777; // GetHomeExchangeWoodInfoReq
                case 4474: return 4868; // HomeMarkPointNotify
                case 4476: return 4835; // HomeGetFishFarmingInfoReq
                case 4477: return 4802; // FurnitureMakeReq
                case 4478: return 4745; // HomePreviewBlueprintReq
                case 4479: return 4800; // HomeResourceTakeHomeCoinReq
                case 4482: return 4648; // TryEnterHomeReq
                case 4486: return 4764; // HomeUpdatePictureFrameInfoReq
                case 4488: return 4895; // HomeChangeBgmRsp
                case 4494: return 4853; // SetFriendEnterHomeOptionReq
                case 4496: return 4769; // HomeEditCustomFurnitureRsp
                case 4498: return 4538; // FurnitureCurModuleArrangeCountNotify
                case 4499: return 4861; // HomeModuleSeenReq
                case 4502: return 4501; // HomeDeleteBlueprintReq
                case 4505: return 4531; // HomeSceneInitFinishRsp
                case 4510: return 4533; // HomeUpdateArrangementInfoReq
                case 4511: return 4652; // HomeUpdateScenePointFishFarmingInfoReq
                case 4523: return 4756; // HomeGetGroupRecordReq
                case 4524: return 4456; // HomeChooseModuleReq
                case 4527: return 4619; // HomePlantWeedRsp
                case 4528: return 4527; // HomeSceneJumpReq
                case 4530: return 4859; // JoinHomeWorldFailNotify
                case 4533: return 4486; // PlayerApplyEnterHomeNotify
                case 4537: return 4865; // HomeEnterEditModeFinishReq
                case 4538: return 4824; // HomeGetGroupRecordRsp
                case 4540: return 4606; // HomeUpdateScenePointFishFarmingInfoRsp
                case 4541: return 4779; // HomeResourceTakeHomeCoinRsp
                case 4543: return 4679; // HomeBlockNotify
                case 4544: return 4767; // HomeUpdateFishFarmingInfoReq
                case 4546: return 4492; // HomeLimitedShopGoodsListRsp
                case 4547: return 4834; // HomeScenePointFishFarmingInfoNotify
                case 4549: return 4848; // HomePlantFieldNotify
                case 4551: return 4754; // HomeAvatarRewardEventGetReq
                case 4552: return 4537; // HomeLimitedShopGoodsListReq
                case 4554: return 4472; // HomeSetBlueprintFriendOptionReq
                case 4555: return 4726; // FurnitureMakeCancelReq
                case 4556: return 4694; // HomePlantSeedRsp
                case 4557: return 4457; // GetHomeLevelUpRewardReq
                case 4558: return 4736; // HomeChangeBgmReq
                case 4559: return 4661; // HomeChangeEditModeRsp
                case 4560: return 4674; // HomeModuleUnlockNotify
                case 4564: return 4719; // HomeChangeEditModeReq
                case 4576: return 4808; // HomeExchangeWoodReq
                case 4578: return 4766; // FurnitureMakeBeHelpedNotify
                case 4583: return 4723; // HomeSeekFurnitureGalleryScoreNotify
                case 4584: return 4688; // HomeGetBlueprintSlotInfoReq
                case 4586: return 4545; // HomeDeleteBlueprintRsp
                case 4587: return 4873; // HomePlantInfoNotify
                case 4593: return 4512; // HomeSearchBlueprintRsp
                case 4596: return 4551; // HomeChangeModuleRsp
                case 4597: return 4655; // GetPlayerHomeCompInfoReq
                case 4599: return 4557; // HomePriorCheckNotify
                case 4603: return 4857; // GetHomeLevelUpRewardRsp
                case 4604: return 4615; // HomeSetBlueprintFriendOptionRsp
                case 4605: return 4525; // HomeClearGroupRecordRsp
                case 4606: return 4806; // HomeCreateBlueprintRsp
                case 4608: return 4841; // HomeAllUnlockedBgmIdListNotify
                case 4615: return 4583; // HomeEnterEditModeFinishRsp
                case 4616: return 4711; // HomeTransferRsp
                case 4619: return 4539; // HomeCreateBlueprintReq
                case 4622: return 4885; // HomeExchangeWoodRsp
                case 4628: return 4749; // OtherPlayerEnterHomeNotify
                case 4629: return 4804; // HomeAvatarSummonFinishReq
                case 4633: return 4581; // FurnitureMakeStartReq
                case 4639: return 4720; // HomePreChangeEditModeNotify
                case 4640: return 4866; // HomePlantWeedReq
                case 4641: return 4468; // HomeUpdatePictureFrameInfoRsp
                case 4645: return 4607; // HomeResourceTakeFetterExpRsp
                case 4647: return 4629; // HomePlantInfoReq
                case 4648: return 4638; // HomeChooseModuleRsp
                case 4653: return 4796; // TryEnterHomeRsp
                case 4654: return 4734; // HomeBalloonGalleryScoreNotify
                case 4655: return 4743; // HomeGetBasicInfoReq
                case 4656: return 4724; // PlayerQuitFromHomeNotify
                case 4659: return 4580; // GetHomeExchangeWoodInfoRsp
                case 4662: return 4498; // HomeGetBlueprintSlotInfoRsp
                case 4668: return 4603; // HomeSaveArrangementNoChangeRsp
                case 4674: return 4451; // HomeSceneInitFinishReq
                case 4677: return 4842; // HomeFishFarmingInfoNotify
                case 4678: return 4567; // HomeGetFishFarmingInfoRsp
                case 4683: return 4676; // FurnitureMakeCancelRsp
                case 4688: return 4704; // HomeAvatarTalkReq
                case 4691: return 4657; // HomeKickPlayerRsp
                case 4693: return 4646; // PlayerApplyEnterHomeResultReq
                case 4696: return 4814; // HomeAvatarSummonFinishRsp
                case 4698: return 4647; // HomeSceneJumpRsp
                case 4699: return 4763; // HomeComfortInfoNotify
                case 4701: return 4460; // HomePlantInfoRsp
                case 4704: return 4672; // HomeSaveArrangementNoChangeReq
                case 4705: return 4649; // HomeGetOnlineStatusRsp
                case 4706: return 4542; // PlayerApplyEnterHomeResultRsp
                case 4711: return 4730; // GetFurnitureCurModuleArrangeCountReq
                case 4712: return 4888; // HomeCustomFurnitureInfoNotify
                case 4724: return 4778; // HomeEditCustomFurnitureReq
                case 4726: return 4613; // HomeTransferReq
                case 4729: return 4877; // FurnitureMakeStartRsp
                case 4738: return 4462; // HomePreviewBlueprintRsp
                case 4741: return 4798; // HomeAvatarAllFinishRewardNotify
                case 4743: return 4526; // SetFriendEnterHomeOptionRsp
                case 4748: return 4775; // HomeAvatarCostumeChangeNotify
                case 4750: return 4630; // HomeLimitedShopBuyGoodsRsp
                case 4756: return 4507; // FurnitureMakeHelpRsp
                case 4757: return 4776; // HomeUpdateArrangementInfoRsp
                case 4759: return 4823; // HomeClearGroupRecordReq
                case 4760: return 4574; // HomeLimitedShopBuyGoodsReq
                case 4765: return 4813; // HomeBlueprintInfoNotify
                case 4768: return 4521; // HomeResourceTakeFetterExpReq
                case 4769: return 4803; // TakeFurnitureMakeRsp
                case 4772: return 4506; // TakeFurnitureMakeReq
                case 4782: return 4504; // FurnitureMakeRsp
                case 4786: return 4621; // HomeSetBlueprintSlotOptionRsp
                case 4790: return 4790; // HomeLimitedShopInfoChangeNotify
                case 4796: return 4739; // HomeLimitedShopInfoRsp
                case 4798: return 4491; // HomeSetBlueprintSlotOptionReq
                case 4804: return 4768; // HomePlantSeedReq
                case 4805: return 4807; // HomeRacingGallerySettleNotify
                case 4806: return 4894; // HomeAvatarSummonEventReq
                case 4808: return 4670; // HomeAvatarSummonAllEventNotify
                case 4809: return 4559; // HomeChangeModuleReq
                case 4811: return 4604; // HomeBalloonGallerySettleNotify
                case 4817: return 4562; // HomeAvatarSummonEventRsp
                case 4820: return 4856; // HomeGetOnlineStatusReq
                case 4821: return 4693; // HomeModuleSeenRsp
                case 4825: return 4815; // HomeLimitedShopInfoReq
                case 4833: return 4713; // HomeAvatarRewardEventGetRsp
                case 4841: return 4850; // FurnitureMakeFinishNotify
                case 4844: return 4878; // HomeGetArrangementInfoRsp
                case 4846: return 4716; // UnlockedFurnitureFormulaDataNotify
                case 4847: return 4899; // HomeNewUnlockedBgmIdListNotify
                case 4848: return 4601; // HomeGetArrangementInfoReq
                case 4852: return 4849; // HomeAvatarRewardEventNotify
                case 4857: return 4582; // HomeUpdateFishFarmingInfoRsp
                case 4865: return 4478; // FurnitureMakeHelpReq
                case 4870: return 4684; // HomeKickPlayerReq
                case 4872: return 4518; // HomeChangeBgmNotify
                case 4878: return 4495; // HomePictureFrameInfoNotify
                case 4880: return 4818; // PlayerHomeCompInfoNotify
                case 4885: return 4622; // HomeBasicInfoNotify
                case 4887: return 4475; // HomeLimitedShopInfoNotify
                case 4889: return 4705; // HomeSearchBlueprintReq
                case 4892: return 4762; // HomeResourceNotify
                case 4896: return 4757; // HomeAvatarTalkFinishInfoNotify
                case 4898: return 4882; // FurnitureMakeInfoChangeNotify
                case 4953: return 5011; // PullPrivateChatRsp
                case 4962: return 5006; // PrivateChatNotify
                case 4971: return 4993; // PullPrivateChatReq
                case 4981: return 4977; // ReadPrivateChatRsp
                case 4998: return 4998; // ChatChannelDataNotify
                case 5022: return 5029; // PrivateChatReq
                case 5023: return 5028; // PullRecentChatRsp
                case 5025: return 4989; // ChatChannelUpdateNotify
                case 5031: return 4975; // ChatChannelInfoNotify
                case 5040: return 4997; // PullRecentChatReq
                case 5047: return 5049; // ChatChannelShieldNotify
                case 5048: return 4980; // PrivateChatRsp
                case 5049: return 5007; // ReadPrivateChatReq
                case 5052: return 5077; // GetReunionSignInInfoReq
                case 5057: return 5085; // TakeReunionFirstGiftRewardRsp
                case 5064: return 5052; // TakeReunionMissionRewardRsp
                case 5068: return 5091; // ReunionBriefInfoRsp
                case 5070: return 5065; // TakeReunionWatcherRewardReq
                case 5072: return 5067; // TakeReunionSignInRewardRsp
                case 5073: return 5080; // ReunionSettleNotify
                case 5075: return 5072; // TakeReunionFirstGiftRewardReq
                case 5076: return 5092; // ReunionBriefInfoReq
                case 5079: return 5094; // TakeReunionSignInRewardReq
                case 5081: return 5081; // GetReunionSignInInfoRsp
                case 5085: return 5071; // ReunionActivateNotify
                case 5087: return 5059; // GetReunionPrivilegeInfoRsp
                case 5091: return 5058; // UpdateReunionWatcherNotify
                case 5092: return 5095; // TakeReunionMissionRewardReq
                case 5094: return 5062; // GetReunionMissionInfoReq
                case 5095: return 5068; // TakeReunionWatcherRewardRsp
                case 5097: return 5093; // GetReunionPrivilegeInfoReq
                case 5098: return 5087; // ReunionPrivilegeChangeNotify
                case 5099: return 5084; // GetReunionMissionInfoRsp
                case 5100: return 5054; // ReunionDailyRefreshNotify
                case 5112: return 5156; // OpActivityDataNotify
                case 5135: return 5119; // OpActivityUpdateNotify
                case 5172: return 5179; // GetOpActivityInfoReq
                case 5198: return 5130; // GetOpActivityInfoRsp
                case 5202: return 5227; // MiracleRingTakeRewardRsp
                case 5207: return 5235; // MiracleRingTakeRewardReq
                case 5218: return 5241; // UseMiracleRingRsp
                case 5222: return 5217; // MiracleRingDeliverItemRsp
                case 5225: return 5222; // MiracleRingDataNotify
                case 5226: return 5242; // UseMiracleRingReq
                case 5229: return 5244; // MiracleRingDeliverItemReq
                case 5231: return 5231; // MiracleRingDropResultNotify
                case 5244: return 5212; // MiracleRingDestroyNotify
                case 5302: return 5393; // HideAndSeekPlayerReadyNotify
                case 5303: return 5361; // InBattleMechanicusBuildingPointsNotify
                case 5305: return 5342; // InBattleMechanicusSettleNotify
                case 5307: return 5400; // InBattleMechanicusEscapeMonsterNotify
                case 5308: return 5362; // BrickBreakerPlayerSetAvatarNotify
                case 5309: return 5351; // BrickBreakerPlayerSetSkillNotify
                case 5313: return 5360; // MultistagePlaySettleNotify
                case 5314: return 5341; // ChessEscapedMonstersNotify
                case 5317: return 5391; // HideAndSeekSettleNotify
                case 5319: return 5354; // HideAndSeekPlayerSetAvatarNotify
                case 5320: return 5302; // GlobalBuildingInfoNotify
                case 5321: return 5343; // InBattleMechanicusLeftMonsterNotify
                case 5324: return 5322; // FleurFairBuffEnergyNotify
                case 5325: return 5329; // BrickBreakerSelectSkillReq
                case 5330: return 5350; // HideAndSeekSelectAvatarReq
                case 5331: return 5327; // InBattleMechanicusConfirmCardReq
                case 5332: return 5365; // ChessPlayerInfoNotify
                case 5333: return 5366; // ChessPickCardReq
                case 5336: return 5358; // BrickBreakerSetChangingReq
                case 5337: return 5368; // BrickBreakerSelectAvatarReq
                case 5338: return 5331; // IrodoriChessLeftMonsterNotify
                case 5342: return 5311; // FleurFairFinishGalleryStageNotify
                case 5345: return 5396; // BrickBreakerPlayerReadyNotify
                case 5348: return 5348; // InBattleMechanicusConfirmCardNotify
                case 5352: return 5371; // BrickBreakerSetReadyReq
                case 5354: return 5314; // BrickBreakerSetChangingRsp
                case 5355: return 5345; // MultistagePlayEndNotify
                case 5356: return 5382; // FleurFairStageSettleNotify
                case 5358: return 5324; // HideAndSeekSetReadyReq
                case 5359: return 5377; // ChessManualRefreshCardsRsp
                case 5360: return 5336; // ChessLeftMonstersNotify
                case 5364: return 5312; // IrodoriChessPlayerInfoNotify
                case 5367: return 5353; // HideAndSeekSelectAvatarRsp
                case 5370: return 5349; // HideAndSeekSetReadyRsp
                case 5372: return 5379; // MultistagePlayInfoNotify
                case 5373: return 5378; // InBattleMechanicusPickCardRsp
                case 5375: return 5339; // InBattleMechanicusConfirmCardRsp
                case 5377: return 5332; // BrickBreakerSetReadyRsp
                case 5378: return 5386; // BrickBreakerSelectSkillRsp
                case 5379: return 5392; // MultistagePlayStageEndNotify
                case 5380: return 5374; // ChessPickCardNotify
                case 5381: return 5325; // MultistagePlayFinishStageRsp
                case 5383: return 5370; // BrickBreakerPlayerSetChangingNotify
                case 5384: return 5352; // ChessPickCardRsp
                case 5385: return 5359; // BrickBreakerSelectAvatarRsp
                case 5389: return 5326; // ChessManualRefreshCardsReq
                case 5390: return 5347; // InBattleMechanicusPickCardReq
                case 5392: return 5397; // ChessSelectedCardsNotify
                case 5397: return 5399; // InBattleMechanicusCardResultNotify
                case 5398: return 5330; // MultistagePlayFinishStageReq
                case 5399: return 5357; // InBattleMechanicusPickCardNotify
                case 5403: return 5461; // DraftGuestReplyInviteRsp
                case 5407: return 5500; // DraftOwnerInviteNotify
                case 5412: return 5456; // DraftOwnerStartInviteReq
                case 5421: return 5443; // DraftGuestReplyInviteReq
                case 5431: return 5427; // DraftGuestReplyTwiceConfirmReq
                case 5435: return 5419; // DraftOwnerStartInviteRsp
                case 5448: return 5448; // DraftTwiceConfirmResultNotify
                case 5473: return 5478; // DraftInviteResultNotify
                case 5475: return 5439; // DraftGuestReplyTwiceConfirmRsp
                case 5490: return 5447; // DraftGuestReplyInviteNotify
                case 5497: return 5499; // DraftGuestReplyTwiceConfirmNotify
                case 5499: return 5457; // DraftOwnerTwiceConfirmNotify
                case 5503: return 5561; // GetAllSceneGalleryInfoReq
                case 5504: return 5544; // IslandPartySailInfoNotify
                case 5505: return 5542; // GalleryBounceConjuringHitNotify
                case 5506: return 5510; // FungusCaptureSettleNotify
                case 5507: return 5600; // GalleryFallCatchNotify
                case 5512: return 5556; // GalleryBalloonScoreNotify
                case 5521: return 5543; // GalleryFallScoreNotify
                case 5522: return 5537; // GalleryIslandPartyDownHillInfoNotify
                case 5526: return 5572; // WindFieldGalleryInfoNotify
                case 5527: return 5517; // BackRebornGalleryRsp
                case 5531: return 5527; // GalleryBulletHitNotify
                case 5534: return 5580; // HideAndSeekPlayerCapturedNotify
                case 5535: return 5519; // GalleryStopNotify
                case 5539: return 5516; // GalleryCrystalLinkBuffInfoNotify
                case 5547: return 5576; // GalleryCrystalLinkKillMonsterNotify
                case 5548: return 5548; // InterruptGalleryReq
                case 5550: return 5546; // CoinCollectGallerySettleNotify
                case 5553: return 5573; // HomeGalleryInPlayingNotify
                case 5563: return 5503; // WindFieldGalleryChallengeInfoNotify
                case 5565: return 5589; // IslandPartyRaftInfoNotify
                case 5572: return 5579; // GalleryStartNotify
                case 5573: return 5578; // GalleryFlowerCatchNotify
                case 5575: return 5539; // GalleryBrokenFloorFallNotify
                case 5581: return 5525; // SceneGalleryInfoNotify
                case 5582: return 5590; // GallerySumoKillMonsterNotify
                case 5588: return 5594; // InstableSprayGalleryInfoNotify
                case 5590: return 5547; // GetAllSceneGalleryInfoRsp
                case 5593: return 5507; // BackRebornGalleryReq
                case 5594: return 5505; // GalleryWillStartCountdownNotify
                case 5595: return 5533; // FungusFighterTrainingInfoNotify
                case 5597: return 5599; // InterruptGalleryRsp
                case 5598: return 5530; // GalleryBalloonShootNotify
                case 5599: return 5557; // GalleryPreStartNotify
                case 5602: return 5627; // GetRegionSearchReq
                case 5607: return 5635; // TakeRegionSearchRewardRsp
                case 5618: return 5641; // RegionSearchChangeRegionNotify
                case 5625: return 5622; // TakeRegionSearchRewardReq
                case 5626: return 5642; // RegionSearchNotify
                case 5652: return 5677; // SetH5ActivityRedDotTimestampRsp
                case 5657: return 5685; // SetH5ActivityRedDotTimestampReq
                case 5668: return 5691; // GetAllH5ActivityInfoReq
                case 5675: return 5672; // H5ActivityIdsNotify
                case 5676: return 5692; // GetAllH5ActivityInfoRsp
                case 5718: return 5741; // ServerMessageNotify
                case 5726: return 5742; // NormalUidOpNotify
                case 5757: return 5785; // GroupLinkMarkUpdateNotify
                case 5768: return 5791; // GroupLinkChangeNotify
                case 5775: return 5772; // GroupLinkDeleteNotify
                case 5776: return 5792; // GroupLinkAllNotify
                case 5802: return 5827; // FishCastRodReq
                case 5807: return 5835; // StartFishingRsp
                case 5814: return 5802; // ExitFishingReq
                case 5818: return 5841; // EnterFishingRsp
                case 5820: return 5815; // FishBattleBeginReq
                case 5822: return 5817; // FishEscapeNotify
                case 5823: return 5830; // FishBaitGoneNotify
                case 5825: return 5822; // StartFishingReq
                case 5826: return 5842; // EnterFishingReq
                case 5829: return 5844; // FishChosenNotify
                case 5831: return 5831; // FishCastRodRsp
                case 5835: return 5821; // PlayerFishingDataNotify
                case 5837: return 5809; // FishAttractNotify
                case 5841: return 5808; // FishBattleEndReq
                case 5842: return 5845; // FishBattleEndRsp
                case 5844: return 5812; // FishBiteReq
                case 5845: return 5818; // FishBattleBeginRsp
                case 5847: return 5843; // ExitFishingRsp
                case 5848: return 5837; // FishPoolDataNotify
                case 5849: return 5834; // FishBiteRsp
                case 5907: return 5959; // ChangeWidgetBackgroundActiveStateReq
                case 5928: return 5917; // FireworksLaunchDataNotify
                case 5929: return 6062; // ReformFireworksRsp
                case 5942: return 5952; // WidgetWeatherWizardDataNotify
                case 5960: return 5907; // WidgetUpdateExtraCDReq
                case 5995: return 5910; // RemotePlayerWidgetNotify
                case 6033: return 5908; // FireworksReformDataNotify
                case 6036: return 6074; // ReformFireworksReq
                case 6056: return 6076; // WidgetUpdateExtraCDRsp
                case 6057: return 5936; // LaunchFireworksRsp
                case 6060: return 5955; // ChangeWidgetBackgroundActiveStateRsp
                case 6090: return 5977; // LaunchFireworksReq
                case 6092: return 5932; // AllWidgetBackgroundActiveStateNotify
                case 6103: return 6161; // ToTheMoonAddObstacleRsp
                case 6107: return 6200; // ToTheMoonEnterSceneRsp
                case 6112: return 6156; // ToTheMoonPingNotify
                case 6121: return 6143; // ToTheMoonAddObstacleReq
                case 6135: return 6119; // ToTheMoonEnterSceneReq
                case 6172: return 6179; // ToTheMoonQueryPathReq
                case 6173: return 6178; // ToTheMoonRemoveObstacleRsp
                case 6190: return 6147; // ToTheMoonRemoveObstacleReq
                case 6198: return 6130; // ToTheMoonQueryPathRsp
                case 6199: return 6157; // ToTheMoonObstaclesModifyNotify
                case 6201: return 6206; // StoreCustomDungeonRsp
                case 6203: return 6224; // BackPlayCustomDungeonOfficialReq
                case 6204: return 6220; // BackPlayCustomDungeonOfficialRsp
                case 6207: return 6235; // SaveCustomDungeonRoomRsp
                case 6209: return 6205; // GetCustomDungeonReq
                case 6210: return 6203; // LikeCustomDungeonReq
                case 6211: return 6213; // OutStuckCustomDungeonReq
                case 6212: return 6210; // GetStoreCustomDungeonRsp
                case 6213: return 6250; // StoreCustomDungeonReq
                case 6214: return 6202; // PublishCustomDungeonRsp
                case 6215: return 6239; // SearchCustomDungeonRsp
                case 6217: return 6228; // CustomDungeonRecoverNotify
                case 6218: return 6241; // EnterCustomDungeonRsp
                case 6219: return 6233; // LikeCustomDungeonRsp
                case 6220: return 6215; // RemoveCustomDungeonRsp
                case 6221: return 6236; // CustomDungeonOfficialNotify
                case 6222: return 6217; // ChangeCustomDungeonRoomReq
                case 6223: return 6230; // CustomDungeonUpdateNotify
                case 6225: return 6222; // SaveCustomDungeonRoomReq
                case 6226: return 6242; // EnterCustomDungeonReq
                case 6227: return 6211; // GetCustomDungeonRsp
                case 6233: return 6201; // SearchCustomDungeonReq
                case 6234: return 6238; // OutStuckCustomDungeonRsp
                case 6235: return 6221; // GetRecommendCustomDungeonReq
                case 6236: return 6225; // CustomDungeonBattleRecordNotify
                case 6237: return 6209; // ExitCustomDungeonTryRsp
                case 6240: return 6248; // ReplayCustomDungeonRsp
                case 6241: return 6208; // TryCustomDungeonRsp
                case 6242: return 6245; // PublishCustomDungeonReq
                case 6243: return 6214; // ReplayCustomDungeonReq
                case 6244: return 6212; // ChangeCustomDungeonRoomRsp
                case 6245: return 6218; // TryCustomDungeonReq
                case 6247: return 6243; // ExitCustomDungeonTryReq
                case 6248: return 6237; // GetRecommendCustomDungeonRsp
                case 6249: return 6234; // RemoveCustomDungeonReq
                case 6250: return 6204; // GetStoreCustomDungeonReq
                case 6268: return 6291; // DeathZoneInfoNotify
                case 6275: return 6272; // PlayerDeathZoneNotify
                case 6276: return 6292; // RegionalPlayInfoNotify
                case 6307: return 6335; // GetUgcBriefInfoRsp
                case 6314: return 6302; // CheckUgcStateRsp
                case 6318: return 6341; // GetUgcRsp
                case 6320: return 6315; // CheckUgcUpdateReq
                case 6322: return 6317; // SaveUgcRsp
                case 6325: return 6322; // GetUgcBriefInfoReq
                case 6326: return 6342; // GetUgcReq
                case 6329: return 6344; // SaveUgcReq
                case 6341: return 6308; // UgcNotify
                case 6342: return 6345; // CheckUgcStateReq
                case 6344: return 6312; // PublishUgcReq
                case 6345: return 6318; // CheckUgcUpdateRsp
                case 6349: return 6334; // PublishUgcRsp
                case 6368: return 6391; // AddAranaraCollectionNotify
                case 6370: return 6365; // CataLogFinishedGlobalWatcherAllDataNotify
                case 6376: return 6392; // AranaraCollectionDataNotify
                case 6395: return 6368; // CataLogNewFinishedGlobalWatcherNotify
                case 6536: return 6408; // CoinCollectPrepareStageNotify
                case 7011: return 7268; // GCGTCTavernInfoNotify
                case 7044: return 7011; // GCGDSChangeCardBackRsp
                case 7049: return 7767; // GCGDSCardFaceUnlockNotify
                case 7051: return 7486; // GCGGrowthLevelTakeRewardReq
                case 7055: return 7183; // GCGLevelChallengeNotify
                case 7073: return 7852; // GCGBossChallengeUpdateNotify
                case 7104: return 7713; // GCGDSDeckSaveReq
                case 7105: return 7532; // GCGClientSettleRsp
                case 7107: return 7664; // GCGOperationReq
                case 7122: return 7850; // GCGDSDataNotify
                case 7124: return 7600; // GCGSettleOptionReq
                case 7131: return 7257; // GCGDSChangeCurDeckReq
                case 7136: return 7248; // GCGWorldPlayerGCGStateRsp
                case 7169: return 7010; // GCGDSChangeCardFaceReq
                case 7184: return 7907; // GCGTCTavernChallengeUpdateNotify
                case 7204: return 7370; // GCGWorldChallengeUnlockNotify
                case 7206: return 7375; // GCGWorldPlayerGCGStateReq
                case 7224: return 7576; // GCGHeartBeatNotify
                case 7237: return 7034; // GCGAskDuelReq
                case 7239: return 7658; // GCGGameCreateFailReasonNotify
                case 7251: return 7997; // GCGInviteGuestBattleRsp
                case 7265: return 7078; // GCGDSCardBackUnlockNotify
                case 7268: return 7270; // GCGChallengeUpdateNotify
                case 7269: return 7459; // GCGDSDeckSaveRsp
                case 7290: return 7267; // GCGTavernNpcInfoNotify
                case 7292: return 7680; // GCGDSChangeCardBackReq
                case 7294: return 7356; // GCGTCTavernChallengeDataNotify
                case 7301: return 7908; // GCGDSChangeCurDeckRsp
                case 7304: return 7754; // GCGApplyInviteBattleRsp
                case 7305: return 7751; // GCGDSDeckUpdateNotify
                case 7319: return 7739; // GCGBasicDataNotify
                case 7328: return 7027; // GCGTCInviteRsp
                case 7331: return 7549; // GCGDSChangeCardFaceRsp
                case 7333: return 7860; // GCGDSFieldUnlockNotify
                case 7358: return 7244; // GCGDSCardNumChangeNotify
                case 7409: return 7877; // GCGSkillPreviewAskRsp
                case 7416: return 7039; // GCGBackToDuelRsp
                case 7432: return 7463; // GCGDSChangeDeckNameReq
                case 7433: return 7369; // GCGInitFinishRsp
                case 7444: return 7036; // GCGDSChangeFieldRsp
                case 7477: return 7934; // GCGGrowthLevelRewardNotify
                case 7503: return 7659; // GCGSkillPreviewNotify
                case 7506: return 7035; // GCGClientSettleReq
                case 7509: return 7858; // GCGSkillPreviewAskReq
                case 7516: return 7299; // GCGMessagePackNotify
                case 7524: return 7067; // GCGDSDeleteDeckRsp
                case 7539: return 7824; // GCGGameBriefDataNotify
                case 7541: return 7788; // GCGDSChangeFieldReq
                case 7581: return 7001; // GCGDSTakeCardProficiencyRewardReq
                case 7595: return 7964; // GCGStartChallengeReq
                case 7600: return 7285; // GCGOperationRsp
                case 7615: return 7058; // GCGWeekChallengeInfoNotify
                case 7619: return 7727; // GCGStartChallengeByCheckRewardRsp
                case 7629: return 7004; // GCGLevelChallengeFinishNotify
                case 7648: return 7993; // GCGLevelChallengeDeleteNotify
                case 7666: return 7226; // GCGGameMaxNotify
                case 7670: return 7602; // GCGGrowthLevelTakeRewardRsp
                case 7680: return 7969; // GCGDSCardProficiencyNotify
                case 7684: return 7348; // GCGInitFinishReq
                case 7692: return 7448; // GCGInviteBattleNotify
                case 7729: return 7015; // GCGBackToDuelReq
                case 7730: return 7032; // GCGApplyInviteBattleReq
                case 7732: return 7427; // GCGDSDeckUnlockNotify
                case 7735: return 7110; // GCGSettleOptionRsp
                case 7736: return 7343; // GCGGrowthLevelNotify
                case 7763: return 7999; // GCGStartChallengeRsp
                case 7769: return 7562; // GCGSettleNotify
                case 7778: return 7982; // GCGStartChallengeByCheckRewardReq
                case 7783: return 7202; // GCGInviteGuestBattleReq
                case 7796: return 7769; // GCGDSCurDeckChangeNotify
                case 7820: return 7984; // GCGApplyInviteBattleNotify
                case 7839: return 7135; // GCGDSBanCardNotify
                case 7851: return 7066; // GCGDSCardFaceUpdateNotify
                case 7869: return 7564; // GCGAskDuelRsp
                case 7876: return 7586; // GCGResourceStateNotify
                case 7889: return 7718; // GCGDSTakeCardProficiencyRewardRsp
                case 7916: return 7617; // GCGDSChangeDeckNameRsp
                case 7922: return 7341; // GCGTCInviteReq
                case 7932: return 7071; // GCGDebugReplayNotify
                case 7988: return 7821; // GCGDSDeleteDeckReq
                case 8004: return 8225; // SummerTimeV2RestartBoatGalleryRsp
                case 8013: return 8297; // SumoEnterDungeonNotify
                case 8014: return 8730; // GetRogueDairyRepairInfoReq
                case 8017: return 8329; // ActivitySetGiftWishReq
                case 8022: return 8177; // CrystalLinkRestartDungeonReq
                case 8026: return 8840; // IrodoriScanEntityRsp
                case 8028: return 8359; // RefreshRogueDiaryCardRsp
                case 8036: return 8146; // StartRogueNormalCellChallengeRsp
                case 8038: return 8678; // RogueDiaryReviveAvatarReq
                case 8043: return 8043; // ActivityTakeAllScoreRewardRsp
                case 8045: return 8213; // LunaRiteTakeSacrificeRewardReq
                case 8054: return 8166; // MichiaeMatsuriStartDarkChallengeReq
                case 8057: return 8409; // IrodoriChessUnequipCardReq
                case 8061: return 8050; // IrodoriMasterGalleryCgEndNotify
                case 8062: return 8492; // PotionRestartDungeonRsp
                case 8065: return 8133; // TriggerRoguelikeRuneRsp
                case 8066: return 8903; // MistTrialGetDungeonExhibitionDataRsp
                case 8067: return 8804; // PotionResetChallengeRsp
                case 8072: return 8581; // MichiaeMatsuriRemoveChallengeMarkNotify
                case 8077: return 8701; // SummerTimeFloatSignalPositionNotify
                case 8078: return 8101; // PlantFlowerHaveRecvFlowerNotify
                case 8080: return 8215; // LunaRiteSacrificeRsp
                case 8081: return 8526; // ChannelerSlabEnterLoopDungeonRsp
                case 8084: return 8653; // BounceConjuringSettleNotify
                case 8085: return 8529; // SelectRoguelikeDungeonCardReq
                case 8088: return 8841; // HideAndSeekSelectSkillRsp
                case 8093: return 8250; // BartenderFinishLevelRsp
                case 8095: return 8827; // ActivityAcceptGiveGiftReq
                case 8096: return 8838; // SpiceActivityFinishMakeSpiceReq
                case 8107: return 8664; // ChannelerSlabWearBuffReq
                case 8109: return 8871; // DigActivityMarkPointChangeNotify
                case 8113: return 8900; // ActivityAcceptAllGiveGiftReq
                case 8114: return 8049; // EchoShellTakeRewardReq
                case 8119: return 8741; // CrystalLinkRestartDungeonRsp
                case 8120: return 8844; // ActivityGetRecvGiftListRsp
                case 8125: return 8870; // BartenderCompleteOrderRsp
                case 8126: return 8132; // PlantFlowerGetFriendFlowerWishListReq
                case 8127: return 8125; // ResetRogueDiaryPlayReq
                case 8129: return 8926; // IrodoriFillPoetryReq
                case 8132: return 8771; // ActivityAcceptAllGiveGiftRsp
                case 8135: return 8320; // MistTrialDungeonFailNotify
                case 8138: return 8720; // SelectRoguelikeDungeonCardRsp
                case 8139: return 8905; // RoguelikeGiveUpRsp
                case 8142: return 8951; // WinterCampEditSnowmanCombinationRsp
                case 8143: return 8794; // WinterCampGetRecvItemListReq
                case 8144: return 8157; // WinterCampEditSnowmanCombinationReq
                case 8145: return 8007; // ActivityReadPushTipsReq
                case 8147: return 8628; // CrystalLinkEnterDungeonRsp
                case 8148: return 8740; // DoRoguelikeDungeonCardGachaReq
                case 8149: return 8960; // WinterCampRaceScoreNotify
                case 8150: return 8891; // EchoShellUpdateNotify
                case 8151: return 8282; // UpgradeRoguelikeShikigamiReq
                case 8153: return 8310; // WinterCampTakeBattleRewardRsp
                case 8154: return 8878; // WinterCampStageInfoChangeNotify
                case 8159: return 8279; // StartRogueDiaryRoomReq
                case 8163: return 8540; // GachaActivityResetReq
                case 8165: return 8243; // IrodoriMasterStartGalleryReq
                case 8178: return 8302; // QuickOpenActivityReq
                case 8183: return 8062; // HideAndSeekSelectSkillReq
                case 8185: return 8966; // WinterCampAcceptGiveItemRsp
                case 8186: return 8784; // LuminanceStoneChallengeSettleNotify
                case 8191: return 8855; // EnterChessDungeonReq
                case 8192: return 8672; // PotionSaveDungeonResultReq
                case 8193: return 8744; // SumoSelectTeamAndEnterDungeonRsp
                case 8195: return 8811; // LunaRiteHintPointReq
                case 8201: return 8399; // RogueSwitchAvatarReq
                case 8203: return 8692; // ChannelerSlabStageOneoffDungeonNotify
                case 8205: return 8247; // StartRogueNormalCellChallengeReq
                case 8207: return 8038; // ClearRoguelikeCurseNotify
                case 8213: return 8382; // LunaRiteAreaFinishNotify
                case 8214: return 8276; // SumoRestartDungeonRsp
                case 8215: return 8978; // SumoSelectTeamAndEnterDungeonReq
                case 8216: return 8523; // SpiceActivityProcessFoodReq
                case 8218: return 8560; // ViewLanternProjectionTipsReq
                case 8222: return 8544; // RoguelikeEffectDataNotify
                case 8224: return 8576; // ChannelerSlabLoopDungeonChallengeInfoNotify
                case 8226: return 8517; // LanternRiteDoFireworksReformReq
                case 8227: return 8122; // BartenderFinishLevelReq
                case 8231: return 8435; // SalvagePreventSettleNotify
                case 8233: return 8178; // ActivityGiveFriendGiftReq
                case 8237: return 8034; // ChannelerSlabTakeoffBuffRsp
                case 8239: return 8658; // MistTrialSelectAvatarAndEnterDungeonRsp
                case 8240: return 8416; // GachaActivityResetRsp
                case 8242: return 8485; // StartRogueEliteCellChallengeReq
                case 8253: return 8355; // ActivityGetFriendGiftWishListRsp
                case 8257: return 8342; // GachaActivityNextStageReq
                case 8259: return 8839; // DisableRoguelikeTrapNotify
                case 8261: return 8945; // PotionEnterDungeonReq
                case 8264: return 8735; // WinterCampGiveFriendItemRsp
                case 8268: return 8270; // ChannelerSlabOneOffDungeonInfoRsp
                case 8270: return 8662; // PlantFlowerGetRecvFlowerListReq
                case 8273: return 8575; // PotionRestartDungeonReq
                case 8277: return 8936; // LanternRiteEndFireworksReformReq
                case 8279: return 8065; // RefreshRoguelikeDungeonCardReq
                case 8280: return 8791; // TryEnterNextRogueDiaryDungeonReq
                case 8281: return 8288; // WinterCampSetWishListRsp
                case 8291: return 8434; // SumoDungeonSettleNotify
                case 8305: return 8751; // BuoyantCombatSettleNotify
                case 8306: return 8357; // EquipRoguelikeRuneReq
                case 8308: return 8884; // IrodoriChessEquipCardRsp
                case 8313: return 8022; // SumoSaveTeamReq
                case 8319: return 8739; // SumoSaveTeamRsp
                case 8324: return 8768; // RoguelikeMistClearNotify
                case 8325: return 8179; // CrystalLinkEnterDungeonReq
                case 8326: return 8216; // MusicGameStartRsp
                case 8334: return 8269; // RetryCurRogueDiaryDungeonRsp
                case 8340: return 8792; // IrodoriMasterGallerySettleNotify
                case 8342: return 8194; // WinterCampTriathlonSettleNotify
                case 8343: return 8061; // RogueDiaryReviveAvatarRsp
                case 8345: return 8632; // MichiaeMatsuriUnlockCrystalSkillReq
                case 8346: return 8073; // SummerTimeV2RestartDungeonReq
                case 8347: return 8093; // RogueDungeonPlayerCellChangeNotify
                case 8349: return 8994; // RefreshRoguelikeDungeonCardRsp
                case 8351: return 8738; // SumoSwitchTeamReq
                case 8352: return 8152; // EnterRogueDiaryDungeonRsp
                case 8353: return 8440; // GiveUpRoguelikeDungeonCardReq
                case 8356: return 8466; // SummerTimeSprintBoatRestartRsp
                case 8357: return 8021; // WinterCampGetCanGiveFriendItemRsp
                case 8362: return 8487; // TryEnterNextRogueDiaryDungeonRsp
                case 8363: return 8483; // RogueFinishRepairReq
                case 8367: return 8796; // SalvagePreventRestartReq
                case 8372: return 8162; // ActivityTakeAllScoreRewardReq
                case 8373: return 8116; // MistTrialSettleNotify
                case 8374: return 8229; // PlantFlowerGetRecvFlowerListRsp
                case 8377: return 8331; // PotionResetChallengeReq
                case 8381: return 8495; // IrodoriMasterStartGalleryRsp
                case 8383: return 8300; // PlantFlowerAcceptGiveFlowerReq
                case 8385: return 8881; // StartRogueDiaryPlayRsp
                case 8386: return 8559; // PlantFlowerGiveFriendFlowerRsp
                case 8387: return 8516; // WinterCampAcceptGiveItemReq
                case 8396: return 8520; // SalvageEscortRestartReq
                case 8397: return 8895; // LunaRiteTakeSacrificeRewardRsp
                case 8398: return 8696; // RetryCurRogueDiaryDungeonReq
                case 8401: return 8484; // WinterCampTakeBattleRewardReq
                case 8402: return 8142; // BartenderStartLevelRsp
                case 8406: return 8820; // MusicGameStartReq
                case 8407: return 8719; // SpiceActivityGivingRecordNotify
                case 8409: return 8877; // ChannelerSlabOneOffDungeonInfoReq
                case 8410: return 8111; // SummerTimeSprintBoatRestartReq
                case 8411: return 8962; // ViewLanternProjectionLevelTipsRsp
                case 8412: return 8965; // TriggerRoguelikeCurseNotify
                case 8414: return 8880; // BartenderCompleteOrderReq
                case 8416: return 8039; // ChannelerSlabSaveAssistInfoReq
                case 8419: return 8220; // StartRogueDiaryPlayReq
                case 8421: return 8531; // RoguelikeTakeStageFirstPassRewardReq
                case 8423: return 8957; // WinterCampGetRecvItemListRsp
                case 8426: return 8953; // MichiaeMatsuriStartBossChallengeRsp
                case 8430: return 8289; // DigActivityChangeGadgetStateRsp
                case 8433: return 8369; // ChannelerSlabLoopDungeonTakeScoreRewardRsp
                case 8442: return 8249; // BartenderCancelOrderReq
                case 8447: return 8656; // GetRogueDairyRepairInfoRsp
                case 8449: return 8150; // MichiaeMatsuriInteractStatueRsp
                case 8450: return 8706; // GachaActivityPercentNotify
                case 8452: return 8631; // ChannelerSlabCheckEnterLoopDungeonRsp
                case 8457: return 8988; // RoguelikeSelectAvatarAndEnterDungeonReq
                case 8459: return 8620; // UpdateSalvageBundleMarkRsp
                case 8462: return 8230; // BartenderGetFormulaReq
                case 8463: return 8822; // TriggerRoguelikeRuneReq
                case 8464: return 8372; // DigActivityChangeGadgetStateReq
                case 8465: return 8455; // LunaRiteGroupBundleRegisterNotify
                case 8466: return 8167; // CommonPlayerTipsNotify
                case 8472: return 8144; // DoRoguelikeDungeonCardGachaRsp
                case 8476: return 8885; // SummerTimeV2RestartBoatGalleryReq
                case 8481: return 8946; // SpiceActivityFinishMakeSpiceRsp
                case 8482: return 8679; // PotionEnterDungeonRsp
                case 8497: return 8762; // GiveUpRoguelikeDungeonCardRsp
                case 8499: return 8798; // SalvageEscortSettleNotify
                case 8502: return 8047; // ActivityAcceptGiveGiftRsp
                case 8503: return 8659; // ChannelerSlabLoopDungeonSelectConditionReq
                case 8507: return 8590; // BartenderStartLevelReq
                case 8508: return 8193; // MistTrialGetChallengeMissionRsp
                case 8509: return 8858; // ChannelerSlabLoopDungeonSelectConditionRsp
                case 8511: return 8682; // PlantFlowerGetFriendFlowerWishListRsp
                case 8512: return 8759; // HideAndSeekChooseMapReq
                case 8513: return 8418; // ActivityPushTipsInfoNotify
                case 8514: return 8660; // RogueDiaryTiredAvatarNotify
                case 8516: return 8299; // ChannelerSlabTakeoffBuffReq
                case 8518: return 8200; // LanternRiteStartFireworksReformReq
                case 8523: return 8318; // MichiaeMatsuriGainCrystalExpUpdateNotify
                case 8525: return 8201; // SumoSwitchTeamRsp
                case 8528: return 8605; // RoguelikeEffectViewReq
                case 8531: return 8777; // PotionEnterDungeonNotify
                case 8533: return 8501; // HideAndSeekChooseMapRsp
                case 8535: return 8503; // RogueFinishRepairRsp
                case 8538: return 8910; // RoguelikeSelectAvatarAndEnterDungeonRsp
                case 8539: return 8824; // ChannelerSlabLoopDungeonTakeFirstPassRewardRsp
                case 8546: return 8238; // EnterIrodoriChessDungeonRsp
                case 8547: return 8420; // PlantFlowerSetFlowerWishReq
                case 8552: return 8182; // RoguelikeTakeStageFirstPassRewardRsp
                case 8554: return 8757; // ActivitySetGiftWishRsp
                case 8555: return 8426; // RoguelikeResourceBonusPropUpdateNotify
                case 8559: return 8330; // ActivityGetCanGiveFriendGiftReq
                case 8560: return 8674; // PlantFlowerGetSeedInfoReq
                case 8561: return 8766; // IrodoriChessEquipCardReq
                case 8567: return 8554; // PlantFlowerAcceptGiveFlowerRsp
                case 8569: return 8468; // WinterCampTriathlonRestartRsp
                case 8572: return 8102; // WinterCampGiveFriendItemReq
                case 8574: return 8499; // ActivityReadPushTipsRsp
                case 8580: return 8952; // WinterCampRecvItemNotify
                case 8583: return 8527; // ActivityTakeScoreRewardRsp
                case 8588: return 8874; // MichiaeMatsuriUnlockCrystalSkillRsp
                case 8589: return 8498; // ChannelerSlabLoopDungeonTakeFirstPassRewardReq
                case 8590: return 8623; // ViewLanternProjectionTipsRsp
                case 8592: return 8293; // EnterChessDungeonRsp
                case 8597: return 8096; // RogueDiaryDungeonInfoNotify
                case 8600: return 8285; // ChannelerSlabWearBuffRsp
                case 8602: return 8525; // RogueDiaryCoinAddNotify
                case 8607: return 8014; // WinterCampTakeExploreRewardReq
                case 8608: return 8835; // IrodoriEditFlowerCombinationReq
                case 8610: return 8494; // GachaActivityCreateRobotRsp
                case 8612: return 8725; // SumoRestartDungeonReq
                case 8614: return 8316; // GachaActivityCreateRobotReq
                case 8617: return 8438; // TryInterruptRogueDiaryDungeonReq
                case 8626: return 8731; // WinterCampAcceptAllGiveItemRsp
                case 8639: return 8437; // RoguelikeEffectViewRsp
                case 8640: return 8567; // SumoLeaveDungeonNotify
                case 8641: return 8084; // RogueDiaryRepairInfoNotify
                case 8642: return 8851; // RogueCellUpdateNotify
                case 8647: return 8772; // RogueResumeDungeonRsp
                case 8651: return 8451; // SummerTimeSprintBoatSettleNotify
                case 8652: return 8657; // EnterRoguelikeDungeonNotify
                case 8653: return 8986; // BlitzRushParkourRestartReq
                case 8657: return 8171; // LanternRiteDoFireworksReformRsp
                case 8659: return 8893; // FindHilichurlAcceptQuestNotify
                case 8660: return 8442; // RoguelikeGiveUpReq
                case 8666: return 8226; // MistTrialSelectAvatarAndEnterDungeonReq
                case 8673: return 8360; // MusicGameSettleRsp
                case 8680: return 8969; // StartBuoyantCombatGalleryRsp
                case 8681: return 8296; // TreasureMapHostInfoNotify
                case 8684: return 8348; // ChannelerSlabLoopDungeonTakeScoreRewardReq
                case 8686: return 8698; // BartenderCancelLevelRsp
                case 8688: return 8579; // PotionSaveDungeonResultRsp
                case 8696: return 8373; // ActivityGiveFriendGiftRsp
                case 8703: return 8650; // MichiaeMatsuriStartBossChallengeReq
                case 8704: return 8932; // FinishLanternProjectionReq
                case 8705: return 8815; // EquipRoguelikeRuneRsp
                case 8709: return 9000; // PhotoActivityClientViewReq
                case 8713: return 8971; // FinishLanternProjectionRsp
                case 8716: return 8545; // PlantFlowerGetCanGiveFriendFlowerReq
                case 8717: return 8592; // EnterIrodoriChessDungeonReq
                case 8718: return 8008; // MichiaeMatsuriInteractStatueReq
                case 8725: return 8995; // ActivityGetRecvGiftListReq
                case 8726: return 8203; // MichiaeMatsuriRemoveChestMarkNotify
                case 8729: return 8015; // ChannelerSlabOneOffDungeonInfoNotify
                case 8732: return 8427; // StartBuoyantCombatGalleryReq
                case 8733: return 8118; // ActivityHaveRecvGiftNotify
                case 8734: return 8857; // ChannelerSlabStageActiveChallengeIndexNotify
                case 8740: return 8983; // MistTrialGetDungeonExhibitionDataReq
                case 8745: return 8286; // ChannelerSlabCheckEnterLoopDungeonReq
                case 8748: return 8311; // ReserveRogueDiaryAvatarReq
                case 8753: return 8380; // WinterCampSetWishListReq
                case 8756: return 8415; // BartenderLevelProgressNotify
                case 8758: return 8303; // ViewLanternProjectionLevelTipsReq
                case 8764: return 8912; // PlantFlowerGetSeedInfoRsp
                case 8765: return 8394; // LunaRiteHintPointRsp
                case 8766: return 8273; // PlantFlowerGetCanGiveFriendFlowerRsp
                case 8767: return 8931; // IrodoriScanEntityReq
                case 8768: return 8354; // GachaActivityTakeRewardRsp
                case 8771: return 8446; // BartenderCancelLevelReq
                case 8772: return 8381; // SpiceActivityProcessFoodRsp
                case 8777: return 8104; // LanternRiteTakeSkinRewardRsp
                case 8780: return 8464; // FishingGallerySettleNotify
                case 8781: return 8508; // SummerTimeFloatSignalUpdateNotify
                case 8787: return 8763; // LunaRiteHintPointRemoveNotify
                case 8788: return 8684; // PlantFlowerEditFlowerCombinationRsp
                case 8791: return 8379; // MichiaeMatsuriStartDarkChallengeRsp
                case 8793: return 8806; // StartRogueDiaryRoomRsp
                case 8795: return 8275; // RogueResumeDungeonReq
                case 8797: return 8265; // EchoShellTakeRewardRsp
                case 8799: return 8901; // ReserveRogueDiaryAvatarRsp
                case 8805: return 8717; // LunaRiteSacrificeReq
                case 8806: return 8642; // ActivityGetFriendGiftWishListReq
                case 8808: return 8240; // PlantFlowerAcceptAllGiveFlowerReq
                case 8817: return 8537; // IrodoriChessUnequipCardRsp
                case 8825: return 8136; // MichiaeMatsuriDarkPressureLevelUpdateNotify
                case 8826: return 8398; // LanternRiteTakeSkinRewardReq
                case 8833: return 8454; // IrodoriEditFlowerCombinationRsp
                case 8837: return 8254; // BartenderCancelOrderRsp
                case 8838: return 8704; // ResumeRogueDiaryDungeonReq
                case 8842: return 8975; // BartenderGetFormulaRsp
                case 8843: return 8396; // PlantFlowerEditFlowerCombinationReq
                case 8844: return 8524; // WinterCampTriathlonRestartReq
                case 8846: return 8930; // PlantFlowerGiveFriendFlowerReq
                case 8848: return 8374; // ActivityGetCanGiveFriendGiftRsp
                case 8851: return 8066; // SetLimitOptimizationNotify
                case 8854: return 8847; // PhotoActivityFinishRsp
                case 8858: return 8408; // CrystalLinkDungeonInfoNotify
                case 8860: return 8685; // PlantFlowerTakeSeedRewardRsp
                case 8862: return 8652; // LanternRiteStartFireworksReformRsp
                case 8869: return 8564; // ChannelerSlabEnterLoopDungeonReq
                case 8870: return 8153; // SummerTimeV2BoatSettleNotify
                case 8880: return 8076; // IrodoriFillPoetryRsp
                case 8882: return 8677; // QuickOpenActivityRsp
                case 8888: return 8313; // PlantFlowerAcceptAllGiveFlowerRsp
                case 8892: return 8998; // MusicGameSettleReq
                case 8893: return 8048; // MistTrialGetChallengeMissionReq
                case 8895: return 8726; // RogueDiaryDungeonSettleNotify
                case 8901: return 8644; // FindHilichurlFinishSecondQuestNotify
                case 8903: return 8234; // TryInterruptRogueDiaryDungeonRsp
                case 8910: return 8324; // PlantFlowerSetFlowerWishRsp
                case 8915: return 8445; // RogueSwitchAvatarRsp
                case 8918: return 8914; // GachaActivityNextStageRsp
                case 8919: return 8241; // GachaActivityUpdateElemNotify
                case 8921: return 8395; // PhotoActivityFinishReq
                case 8924: return 8481; // TanukiTravelFinishGuideQuestNotify
                case 8925: return 8057; // RoguelikeCardGachaNotify
                case 8927: return 8210; // RoguelikeRefreshCardCostUpdateNotify
                case 8930: return 8853; // GachaActivityTakeRewardReq
                case 8932: return 8071; // ChannelerSlabSaveAssistInfoRsp
                case 8933: return 8414; // LanternRiteEndFireworksReformRsp
                case 8935: return 8610; // SumoSetNoSwitchPunishTimeNotify
                case 8937: return 8208; // WinterCampGetFriendWishListRsp
                case 8938: return 8493; // SalvagePreventRestartRsp
                case 8943: return 8627; // EnterRogueDiaryDungeonReq
                case 8944: return 8453; // BlitzRushParkourRestartRsp
                case 8946: return 8764; // WinterCampGetFriendWishListReq
                case 8947: return 8175; // RogueHealAvatarsReq
                case 8948: return 8943; // ResetRogueDiaryPlayRsp
                case 8949: return 8252; // RogueHealAvatarsRsp
                case 8958: return 8967; // StartRogueEliteCellChallengeRsp
                case 8959: return 8553; // SalvageEscortRestartRsp
                case 8964: return 8443; // WinterCampGetCanGiveFriendItemReq
                case 8966: return 8314; // UpgradeRoguelikeShikigamiRsp
                case 8967: return 8906; // UpdateSalvageBundleMarkReq
                case 8968: return 8611; // PlantFlowerTakeSeedRewardReq
                case 8971: return 8127; // ActivityTakeScoreRewardReq
                case 8973: return 8629; // RoguelikeRuneRecordUpdateNotify
                case 8978: return 8323; // WinterCampTakeExploreRewardRsp
                case 8982: return 8029; // ActivityDisableTransferPointInteractionNotify
                case 8983: return 8963; // PhotoActivityClientViewRsp
                case 8989: return 8332; // ResumeRogueDiaryDungeonRsp
                case 8991: return 8868; // RefreshRogueDiaryCardReq
                case 8996: return 8686; // SummerTimeV2RestartDungeonRsp
                case 9000: return 8538; // WinterCampAcceptAllGiveItemReq
                case 9072: return 9079; // AllShareCDDataNotify
                case 20005: return 22734; // MuqadasPotionDungeonSettleNotify
                case 20011: return 24162; // MuqadasPotionCaptureWeaknessReq
                case 20066: return 22216; // FungusRenameRsp
                case 20086: return 20454; // VintagePresentFinishNotify
                case 20137: return 24991; // BrickBreakerQuitReq
                case 20302: return 21015; // EndCoinCollectPlaySingleModeRsp
                case 20324: return 22325; // SceneGalleryVintageHuntingSettleNotify
                case 20622: return 20712; // SingleStartBrickBreakerRsp
                case 20626: return 22367; // VintageMarketStoreUnlockSlotReq
                case 20667: return 24959; // BrickBreakerQuitRsp
                case 20676: return 21911; // VintageMarketFinishStorePlayReq
                case 20681: return 24427; // GravenInnocenceRaceSettleNotify
                case 20702: return 23400; // GravenInnocenceEditCarveCombinationRsp
                case 20731: return 24309; // WindFieldRestartDungeonReq
                case 20733: return 23327; // VintageMarketStoreUnlockSlotRsp
                case 20754: return 20380; // TreasureSeelieCollectOrbsNotify
                case 20846: return 22958; // VintageDecorateBoothReq
                case 20930: return 23817; // CoinCollectPrepareRsp
                case 20993: return 21588; // VintageDecorateBoothRsp
                case 21008: return 20791; // EnterFungusFighterPlotDungeonRsp
                case 21025: return 23953; // GearActivityStartPlayGearRsp
                case 21054: return 23793; // GearActivityFinishPlayPictureReq
                case 21208: return 20780; // MuqadasPotionRestartDungeonRsp
                case 21214: return 21667; // CoinCollectChooseSkillReq
                case 21244: return 24124; // CoinCollectCheckDoubleStartPlayRsp
                case 21248: return 21624; // VintageMarketStoreChooseStrategyReq
                case 21266: return 22075; // FungusFighterUseBackupFungusReq
                case 21269: return 23748; // EffigyChallengeV2ChooseSkillReq
                case 21294: return 22424; // CoinCollectCheckDoubleStartPlayReq
                case 21570: return 23309; // FungusFighterTrainingSelectFungusRsp
                case 21593: return 22876; // EnterFungusFighterTrainingDungeonRsp
                case 21700: return 21834; // VintageMarketStoreViewStrategyReq
                case 21718: return 23071; // CoinCollectPrepareReq
                case 21749: return 23545; // FungusCultivateReq
                case 21750: return 22391; // GravenInnocencePhotoFinishReq
                case 21780: return 21649; // VintageHuntingStartGalleryReq
                case 21800: return 20776; // GearActivityFinishPlayGearRsp
                case 21804: return 22650; // MuqadasPotionActivityEnterDungeonRsp
                case 21814: return 22881; // VintageMarketStoreViewStrategyRsp
                case 21834: return 20236; // GearActivityFinishPlayGearReq
                case 21851: return 20453; // GearActivityFinishPlayPictureRsp
                case 21880: return 20056; // GravenInnocenceRaceRestartRsp
                case 21951: return 22068; // VintageHuntingStartGalleryRsp
                case 21961: return 21512; // InstableSprayLevelFinishNotify
                case 22006: return 22498; // FungusRenameReq
                case 22112: return 22269; // SingleRestartBrickBreakerRsp
                case 22130: return 23017; // VintageMarketStartStorePlayRsp
                case 22174: return 23920; // FungusFighterPlotInfoNotify
                case 22181: return 23763; // VintageMarketDeliverItemRsp
                case 22367: return 21382; // RestartCoinCollectPlaySingleModeReq
                case 22391: return 20087; // MuqadasPotionRestartDungeonReq
                case 22448: return 23618; // EffigyChallengeV2ChooseSkillRsp
                case 22509: return 23589; // CoinCollectInterruptPlayRsp
                case 22591: return 20232; // BrickBreakerTwiceStartRsp
                case 22704: return 20021; // SingleRestartBrickBreakerReq
                case 22830: return 21839; // VintageCampStageFinishNotify
                case 22835: return 24761; // EffigyChallengeV2DungeonInfoNotify
                case 22864: return 22447; // VintageMarketStartStorePlayReq
                case 22882: return 23067; // GravenInnocenceRaceRestartReq
                case 22890: return 20579; // FungusFighterRestartTrainingDungeonRsp
                case 22934: return 20562; // CoinCollectInterruptPlayReq
                case 22991: return 20749; // FungusFighterClearTrainingRuntimeDataRsp
                case 23053: return 23768; // EnterFungusFighterPlotDungeonReq
                case 23107: return 24150; // GravenInnocenceEditCarveCombinationReq
                case 23113: return 23663; // SingleStartBrickBreakerReq
                case 23133: return 23128; // CharAmusementSettleNotify
                case 23141: return 21131; // VintageMarketDeliverItemReq
                case 23147: return 22064; // VintageMarketDividendFinishNotify
                case 23167: return 23467; // EffigyChallengeV2RestartDungeonRsp
                case 23216: return 23963; // EndCoinCollectPlaySingleModeReq
                case 23381: return 24458; // InstableSprayEnterDungeonRsp
                case 23388: return 20011; // GearActivityStartPlayPictureRsp
                case 23428: return 21089; // FungusFighterUseBackupFungusRsp
                case 23462: return 20941; // VintageMarketFinishStorePlayRsp
                case 23467: return 20589; // GearActivityStartPlayGearReq
                case 23489: return 21069; // EffigyChallengeV2EnterDungeonReq
                case 23532: return 20883; // FungusCultivateRsp
                case 23678: return 22725; // InstableSprayRestartDungeonReq
                case 23860: return 23992; // EnterFungusFighterTrainingDungeonReq
                case 23864: return 22577; // GravenInnocencePhotoReminderNotify
                case 23903: return 24249; // FungusFighterTrainingSelectFungusReq
                case 23931: return 23475; // FungusFighterTrainingGallerySettleNotify
                case 23948: return 22418; // GravenInnocencePhotoFinishRsp
                case 23980: return 24273; // FungusFighterRestartTrainingDungeonReq
                case 24028: return 24700; // BrickBreakerTwiceStartReq
                case 24081: return 21366; // MuqadasPotionCaptureWeaknessRsp
                case 24137: return 24267; // FungusFighterClearTrainingRuntimeDataReq
                case 24142: return 21400; // VintagePresentFinishNoify
                case 24152: return 21806; // InstableSpraySwitchTeamRsp
                case 24201: return 24781; // VintageMarketNpcEventFinishNotify
                case 24244: return 24329; // VintageCampGroupBundleRegisterNotify
                case 24312: return 21889; // InstableSprayEnterDungeonReq
                case 24522: return 21293; // EffigyChallengeV2RestartDungeonReq
                case 24550: return 24968; // GearActivityStartPlayPictureReq
                case 24601: return 24127; // IslandPartySettleNotify
                case 24602: return 22772; // MuqadasPotionActivityEnterDungeonReq
                case 24616: return 23886; // BrickBreakerSettleNotify
                case 24674: return 20567; // FungusFighterRuntimeDataNotify
                case 24700: return 23416; // CoinCollectChooseSkillRsp
                case 24712: return 20706; // WindFieldRestartDungeonRsp
                case 24828: return 23294; // RestartCoinCollectPlaySingleModeRsp
                case 24857: return 22524; // InstableSpraySwitchTeamReq
                case 24860: return 21298; // VintageMarketStoreChooseStrategyRsp
                case 24917: return 22024; // EffigyChallengeV2EnterDungeonRsp
                case 24923: return 23617; // InstableSprayRestartDungeonRsp
                default: throw new NotSupportedException("The input Old CmdId is unknown.");
            }
        }

        public static uint NewShiftToOld(uint newCmdId)
            => NewShiftToOld(newCmdId, ReadOnlySpan<byte>.Empty);

        public static uint OldShiftToNew(uint oldCmdId)
            => OldShiftToNew(oldCmdId, ReadOnlySpan<byte>.Empty);
    }
}
#endregion Designer generated code
