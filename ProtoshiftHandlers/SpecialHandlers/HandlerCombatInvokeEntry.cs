// <auto-generated>
//     Generated by csharp-Protoshift.HandlerGenerator. 
// </auto-generated>

#region Designer Generated Code
using Google.Protobuf;

namespace csharp_Protoshift.Enhanced.Handlers.GeneratedCode
{
    public class HandlerCombatInvokeEntry 
        : HandlerBase<NewProtos.CombatInvokeEntry, OldProtos.CombatInvokeEntry>
    {
        #region Base Type
        MessageParser<NewProtos.CombatInvokeEntry> newproto_parser_base = NewProtos.CombatInvokeEntry.Parser;
        MessageParser<OldProtos.CombatInvokeEntry> oldproto_parser_base = OldProtos.CombatInvokeEntry.Parser;
        #endregion
        #region Import Types
        HandlerCombatTypeArgument handler_CombatTypeArgument = new();
        HandlerForwardType handler_ForwardType = new();
        #endregion

        #region Protocol Shift
        public override OldProtos.CombatInvokeEntry NewShiftToOld(NewProtos.CombatInvokeEntry newprotocol)
        {
            OldProtos.CombatInvokeEntry oldprotocol = new();
            oldprotocol.CombatData = newprotocol.CombatData;
            oldprotocol.ForwardType = handler_ForwardType.NewShiftToOld(newprotocol.ForwardType);
            oldprotocol.ArgumentType = handler_CombatTypeArgument.NewShiftToOld(newprotocol.ArgumentType);
            return oldprotocol;
        }

        public override NewProtos.CombatInvokeEntry OldShiftToNew(OldProtos.CombatInvokeEntry oldprotocol)
        {
            NewProtos.CombatInvokeEntry newprotocol = new();
            newprotocol.CombatData = oldprotocol.CombatData;
            newprotocol.ForwardType = handler_ForwardType.OldShiftToNew(oldprotocol.ForwardType);
            newprotocol.ArgumentType = handler_CombatTypeArgument.OldShiftToNew(oldprotocol.ArgumentType);
            return newprotocol;
        }
        #endregion

        public override byte[] NewShiftToOld(byte[] arr, int offset, int length)
            => NewShiftToOld(newproto_parser_base.ParseFrom(arr, offset, length)).ToByteArray();
        public override byte[] NewShiftToOld(ReadOnlySpan<byte> span)
            => NewShiftToOld(newproto_parser_base.ParseFrom(span)).ToByteArray();
        public override ByteString NewShiftToOld(ByteString bytes)
            => NewShiftToOld(newproto_parser_base.ParseFrom(bytes).ToByteString());
        public override byte[] OldShiftToNew(byte[] arr, int offset, int length)
            => OldShiftToNew(oldproto_parser_base.ParseFrom(arr, offset, length)).ToByteArray();
        public override byte[] OldShiftToNew(ReadOnlySpan<byte> span)
            => OldShiftToNew(oldproto_parser_base.ParseFrom(span)).ToByteArray();
        public override ByteString OldShiftToNew(ByteString bytes)
            => OldShiftToNew(oldproto_parser_base.ParseFrom(bytes).ToByteString());

        #region Inner Messages
        #endregion

        #region Inner Enums
        #endregion
    }
}
#endregion Designer generated code
